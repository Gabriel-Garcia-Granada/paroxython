{
  "programs": {
    "tests/data/simple/assignment.py": {
      "timestamp": "ignored",
      "source": "a = b",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:a": [[1,1]],
        "assignment_rhs_atom:b": [[1,1]]
      },
      "taxons": {
        "variable/assignment/": [[1,1]]
      }
    },
    "tests/data/simple/collatz_print.py": {
      "timestamp": "ignored",
      "source": "def print_collatz(n):\n    while n != 1:\n        print(n)\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = 3 * n + 1\n    print(n)",
      "labels": {
        "added_block_label": [[1,8]],
        "added_label_on_line_4": [[4,4]],
        "assignment": [[5,5],[7,7]],
        "assignment_lhs_identifier:n": [[5,5],[7,7]],
        "assignment_rhs_atom:1": [[7,7]],
        "assignment_rhs_atom:2": [[5,5]],
        "assignment_rhs_atom:3": [[7,7]],
        "assignment_rhs_atom:n": [[5,5],[7,7]],
        "binary_operator:Add": [[7,7]],
        "binary_operator:Mod": [[4,4]],
        "binary_operator:Mult": [[7,7]],
        "call_argument:n": [[3,3],[8,8]],
        "comparison_operator:Eq": [[4,4]],
        "comparison_operator:NotEq": [[2,2]],
        "divisibility_test:2": [[4,4]],
        "evolve_state": [[2,7]],
        "function:print_collatz": [[1,8]],
        "function_call:print": [[3,3],[8,8]],
        "function_returning_nothing:print_collatz": [[1,8]],
        "if": [[4,7]],
        "if_else_branch": [[7,7]],
        "if_test_id:n": [[4,4]],
        "if_then_branch": [[5,5]],
        "int_literal": [[2,2],[4,4],[4,4],[5,5],[7,7],[7,7]],
        "literal:Num": [[2,2],[4,4],[4,4],[7,7],[7,7]],
        "suggest_augmented_assignment": [[5,5]],
        "suggest_conditional_expression": [[4,7]],
        "suggest_constant_definition": [[2,2],[7,7]],
        "unknown_label": [[6,6]],
        "while": [[2,7]]
      },
      "taxons": {
        "call/function/builtin/print/": [[3,3],[8,8]],
        "control_flow/conditional/": [[4,7]],
        "control_flow/conditional/else/": [[7,7]],
        "operator/addition/": [[7,7]],
        "operator/multiplication/": [[7,7]],
        "operator/percent/modulo/": [[4,4]],
        "subroutine_definition/procedure/": [[1,8]],
        "test/divisibility/parity/": [[4,4]],
        "test/equality/": [[4,4]],
        "test/equality/not/": [[2,2]],
        "type/elementary/number/integer": [[2,2],[4,4],[4,4],[5,5],[7,7],[7,7]],
        "variable/assignment/": [[5,5],[7,7]]
      }
    },
    "tests/data/simple/fizzbuzz.py": {
      "timestamp": "ignored",
      "source": "for i in range(1, 101):\n    if i % 15 == 0:\n        print(\"FizzBuzz\")\n    elif i % 3 == 0:\n        print(\"Fizz\")\n    elif i % 5 == 0:\n        print(\"Buzz\")\n    else:\n        print(i)",
      "labels": {
        "binary_operator:Mod": [[2,2],[4,4],[6,6]],
        "call_argument:": [[3,3],[5,5],[7,7]],
        "call_argument:1": [[1,1]],
        "call_argument:101": [[1,1]],
        "call_argument:i": [[9,9]],
        "comparison_operator:Eq": [[2,2],[4,4],[6,6]],
        "divisibility_test:15": [[2,2]],
        "divisibility_test:3": [[4,4]],
        "divisibility_test:5": [[6,6]],
        "for:i": [[1,9]],
        "for_range:1:101": [[1,9]],
        "function_call:print": [[3,3],[5,5],[7,7],[9,9]],
        "function_call:range": [[1,1]],
        "if": [[2,9],[4,9],[6,9]],
        "if_elif_branch": [[5,5],[7,7]],
        "if_else_branch": [[9,9]],
        "if_test_id:i": [[2,2],[4,4],[6,6]],
        "if_then_branch": [[3,3]],
        "int_literal": [[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[6,6],[6,6]],
        "literal:Num": [[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[6,6],[6,6]],
        "literal:Str": [[3,3],[5,5],[7,7]],
        "range:1:101": [[1,1]],
        "suggest_constant_definition": [[2,2],[4,4],[6,6]]
      },
      "taxons": {
        "call/function/builtin/print/": [[3,3],[5,5],[7,7],[9,9]],
        "call/function/builtin/range/": [[1,1]],
        "control_flow/conditional/": [[2,9],[4,9],[6,9]],
        "control_flow/conditional/else/": [[9,9]],
        "control_flow/conditional/else/chained/": [[5,5],[7,7]],
        "control_flow/loop/sequential/arithmetic/start/": [[1,9]],
        "operator/percent/modulo/": [[2,2],[4,4],[6,6]],
        "test/equality/": [[2,2],[4,4],[6,6]],
        "type/elementary/number/integer": [[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[6,6],[6,6]],
        "type/elementary/string/": [[3,3],[5,5],[7,7]]
      }
    },
    "tests/data/simple/is_even.py": {
      "timestamp": "ignored",
      "source": "def is_even(n):\n    return n % 2 == 0",
      "labels": {
        "binary_operator:Mod": [[2,2]],
        "comparison_operator:Eq": [[2,2]],
        "divisibility_test:2": [[2,2]],
        "function:is_even": [[1,2]],
        "function_returning_something:is_even": [[1,2]],
        "int_literal": [[2,2],[2,2]],
        "literal:Num": [[2,2],[2,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "operator/percent/modulo/": [[2,2]],
        "subroutine_definition/function/": [[1,2]],
        "subroutine_definition/predicate/": [[1,2]],
        "test/divisibility/parity/": [[2,2]],
        "test/equality/": [[2,2]],
        "type/elementary/number/integer": [[2,2],[2,2]]
      }
    }
  },
  "labels": {
    "assignment": [
      "tests/data/simple/assignment.py",
      "tests/data/simple/collatz_print.py"
    ],
    "assignment_lhs_identifier:a": [
      "tests/data/simple/assignment.py"
    ],
    "assignment_rhs_atom:b": [
      "tests/data/simple/assignment.py"
    ],
    "added_block_label": [
      "tests/data/simple/collatz_print.py"
    ],
    "added_label_on_line_4": [
      "tests/data/simple/collatz_print.py"
    ],
    "assignment_lhs_identifier:n": [
      "tests/data/simple/collatz_print.py"
    ],
    "assignment_rhs_atom:1": [
      "tests/data/simple/collatz_print.py"
    ],
    "assignment_rhs_atom:2": [
      "tests/data/simple/collatz_print.py"
    ],
    "assignment_rhs_atom:3": [
      "tests/data/simple/collatz_print.py"
    ],
    "assignment_rhs_atom:n": [
      "tests/data/simple/collatz_print.py"
    ],
    "binary_operator:Add": [
      "tests/data/simple/collatz_print.py"
    ],
    "binary_operator:Mod": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "binary_operator:Mult": [
      "tests/data/simple/collatz_print.py"
    ],
    "call_argument:n": [
      "tests/data/simple/collatz_print.py"
    ],
    "comparison_operator:Eq": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "comparison_operator:NotEq": [
      "tests/data/simple/collatz_print.py"
    ],
    "divisibility_test:2": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/is_even.py"
    ],
    "evolve_state": [
      "tests/data/simple/collatz_print.py"
    ],
    "function:print_collatz": [
      "tests/data/simple/collatz_print.py"
    ],
    "function_call:print": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "function_returning_nothing:print_collatz": [
      "tests/data/simple/collatz_print.py"
    ],
    "if": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "if_else_branch": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "if_test_id:n": [
      "tests/data/simple/collatz_print.py"
    ],
    "if_then_branch": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "int_literal": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "literal:Num": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "suggest_augmented_assignment": [
      "tests/data/simple/collatz_print.py"
    ],
    "suggest_conditional_expression": [
      "tests/data/simple/collatz_print.py"
    ],
    "suggest_constant_definition": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "unknown_label": [
      "tests/data/simple/collatz_print.py"
    ],
    "while": [
      "tests/data/simple/collatz_print.py"
    ],
    "call_argument:": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "call_argument:1": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "call_argument:101": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "call_argument:i": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "divisibility_test:15": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "divisibility_test:3": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "divisibility_test:5": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "for:i": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "for_range:1:101": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "function_call:range": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "if_elif_branch": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "if_test_id:i": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "literal:Str": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "range:1:101": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "function:is_even": [
      "tests/data/simple/is_even.py"
    ],
    "function_returning_something:is_even": [
      "tests/data/simple/is_even.py"
    ],
    "return": [
      "tests/data/simple/is_even.py"
    ]
  },
  "taxons": {
    "variable/assignment/": [
      "tests/data/simple/assignment.py",
      "tests/data/simple/collatz_print.py"
    ],
    "call/function/builtin/print/": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "control_flow/conditional/": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "control_flow/conditional/else/": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py"
    ],
    "operator/addition/": [
      "tests/data/simple/collatz_print.py"
    ],
    "operator/multiplication/": [
      "tests/data/simple/collatz_print.py"
    ],
    "operator/percent/modulo/": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "subroutine_definition/procedure/": [
      "tests/data/simple/collatz_print.py"
    ],
    "test/divisibility/parity/": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/is_even.py"
    ],
    "test/equality/": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "test/equality/not/": [
      "tests/data/simple/collatz_print.py"
    ],
    "type/elementary/number/integer": [
      "tests/data/simple/collatz_print.py",
      "tests/data/simple/fizzbuzz.py",
      "tests/data/simple/is_even.py"
    ],
    "call/function/builtin/range/": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "control_flow/conditional/else/chained/": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "control_flow/loop/sequential/arithmetic/start/": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "type/elementary/string/": [
      "tests/data/simple/fizzbuzz.py"
    ],
    "subroutine_definition/function/": [
      "tests/data/simple/is_even.py"
    ],
    "subroutine_definition/predicate/": [
      "tests/data/simple/is_even.py"
    ]
  }
}