{
  "programs": {
    "001.1159-print-hello-world.py": {
      "timestamp": "ignored",
      "source": "print(\"Hello World\")",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]],
        "literal:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "001.3-print-hello-world.py": {
      "timestamp": "ignored",
      "source": "from __future__ import print_function\nprint(\"Hello World\")",
      "labels": {
        "call_argument:": [[2,2]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "import:__future__:print_function": [[1,1]],
        "import_module:__future__": [[1,1]],
        "import_name:print_function": [[1,1]],
        "literal:Str": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "io/standard/print": [[2,2]],
        "library/standard/__future__/print_function": [[1,1]],
        "type/elementary/string": [[2,2]]
      }
    },
    "002.11-print-hello-10-times.py": {
      "timestamp": "ignored",
      "source": "for i in range(10):\n    print(\"Hello\")",
      "labels": {
        "call_argument:": [[2,2]],
        "call_argument:10": [[1,1]],
        "for:i": [[1,2]],
        "for_range:10": [[1,2]],
        "function_call:print": [[2,2]],
        "function_call:range": [[1,1]],
        "function_call_without_result:print": [[2,2]],
        "literal:10": [[1,1]],
        "literal:Str": [[2,2]],
        "loop:for": [[1,2]],
        "loop_with_late_exit:for": [[1,2]],
        "range:10": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "call/function/builtin/range": [[1,1]],
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/for/arithmetic": [[1,2]],
        "io/standard/print": [[2,2]],
        "type/elementary/number/integer": [[1,1]],
        "type/elementary/string": [[2,2]]
      }
    },
    "002.1493-print-hello-10-times.py": {
      "timestamp": "ignored",
      "source": "print(\"Hello\\n\" * 10)",
      "labels": {
        "binary_operator:Mult": [[1,1]],
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]],
        "literal:10": [[1,1]],
        "literal:Str": [[1,1]],
        "replication_operator:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]],
        "operator/string/replication": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "002.3117-print-hello-10-times.py": {
      "timestamp": "ignored",
      "source": "print(\"Hello\\n\" * 10)",
      "labels": {
        "binary_operator:Mult": [[1,1]],
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]],
        "literal:10": [[1,1]],
        "literal:Str": [[1,1]],
        "replication_operator:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]],
        "operator/string/replication": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "003.19-create-a-procedure.py": {
      "timestamp": "ignored",
      "source": "def finish(name):\n    print(\"My job here is done. Goodbye \" + name)",
      "labels": {
        "binary_operator:Add": [[2,2]],
        "call_argument:": [[2,2]],
        "concatenation_operator:Str": [[2,2]],
        "function:finish": [[1,2]],
        "function_argument:name": [[1,1]],
        "function_argument_flavor:arg": [[1,1]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "function_returning_nothing:finish": [[1,2]],
        "literal:Str": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "io/standard/print": [[2,2]],
        "operator/string/concatenation": [[2,2]],
        "subroutine/argument/arg": [[1,1]],
        "subroutine/procedure": [[1,2]],
        "type/elementary/string": [[2,2]]
      }
    },
    "003.2372-create-a-procedure.py": {
      "timestamp": "ignored",
      "source": "def a():\n    pass",
      "labels": {
        "function:a": [[1,2]],
        "function_returning_nothing:a": [[1,2]],
        "function_without_arguments:a": [[1,2]],
        "null_operation": [[2,2]]
      },
      "taxons": {
        "flow/null_operation": [[2,2]],
        "subroutine/argument/no": [[1,2]],
        "subroutine/procedure": [[1,2]]
      }
    },
    "004.24-create-a-function-which-returns-the-square-of-an-integer.py": {
      "timestamp": "ignored",
      "source": "def square(x):\n    return x * x",
      "labels": {
        "binary_operator:Mult": [[2,2]],
        "function:square": [[1,2]],
        "function_argument:x": [[1,1]],
        "function_argument_flavor:arg": [[1,1]],
        "function_returning_something:square": [[1,2]],
        "multiplication_operator": [[2,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "operator/arithmetic/multiplication": [[2,2]],
        "subroutine/argument/arg": [[1,1]],
        "subroutine/function": [[1,2]]
      }
    },
    "004.2921-create-a-function-which-returns-the-square-of-an-integer.py": {
      "timestamp": "ignored",
      "source": "def square(x):\n    return x ** 2",
      "labels": {
        "binary_operator:Pow": [[2,2]],
        "function:square": [[1,2]],
        "function_argument:x": [[1,1]],
        "function_argument_flavor:arg": [[1,1]],
        "function_returning_something:square": [[1,2]],
        "literal:2": [[2,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "operator/arithmetic/power": [[2,2]],
        "subroutine/argument/arg": [[1,1]],
        "subroutine/function": [[1,2]],
        "type/elementary/number/integer": [[2,2]]
      }
    },
    "005.663-create-a-2d-point-data-structure.py": {
      "timestamp": "ignored",
      "source": "from dataclasses import dataclass\n@dataclass\nclass Point:\n    x: float\n    y: float",
      "labels": {
        "class:Point": [[2,2]],
        "import:dataclasses:dataclass": [[1,1]],
        "import_module:dataclasses": [[1,1]],
        "import_name:dataclass": [[1,1]]
      },
      "taxons": {
        "class": [[2,2]],
        "library/standard/dataclasses/dataclass": [[1,1]]
      }
    },
    "006.32-iterate-over-list-values.py": {
      "timestamp": "ignored",
      "source": "for x in items:\n    doSomething(x)",
      "labels": {
        "call_argument:x": [[2,2]],
        "for:x": [[1,2]],
        "for_each": [[1,2]],
        "function_call:doSomething": [[2,2]],
        "function_call_without_result:doSomething": [[2,2]],
        "loop:for": [[1,2]],
        "loop_with_late_exit:for": [[1,2]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/for/elements": [[1,2]]
      }
    },
    "007.183-iterate-over-list-indexes-and-values.py": {
      "timestamp": "ignored",
      "source": "for i, x in enumerate(items):\n    print(i, x)",
      "labels": {
        "call_argument:i": [[2,2]],
        "call_argument:items": [[1,1]],
        "call_argument:x": [[2,2]],
        "for:i": [[1,1]],
        "for:x": [[2,2]],
        "for_indexes_elements": [[1,2]],
        "function_call:enumerate": [[1,1]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "loop:for": [[1,1],[2,2]],
        "loop_with_late_exit:for": [[1,1],[2,2]],
        "nested_for:1": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/enumerate": [[1,1]],
        "call/function/builtin/print": [[2,2]],
        "flow/loop/exit/late": [[1,1],[2,2]],
        "flow/loop/for": [[1,1]],
        "flow/loop/for/elements_and_indexes": [[1,2]],
        "flow/loop/for/nested/1": [[2,2]],
        "io/standard/print": [[2,2]]
      }
    },
    "008.39-initialize-a-new-map-associative-array.py": {
      "timestamp": "ignored",
      "source": "x = {\"one\": 1, \"two\": 2}",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:1": [[1,1]],
        "assignment_rhs_atom:2": [[1,1]],
        "literal:1": [[1,1]],
        "literal:2": [[1,1]],
        "literal:Dict": [[1,1]],
        "literal:Str": [[1,1],[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "type/container/dictionary": [[1,1]],
        "type/elementary/number/integer": [[1,1],[1,1]],
        "type/elementary/string": [[1,1],[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "009.1410-create-a-binary-tree-data-structure.py": {
      "timestamp": "ignored",
      "source": "class Node:\n    def __init__(self, data):\n        self.data = data\n        self.left = None\n        self.right = None",
      "labels": {
        "assignment": [[3,3]],
        "assignment:None": [[4,4],[5,5]],
        "assignment_lhs_identifier:self": [[3,3],[4,4],[5,5]],
        "assignment_rhs_atom:None": [[4,4],[5,5]],
        "assignment_rhs_atom:data": [[3,3]],
        "class:Node": [[1,5]],
        "function:__init__": [[2,5]],
        "function_argument:data": [[2,2]],
        "function_argument:self": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2]],
        "function_returning_nothing:__init__": [[2,5]],
        "instance_method:__init__": [[2,5]],
        "literal:None": [[4,4],[5,5]],
        "method:__init__": [[2,5]]
      },
      "taxons": {
        "class": [[1,5]],
        "subroutine/argument/arg": [[2,2],[2,2]],
        "subroutine/method/flavor/instance": [[2,5]],
        "subroutine/method/naming/magic": [[2,5]],
        "subroutine/procedure": [[2,5]],
        "type/elementary/null": [[4,4],[5,5]],
        "variable/assignment": [[3,3],[4,4],[5,5]]
      }
    },
    "009.3176-create-a-binary-tree-data-structure.py": {
      "timestamp": "ignored",
      "source": "class Node:\n    def __init__(self, data, left_child, right_child):\n        self.data = data\n        self._left_child = left_child\n        self._right_child = right_child",
      "labels": {
        "assignment": [[3,3],[4,4],[5,5]],
        "assignment_lhs_identifier:self": [[3,3],[4,4],[5,5]],
        "assignment_rhs_atom:data": [[3,3]],
        "assignment_rhs_atom:left_child": [[4,4]],
        "assignment_rhs_atom:right_child": [[5,5]],
        "class:Node": [[1,5]],
        "function:__init__": [[2,5]],
        "function_argument:data": [[2,2]],
        "function_argument:left_child": [[2,2]],
        "function_argument:right_child": [[2,2]],
        "function_argument:self": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2],[2,2],[2,2]],
        "function_returning_nothing:__init__": [[2,5]],
        "instance_method:__init__": [[2,5]],
        "method:__init__": [[2,5]]
      },
      "taxons": {
        "class": [[1,5]],
        "subroutine/argument/arg": [[2,2],[2,2],[2,2],[2,2]],
        "subroutine/method/flavor/instance": [[2,5]],
        "subroutine/method/naming/magic": [[2,5]],
        "subroutine/procedure": [[2,5]],
        "variable/assignment": [[3,3],[4,4],[5,5]]
      }
    },
    "010.1478-shuffle-a-list.py": {
      "timestamp": "ignored",
      "source": "import random\nrandom.shuffle(list)",
      "labels": {
        "call_argument:list": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:shuffle": [[2,2]],
        "method_call_object:random": [[2,2]],
        "method_call_without_result:shuffle": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]]
      }
    },
    "010.182-shuffle-a-list.py": {
      "timestamp": "ignored",
      "source": "from random import shuffle\nshuffle(x)",
      "labels": {
        "call_argument:x": [[2,2]],
        "function_call:shuffle": [[2,2]],
        "function_call_without_result:shuffle": [[2,2]],
        "import:random:shuffle": [[1,1]],
        "import_module:random": [[1,1]],
        "import_name:shuffle": [[1,1]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "library/standard/random/shuffle": [[1,1]]
      }
    },
    "011.47-pick-a-random-element-from-a-list.py": {
      "timestamp": "ignored",
      "source": "import random\nrandom.choice(x)",
      "labels": {
        "call_argument:x": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:choice": [[2,2]],
        "method_call_object:random": [[2,2]],
        "method_call_without_result:choice": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]]
      }
    },
    "012.181-check-if-list-contains-a-value.py": {
      "timestamp": "ignored",
      "source": "x in list",
      "labels": {
        "comparison_operator:In": [[1,1]]
      },
      "taxons": {
        "test/belonging": [[1,1]]
      }
    },
    "013.574-iterate-over-map-keys-and-values.py": {
      "timestamp": "ignored",
      "source": "for k, v in mymap.items():\n    print(k, v)",
      "labels": {
        "call_argument:k": [[2,2]],
        "call_argument:v": [[2,2]],
        "for:k": [[1,1]],
        "for:v": [[2,2]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "loop:for": [[1,1],[2,2]],
        "loop_with_late_exit:for": [[1,1],[2,2]],
        "method_call:items": [[1,1]],
        "nested_for:1": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "call/method/dict/items": [[1,1]],
        "flow/loop/exit/late": [[1,1],[2,2]],
        "flow/loop/for": [[1,1]],
        "flow/loop/for/nested/1": [[2,2]],
        "io/standard/print": [[2,2]]
      }
    },
    "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py": {
      "timestamp": "ignored",
      "source": "import random\ndef pick(a, b):\n    return random.randrange(a, b)",
      "labels": {
        "call_argument:a": [[3,3]],
        "call_argument:b": [[3,3]],
        "function:pick": [[2,3]],
        "function_argument:a": [[2,2]],
        "function_argument:b": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2]],
        "function_returning_something:pick": [[2,3]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:randrange": [[3,3]],
        "method_call_object:random": [[3,3]],
        "return": [[3,3]]
      },
      "taxons": {
        "call/method": [[3,3]],
        "library/standard/random": [[1,1]],
        "subroutine/argument/arg": [[2,2],[2,2]],
        "subroutine/function": [[2,3]]
      }
    },
    "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py": {
      "timestamp": "ignored",
      "source": "import random\nrandom.uniform(a, b)",
      "labels": {
        "call_argument:a": [[2,2]],
        "call_argument:b": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:uniform": [[2,2]],
        "method_call_object:random": [[2,2]],
        "method_call_without_result:uniform": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]]
      }
    },
    "015.184-pick-uniformly-a-random-integer-in-ab.py": {
      "timestamp": "ignored",
      "source": "import random\nrandom.randint(a, b)",
      "labels": {
        "call_argument:a": [[2,2]],
        "call_argument:b": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:randint": [[2,2]],
        "method_call_object:random": [[2,2]],
        "method_call_without_result:randint": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]]
      }
    },
    "016.1530-depth-first-traversing-of-a-binary-tree.py": {
      "timestamp": "ignored",
      "source": "def dfs(bt):\n    if bt is None:\n        return\n    dfs(bt.left)\n    f(bt)\n    dfs(bt.right)",
      "labels": {
        "body_recursive_function:dfs": [[1,6]],
        "call_argument:": [[4,4],[6,6]],
        "call_argument:bt": [[5,5]],
        "comparison_operator:Is": [[2,2]],
        "function:dfs": [[1,6]],
        "function_argument:bt": [[1,1]],
        "function_argument_flavor:arg": [[1,1]],
        "function_call:dfs": [[4,4],[6,6]],
        "function_call:f": [[5,5]],
        "function_call_without_result:dfs": [[4,4],[6,6]],
        "function_call_without_result:f": [[5,5]],
        "function_returning_nothing:dfs": [[1,6]],
        "if": [[2,3]],
        "if_guard": [[2,3]],
        "if_test_atom:None": [[2,2]],
        "if_test_atom:bt": [[2,2]],
        "if_then_branch": [[3,3]],
        "if_without_else": [[2,3]],
        "literal:None": [[2,2]],
        "recursive_function:dfs": [[1,6]],
        "return:None": [[3,3]]
      },
      "taxons": {
        "call/function": [[4,4],[5,5],[6,6]],
        "flow/conditional/guard": [[2,3]],
        "flow/conditional/no_else": [[2,3]],
        "subroutine/argument/arg": [[1,1]],
        "subroutine/procedure": [[1,6]],
        "subroutine/recursive": [[1,6]],
        "subroutine/recursive/body": [[1,6]],
        "test/identity": [[2,2]],
        "type/elementary/null": [[2,2]]
      }
    },
    "017.1103-create-a-tree-data-structure.py": {
      "timestamp": "ignored",
      "source": "class Node(object):\n    def __init__(self, value, *children):\n        self.value = value\n        self.children = list(children)",
      "labels": {
        "assignment": [[3,3]],
        "assignment:list": [[4,4]],
        "assignment_lhs_identifier:self": [[3,3],[4,4]],
        "assignment_rhs_atom:children": [[4,4]],
        "assignment_rhs_atom:value": [[3,3]],
        "call_argument:children": [[4,4]],
        "class:Node": [[1,4]],
        "function:__init__": [[2,4]],
        "function_argument:children": [[2,2]],
        "function_argument:self": [[2,2]],
        "function_argument:value": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2]],
        "function_argument_flavor:vararg": [[2,2]],
        "function_call:list": [[4,4]],
        "function_returning_nothing:__init__": [[2,4]],
        "instance_method:__init__": [[2,4]],
        "method:__init__": [[2,4]]
      },
      "taxons": {
        "call/function/builtin/casting/list": [[4,4]],
        "class": [[1,4]],
        "subroutine/argument/arg": [[2,2],[2,2]],
        "subroutine/argument/vararg": [[2,2]],
        "subroutine/method/flavor/instance": [[2,4]],
        "subroutine/method/naming/magic": [[2,4]],
        "subroutine/procedure": [[2,4]],
        "type/container/list": [[4,4]],
        "variable/assignment": [[3,3],[4,4]]
      }
    },
    "018.2084-depth-first-traversing-of-a-tree.py": {
      "timestamp": "ignored",
      "source": "def DFS(f, root):\n    f(root)\n    for child in root:\n        DFS(f, child)",
      "labels": {
        "body_recursive_function:DFS": [[1,4]],
        "call_argument:child": [[4,4]],
        "call_argument:f": [[4,4]],
        "call_argument:root": [[2,2]],
        "for:child": [[3,4]],
        "for_each": [[3,4]],
        "function:DFS": [[1,4]],
        "function_argument:f": [[1,1]],
        "function_argument:root": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_call:DFS": [[4,4]],
        "function_call:f": [[2,2]],
        "function_call_without_result:DFS": [[4,4]],
        "function_call_without_result:f": [[2,2]],
        "function_returning_nothing:DFS": [[1,4]],
        "higher_order_function:f": [[1,4]],
        "loop:for": [[3,4]],
        "loop_with_late_exit:for": [[3,4]],
        "recursive_function:DFS": [[1,4]]
      },
      "taxons": {
        "call/function": [[2,2],[4,4]],
        "flow/loop/exit/late": [[3,4]],
        "flow/loop/for/elements": [[3,4]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/higher_order": [[1,4]],
        "subroutine/procedure": [[1,4]],
        "subroutine/recursive/body": [[1,4]]
      }
    },
    "019.197-reverse-a-list.py": {
      "timestamp": "ignored",
      "source": "x = reversed(x)",
      "labels": {
        "assignment:reversed": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:reversed": [[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/reversed": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "019.1983-reverse-a-list.py": {
      "timestamp": "ignored",
      "source": "y = x[::-1]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:-1": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "literal:-1": [[1,1]],
        "single_assignment:y": [[1,1]],
        "slice:::-1": [[1,1]],
        "slice_lower:": [[1,1]],
        "slice_step:-1": [[1,1]],
        "slice_upper:": [[1,1]]
      },
      "taxons": {
        "subscript/slice/step/backwards": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "019.3164-reverse-a-list.py": {
      "timestamp": "ignored",
      "source": "x.reverse()",
      "labels": {
        "method_call:reverse": [[1,1]],
        "method_call_object:x": [[1,1]],
        "method_call_without_result:reverse": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/list/reverse": [[1,1]]
      }
    },
    "020.573-return-two-values.py": {
      "timestamp": "ignored",
      "source": "def search(m, x):\n    for idx, item in enumerate(m):\n        if x in item:\n            return idx, item.index(x)",
      "labels": {
        "call_argument:m": [[2,2]],
        "call_argument:x": [[4,4]],
        "comparison_operator:In": [[3,3]],
        "for:idx": [[2,2]],
        "for:item": [[4,4]],
        "for_indexes_elements": [[2,4]],
        "function:search": [[1,4]],
        "function_argument:m": [[1,1]],
        "function_argument:x": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_call:enumerate": [[2,2]],
        "function_returning_something:search": [[1,4]],
        "if": [[3,4]],
        "if_test_atom:item": [[3,3]],
        "if_test_atom:x": [[3,3]],
        "if_then_branch": [[4,4]],
        "if_without_else": [[3,4]],
        "loop:for": [[2,2],[4,4]],
        "loop_with_early_exit:for:return": [[2,2]],
        "loop_with_late_exit:for": [[4,4]],
        "method_call:index": [[4,4]],
        "nested_for:1": [[4,4]],
        "return": [[4,4]]
      },
      "taxons": {
        "call/function/builtin/enumerate": [[2,2]],
        "call/method/sequence/index": [[4,4]],
        "flow/conditional/no_else": [[3,4]],
        "flow/loop/exit/early/return": [[2,2]],
        "flow/loop/exit/late": [[4,4]],
        "flow/loop/for": [[2,2]],
        "flow/loop/for/elements_and_indexes": [[2,4]],
        "flow/loop/for/nested/1": [[4,4]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/function": [[1,4]],
        "test/belonging": [[3,3]]
      }
    },
    "021.84-swap-values-of-variables-a-and-b.py": {
      "timestamp": "ignored",
      "source": "a, b = b, a",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:a": [[1,1]],
        "assignment_lhs_identifier:b": [[1,1]],
        "assignment_rhs_atom:a": [[1,1]],
        "assignment_rhs_atom:b": [[1,1]],
        "parallel_assignment:2": [[1,1]],
        "swap": [[1,1]],
        "update:a:b": [[1,1]],
        "update:b:a": [[1,1]],
        "update_by_assignment:a:b": [[1,1]],
        "update_by_assignment:b:a": [[1,1]],
        "update_by_assignment_with": [[1,1]],
        "update_with": [[1,1]]
      },
      "taxons": {
        "type/container/tuple/assignment/swap": [[1,1]],
        "variable/assignment/parallel/2": [[1,1]]
      }
    },
    "022.243-convert-string-to-integer.py": {
      "timestamp": "ignored",
      "source": "i = int(s)",
      "labels": {
        "assignment:int": [[1,1]],
        "assignment_lhs_identifier:i": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:s": [[1,1]],
        "function_call:int": [[1,1]],
        "single_assignment:i": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/int": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "023.1102-convert-real-number-to-string-with-2-decimal-places.py": {
      "timestamp": "ignored",
      "source": "s = \"{:.2f}\".format(x)",
      "labels": {
        "assignment:format": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:format": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/format": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "024.664-assign-to-string-the-japanese-word-.py": {
      "timestamp": "ignored",
      "source": "s = \"\u30cd\u30b3\"",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "literal:Str": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "025.195-send-a-value-to-another-thread.py": {
      "timestamp": "ignored",
      "source": "import Queue\nq = Queue()\nt = Thread(target=worker)\nt.daemon = True\nt.start()\nq.put(\"Alan\")",
      "labels": {
        "assignment:Queue": [[2,2]],
        "assignment:Thread": [[3,3]],
        "assignment:True": [[4,4]],
        "assignment_lhs_identifier:q": [[2,2]],
        "assignment_lhs_identifier:t": [[3,3],[4,4]],
        "assignment_rhs_atom:True": [[4,4]],
        "assignment_rhs_atom:worker": [[3,3]],
        "call_argument:": [[6,6]],
        "function_call:Queue": [[2,2]],
        "function_call:Thread": [[3,3]],
        "function_call_without_arguments:Queue": [[2,2]],
        "import:Queue": [[1,1]],
        "import_module:Queue": [[1,1]],
        "literal:Str": [[6,6]],
        "literal:True": [[4,4]],
        "method_call:put": [[6,6]],
        "method_call:start": [[5,5]],
        "method_call_object:q": [[6,6]],
        "method_call_object:t": [[5,5]],
        "method_call_without_result:put": [[6,6]],
        "method_call_without_result:start": [[5,5]],
        "single_assignment:q": [[2,2]],
        "single_assignment:t": [[3,3]]
      },
      "taxons": {
        "call/function": [[3,3]],
        "call/function/without_arguments": [[2,2]],
        "call/method": [[5,5],[6,6]],
        "library/third_party/Queue": [[1,1]],
        "type/elementary/boolean/true": [[4,4]],
        "type/elementary/string": [[6,6]],
        "variable/assignment": [[4,4]],
        "variable/assignment/single": [[2,2],[3,3]]
      }
    },
    "026.194-create-a-2-dimensional-array.py": {
      "timestamp": "ignored",
      "source": "x = [[0 for j in xrange(n)] for i in xrange(m)]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:0": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "assignment_rhs_atom:j": [[1,1]],
        "assignment_rhs_atom:m": [[1,1]],
        "assignment_rhs_atom:n": [[1,1]],
        "call_argument:m": [[1,1]],
        "call_argument:n": [[1,1]],
        "comprehension:List": [[1,1],[1,1]],
        "comprehension_for_count:1": [[1,1],[1,1]],
        "function_call:xrange": [[1,1],[1,1]],
        "literal:0": [[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "call/function": [[1,1],[1,1]],
        "type/elementary/number/integer/zero": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "027.192-create-a-3-dimensional-array.py": {
      "timestamp": "ignored",
      "source": "x = [[[0 for k in xrange(p)] for j in xrange(n)] for i in xrange(m)]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:0": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "assignment_rhs_atom:j": [[1,1]],
        "assignment_rhs_atom:k": [[1,1]],
        "assignment_rhs_atom:m": [[1,1]],
        "assignment_rhs_atom:n": [[1,1]],
        "assignment_rhs_atom:p": [[1,1]],
        "call_argument:m": [[1,1]],
        "call_argument:n": [[1,1]],
        "call_argument:p": [[1,1]],
        "comprehension:List": [[1,1],[1,1],[1,1]],
        "comprehension_for_count:1": [[1,1],[1,1],[1,1]],
        "function_call:xrange": [[1,1],[1,1],[1,1]],
        "literal:0": [[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "call/function": [[1,1],[1,1],[1,1]],
        "type/elementary/number/integer/zero": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "027.193-create-a-3-dimensional-array.py": {
      "timestamp": "ignored",
      "source": "import numpy\nx = numpy.zeros((m, n, p))",
      "labels": {
        "assignment:zeros": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:m": [[2,2]],
        "assignment_rhs_atom:n": [[2,2]],
        "assignment_rhs_atom:numpy": [[2,2]],
        "assignment_rhs_atom:p": [[2,2]],
        "call_argument:": [[2,2]],
        "import:numpy": [[1,1]],
        "import_module:numpy": [[1,1]],
        "method_call:zeros": [[2,2]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/third_party/numpy": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "028.350-sort-by-a-property.py": {
      "timestamp": "ignored",
      "source": "items = sorted(items, key=lambda x: x.p)",
      "labels": {
        "assignment:sorted": [[1,1]],
        "assignment_lhs_identifier:items": [[1,1]],
        "assignment_rhs_atom:items": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:items": [[1,1]],
        "function_argument:x": [[1,1]],
        "function_argument_flavor:arg": [[1,1]],
        "function_call:sorted": [[1,1]],
        "lambda_function": [[1,1]],
        "single_assignment:items": [[1,1]],
        "update:items:x": [[1,1]],
        "update_by_assignment:items:x": [[1,1]],
        "update_by_assignment_with:sorted": [[1,1]],
        "update_with:sorted": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/sorted": [[1,1]],
        "subroutine/argument/arg": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "029.199-remove-item-from-list-by-its-index.py": {
      "timestamp": "ignored",
      "source": "del items[i]",
      "labels": {
        "index:i": [[1,1]]
      },
      "taxons": {
        "subscript/index": [[1,1]]
      }
    },
    "030.189-parallelize-execution-of-1000-independent-tasks.py": {
      "timestamp": "ignored",
      "source": "from multiprocessing import Pool\npool = Pool()\nfor i in range(1, 1001):\n    pool.apply_async(f, [i])",
      "labels": {
        "assignment:Pool": [[2,2]],
        "assignment_lhs_identifier:pool": [[2,2]],
        "call_argument:": [[4,4]],
        "call_argument:1": [[3,3]],
        "call_argument:1001": [[3,3]],
        "call_argument:f": [[4,4]],
        "for:i": [[3,4]],
        "for_range:1:1001": [[3,4]],
        "function_call:Pool": [[2,2]],
        "function_call:range": [[3,3]],
        "function_call_without_arguments:Pool": [[2,2]],
        "import:multiprocessing:Pool": [[1,1]],
        "import_module:multiprocessing": [[1,1]],
        "import_name:Pool": [[1,1]],
        "literal:1": [[3,3]],
        "literal:1001": [[3,3]],
        "loop:for": [[3,4]],
        "loop_with_late_exit:for": [[3,4]],
        "method_call:apply_async": [[4,4]],
        "method_call_object:pool": [[4,4]],
        "method_call_without_result:apply_async": [[4,4]],
        "range:1:1001": [[3,3]],
        "single_assignment:pool": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/range": [[3,3]],
        "call/function/without_arguments": [[2,2]],
        "call/method": [[4,4]],
        "flow/loop/exit/late": [[3,4]],
        "flow/loop/for/arithmetic/start": [[3,4]],
        "library/standard/multiprocessing/Pool": [[1,1]],
        "type/elementary/number/integer": [[3,3],[3,3]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "031.188-recursive-factorial-simple.py": {
      "timestamp": "ignored",
      "source": "def f(i):\n    if i == 0:\n        return 1\n    else:\n        return i * f(i - 1)",
      "labels": {
        "binary_operator:Mult": [[5,5]],
        "binary_operator:Sub": [[5,5]],
        "body_recursive_function:f": [[1,5]],
        "call_argument:": [[5,5]],
        "comparison_operator:Eq": [[2,2]],
        "function:f": [[1,5]],
        "function_argument:i": [[1,1]],
        "function_argument_flavor:arg": [[1,1]],
        "function_call:f": [[5,5]],
        "function_returning_something:f": [[1,5]],
        "if": [[2,5]],
        "if_else_branch": [[5,5]],
        "if_test_atom:0": [[2,2]],
        "if_test_atom:i": [[2,2]],
        "if_then_branch": [[3,3]],
        "literal:0": [[2,2]],
        "literal:1": [[3,3],[5,5]],
        "multiplication_operator": [[5,5]],
        "recursive_function:f": [[1,5]],
        "return": [[5,5]],
        "return:1": [[3,3]]
      },
      "taxons": {
        "call/function": [[5,5]],
        "flow/conditional": [[2,5]],
        "flow/conditional/else": [[5,5]],
        "operator/arithmetic/multiplication": [[5,5]],
        "operator/arithmetic/substraction": [[5,5]],
        "subroutine/argument/arg": [[1,1]],
        "subroutine/function": [[1,5]],
        "subroutine/recursive/body": [[1,5]],
        "test/equality": [[2,2]],
        "type/elementary/number/integer": [[3,3],[5,5]],
        "type/elementary/number/integer/zero": [[2,2]]
      }
    },
    "032.196-integer-exponentiation-by-squaring.py": {
      "timestamp": "ignored",
      "source": "def exp(x, n):\n    return x ** n",
      "labels": {
        "binary_operator:Pow": [[2,2]],
        "function:exp": [[1,2]],
        "function_argument:n": [[1,1]],
        "function_argument:x": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_returning_something:exp": [[1,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "operator/arithmetic/power": [[2,2]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/function": [[1,2]]
      }
    },
    "033.1420-atomically-read-and-update-variable.py": {
      "timestamp": "ignored",
      "source": "import threading\nlock = threading.Lock()\nlock.acquire()\ntry:\n    x = f(x)\nfinally:\n    lock.release()",
      "labels": {
        "assignment:Lock": [[2,2]],
        "assignment:f": [[5,5]],
        "assignment_lhs_identifier:lock": [[2,2]],
        "assignment_lhs_identifier:x": [[5,5]],
        "assignment_rhs_atom:threading": [[2,2]],
        "assignment_rhs_atom:x": [[5,5]],
        "call_argument:x": [[5,5]],
        "function_call:f": [[5,5]],
        "import:threading": [[1,1]],
        "import_module:threading": [[1,1]],
        "method_call:Lock": [[2,2]],
        "method_call:acquire": [[3,3]],
        "method_call:release": [[7,7]],
        "method_call_object:lock": [[3,3],[7,7]],
        "method_call_without_result:acquire": [[3,3]],
        "single_assignment:lock": [[2,2]],
        "single_assignment:x": [[5,5]],
        "try": [[4,7]]
      },
      "taxons": {
        "call/function": [[5,5]],
        "call/method": [[2,2],[3,3],[7,7]],
        "library/standard/threading": [[1,1]],
        "variable/assignment/single": [[2,2],[5,5]]
      }
    },
    "034.625-create-a-set-of-objects.py": {
      "timestamp": "ignored",
      "source": "class T(object):\n    pass\nx = set(T())",
      "labels": {
        "assignment:set": [[3,3]],
        "assignment_lhs_identifier:x": [[3,3]],
        "call_argument:": [[3,3]],
        "class:T": [[1,2]],
        "composition": [[3,3]],
        "function_call:T": [[3,3]],
        "function_call:set": [[3,3]],
        "function_call_without_arguments:T": [[3,3]],
        "null_operation": [[2,2]],
        "single_assignment:x": [[3,3]]
      },
      "taxons": {
        "call/composition": [[3,3]],
        "call/function/builtin/casting/set": [[3,3]],
        "call/function/without_arguments": [[3,3]],
        "class": [[1,2]],
        "flow/null_operation": [[2,2]],
        "type/container/set": [[3,3]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "035.667-first-class-function--compose.py": {
      "timestamp": "ignored",
      "source": "def compose(f, g):\n    return lambda a: g(f(a))",
      "labels": {
        "call_argument:": [[2,2]],
        "call_argument:a": [[2,2]],
        "composition": [[2,2]],
        "function:compose": [[1,2]],
        "function_argument:a": [[2,2]],
        "function_argument:f": [[1,1]],
        "function_argument:g": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1],[2,2]],
        "function_call:f": [[2,2]],
        "function_call:g": [[2,2]],
        "function_returning_something:compose": [[1,2]],
        "higher_order_function:f": [[1,2]],
        "higher_order_function:g": [[1,2]],
        "lambda_function": [[2,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "call/composition": [[2,2]],
        "call/function": [[2,2],[2,2]],
        "subroutine/argument/arg": [[1,1],[1,1],[2,2]],
        "subroutine/function": [[1,2]],
        "subroutine/higher_order": [[1,2]]
      }
    },
    "036.670-first-class-function--generic-composition.py": {
      "timestamp": "ignored",
      "source": "def compose(f, g):\n    return lambda x: g(f(x))",
      "labels": {
        "call_argument:": [[2,2]],
        "call_argument:x": [[2,2]],
        "composition": [[2,2]],
        "function:compose": [[1,2]],
        "function_argument:f": [[1,1]],
        "function_argument:g": [[1,1]],
        "function_argument:x": [[2,2]],
        "function_argument_flavor:arg": [[1,1],[1,1],[2,2]],
        "function_call:f": [[2,2]],
        "function_call:g": [[2,2]],
        "function_returning_something:compose": [[1,2]],
        "higher_order_function:f": [[1,2]],
        "higher_order_function:g": [[1,2]],
        "lambda_function": [[2,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "call/composition": [[2,2]],
        "call/function": [[2,2],[2,2]],
        "subroutine/argument/arg": [[1,1],[1,1],[2,2]],
        "subroutine/function": [[1,2]],
        "subroutine/higher_order": [[1,2]]
      }
    },
    "037.671-currying.py": {
      "timestamp": "ignored",
      "source": "from functools import partial\ndef f(a):\n    def add(b):\n        return a + b\n    return add\nprint(f(2)(1))",
      "labels": {
        "addition_operator": [[4,4]],
        "binary_operator:Add": [[4,4]],
        "call_argument:": [[6,6]],
        "call_argument:1": [[6,6]],
        "call_argument:2": [[6,6]],
        "closure:f": [[2,5]],
        "composition": [[6,6]],
        "function:add": [[3,4]],
        "function:f": [[2,5]],
        "function_argument:a": [[2,2]],
        "function_argument:b": [[3,3]],
        "function_argument_flavor:arg": [[2,2],[3,3]],
        "function_call:f": [[6,6]],
        "function_call:print": [[6,6]],
        "function_call_without_result:print": [[6,6]],
        "function_returning_something:add": [[3,4]],
        "function_returning_something:f": [[2,5]],
        "import:functools:partial": [[1,1]],
        "import_module:functools": [[1,1]],
        "import_name:partial": [[1,1]],
        "literal:1": [[6,6]],
        "literal:2": [[6,6]],
        "nested_function:f": [[2,5]],
        "return": [[4,4]],
        "return:add": [[5,5]]
      },
      "taxons": {
        "call/composition": [[6,6]],
        "call/function": [[6,6]],
        "call/function/builtin/print": [[6,6]],
        "io/standard/print": [[6,6]],
        "library/standard/functools/partial": [[1,1]],
        "operator/arithmetic/addition": [[4,4]],
        "subroutine/argument/arg": [[2,2],[3,3]],
        "subroutine/function": [[2,5],[3,4]],
        "subroutine/nested/closure": [[2,5]],
        "type/elementary/number/integer": [[6,6],[6,6]]
      }
    },
    "038.186-extract-a-substring.py": {
      "timestamp": "ignored",
      "source": "t = s[i:j]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "assignment_rhs_atom:j": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "single_assignment:t": [[1,1]],
        "slice:i:j:": [[1,1]],
        "slice_lower:i": [[1,1]],
        "slice_step:": [[1,1]],
        "slice_upper:j": [[1,1]]
      },
      "taxons": {
        "subscript/slice/start": [[1,1]],
        "subscript/slice/stop": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "039.571-check-if-string-contains-a-word.py": {
      "timestamp": "ignored",
      "source": "ok = word in s",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:ok": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "assignment_rhs_atom:word": [[1,1]],
        "comparison_operator:In": [[1,1]],
        "single_assignment:ok": [[1,1]]
      },
      "taxons": {
        "test/belonging": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "040.2279-graph-with-adjacency-lists.py": {
      "timestamp": "ignored",
      "source": "from collections import defaultdict\nclass Vertex(set):\n    pass\nclass Graph(defaultdict):\n    def __init__(self, *paths):\n        self.default_factory = Vertex\n        for path in paths:\n            self.make_path(path)\n    def make_path(self, labels):\n        for l1, l2 in zip(labels, labels[1:]):\n            self[l1].add(l2)\n            self[l2].add(l1)\nG = Graph((0, 1, 2, 3), (1, 4, 2))",
      "labels": {
        "assignment": [[6,6]],
        "assignment:Graph": [[13,13]],
        "assignment_lhs_identifier:G": [[13,13]],
        "assignment_lhs_identifier:self": [[6,6]],
        "assignment_rhs_atom:0": [[13,13]],
        "assignment_rhs_atom:1": [[13,13],[13,13]],
        "assignment_rhs_atom:2": [[13,13],[13,13]],
        "assignment_rhs_atom:3": [[13,13]],
        "assignment_rhs_atom:4": [[13,13]],
        "assignment_rhs_atom:Vertex": [[6,6]],
        "call_argument:": [[10,10],[13,13],[13,13]],
        "call_argument:l1": [[12,12]],
        "call_argument:l2": [[11,11]],
        "call_argument:labels": [[10,10]],
        "call_argument:path": [[8,8]],
        "class:Graph": [[4,12]],
        "class:Vertex": [[2,3]],
        "for:l1": [[10,10]],
        "for:l2": [[12,12]],
        "for:path": [[7,8]],
        "for_each": [[7,8]],
        "function:__init__": [[5,8]],
        "function:make_path": [[9,12]],
        "function_argument:labels": [[9,9]],
        "function_argument:paths": [[5,5]],
        "function_argument:self": [[5,5],[9,9]],
        "function_argument_flavor:arg": [[5,5],[9,9],[9,9]],
        "function_argument_flavor:vararg": [[5,5]],
        "function_call:Graph": [[13,13]],
        "function_call:zip": [[10,10]],
        "function_returning_nothing:__init__": [[5,8]],
        "function_returning_nothing:make_path": [[9,12]],
        "import:collections:defaultdict": [[1,1]],
        "import_module:collections": [[1,1]],
        "import_name:defaultdict": [[1,1]],
        "index:l1": [[11,11]],
        "index:l2": [[12,12]],
        "instance_method:__init__": [[5,8]],
        "instance_method:make_path": [[9,12]],
        "literal:0": [[13,13]],
        "literal:1": [[10,10],[13,13],[13,13]],
        "literal:2": [[13,13],[13,13]],
        "literal:3": [[13,13]],
        "literal:4": [[13,13]],
        "literal:Tuple": [[13,13],[13,13]],
        "loop:for": [[7,8],[10,10],[12,12]],
        "loop_with_late_exit:for": [[7,8],[10,10],[12,12]],
        "method:__init__": [[5,8]],
        "method:make_path": [[9,12]],
        "method_call:add": [[11,11],[12,12]],
        "method_call:make_path": [[8,8]],
        "method_call_object:self": [[8,8]],
        "method_call_without_result:add": [[11,11],[12,12]],
        "method_call_without_result:make_path": [[8,8]],
        "nested_for:1": [[12,12]],
        "null_operation": [[3,3]],
        "single_assignment:G": [[13,13]],
        "slice:1::": [[10,10]],
        "slice_lower:1": [[10,10]],
        "slice_step:": [[10,10]],
        "slice_upper:": [[10,10]]
      },
      "taxons": {
        "call/function": [[13,13]],
        "call/function/builtin/zip": [[10,10]],
        "call/method": [[8,8]],
        "call/method/set/add": [[11,11],[12,12]],
        "class": [[2,3],[4,12]],
        "flow/loop/exit/late": [[7,8],[10,10],[12,12]],
        "flow/loop/for": [[10,10]],
        "flow/loop/for/elements": [[7,8]],
        "flow/loop/for/nested/1": [[12,12]],
        "flow/null_operation": [[3,3]],
        "library/standard/collections/defaultdict": [[1,1]],
        "subroutine/argument/arg": [[5,5],[9,9],[9,9]],
        "subroutine/argument/vararg": [[5,5]],
        "subroutine/method/flavor/instance": [[5,8],[9,12]],
        "subroutine/method/naming/magic": [[5,8]],
        "subroutine/procedure": [[5,8],[9,12]],
        "subscript/index": [[11,11],[12,12]],
        "subscript/slice/start": [[10,10]],
        "type/container/tuple": [[13,13],[13,13]],
        "type/elementary/number/integer": [[10,10],[13,13],[13,13],[13,13],[13,13],[13,13],[13,13]],
        "type/elementary/number/integer/zero": [[13,13]],
        "variable/assignment": [[6,6]],
        "variable/assignment/constant": [[13,13]],
        "variable/assignment/single": [[13,13]]
      }
    },
    "041.187-reverse-a-string.py": {
      "timestamp": "ignored",
      "source": "t = s.decode(\"utf8\")[::-1].encode(\"utf8\")",
      "labels": {
        "assignment:encode": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:-1": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:": [[1,1],[1,1]],
        "literal:-1": [[1,1]],
        "literal:Str": [[1,1],[1,1]],
        "method_call:decode": [[1,1]],
        "method_call:encode": [[1,1]],
        "method_call_object:s": [[1,1]],
        "single_assignment:t": [[1,1]],
        "slice:::-1": [[1,1]],
        "slice_lower:": [[1,1]],
        "slice_step:-1": [[1,1]],
        "slice_upper:": [[1,1]]
      },
      "taxons": {
        "call/method": [[1,1]],
        "call/method/sequence/string/encode": [[1,1]],
        "subscript/slice/step/backwards": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "type/elementary/string": [[1,1],[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "041.2714-reverse-a-string.py": {
      "timestamp": "ignored",
      "source": "t = s[::-1]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:-1": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "literal:-1": [[1,1]],
        "single_assignment:t": [[1,1]],
        "slice:::-1": [[1,1]],
        "slice_lower:": [[1,1]],
        "slice_step:-1": [[1,1]],
        "slice_upper:": [[1,1]]
      },
      "taxons": {
        "subscript/slice/step/backwards": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "042.1264-continue-outer-loop.py": {
      "timestamp": "ignored",
      "source": "for v in a:\n    try:\n        for u in b:\n            if v == u:\n                raise Exception()\n        print(v)\n    except Exception:\n        continue",
      "labels": {
        "call_argument:v": [[6,6]],
        "comparison_operator:Eq": [[4,4]],
        "continue": [[8,8]],
        "except:Exception": [[7,7]],
        "for:u": [[3,5]],
        "for:v": [[1,8]],
        "for_each": [[1,8],[3,5]],
        "function_call:Exception": [[5,5]],
        "function_call:print": [[6,6]],
        "function_call_without_arguments:Exception": [[5,5]],
        "function_call_without_result:print": [[6,6]],
        "if": [[4,5]],
        "if_test_atom:u": [[4,4]],
        "if_test_atom:v": [[4,4]],
        "if_then_branch": [[5,5]],
        "if_without_else": [[4,5]],
        "loop:for": [[1,8],[3,5]],
        "loop_with_late_exit:for": [[1,8],[3,5]],
        "nested_for:1": [[3,5]],
        "raise:Exception": [[5,5]],
        "try": [[2,8]],
        "try_except:Exception": [[2,8]],
        "try_raise:Exception": [[2,8]]
      },
      "taxons": {
        "call/function/builtin/print": [[6,6]],
        "call/function/without_arguments": [[5,5]],
        "flow/conditional/no_else": [[4,5]],
        "flow/exception/catch/Exception": [[2,8]],
        "flow/exception/raise/Exception": [[2,8]],
        "flow/loop/exit/late": [[1,8],[3,5]],
        "flow/loop/for/elements": [[1,8],[3,5]],
        "flow/loop/for/nested/1": [[3,5]],
        "io/standard/print": [[6,6]],
        "test/equality": [[4,4]]
      }
    },
    "042.3168-continue-outer-loop.py": {
      "timestamp": "ignored",
      "source": "for v in a:\n    for v_ in b:\n        if v == v_:\n            continue\n        print(v)",
      "labels": {
        "call_argument:v": [[5,5]],
        "comparison_operator:Eq": [[3,3]],
        "continue": [[4,4]],
        "for:v": [[1,5]],
        "for:v_": [[2,5]],
        "for_each": [[1,5],[2,5]],
        "function_call:print": [[5,5]],
        "function_call_without_result:print": [[5,5]],
        "if": [[3,4]],
        "if_test_atom:v": [[3,3]],
        "if_test_atom:v_": [[3,3]],
        "if_then_branch": [[4,4]],
        "if_without_else": [[3,4]],
        "loop:for": [[1,5],[2,5]],
        "loop_with_late_exit:for": [[1,5],[2,5]],
        "nested_for:1": [[2,5]]
      },
      "taxons": {
        "call/function/builtin/print": [[5,5]],
        "flow/conditional/no_else": [[3,4]],
        "flow/loop/exit/late": [[1,5],[2,5]],
        "flow/loop/for/elements": [[1,5],[2,5]],
        "flow/loop/for/nested/1": [[2,5]],
        "io/standard/print": [[5,5]],
        "test/equality": [[3,3]]
      }
    },
    "043.2733-break-outer-loop.py": {
      "timestamp": "ignored",
      "source": "def loop_breaking(m, v):\n    for i, row in enumerate(m):\n        for j, value in enumerate(row):\n            if value == v:\n                return (i, j)\n    return None\nprint(loop_breaking(([1, 2, 3], [4, 5, 6], [7, 8, 9]), 6))",
      "labels": {
        "call_argument:": [[7,7],[7,7]],
        "call_argument:6": [[7,7]],
        "call_argument:m": [[2,2]],
        "call_argument:row": [[3,3]],
        "comparison_operator:Eq": [[4,4]],
        "composition": [[7,7]],
        "for:i": [[2,2]],
        "for:j": [[3,3]],
        "for:row": [[5,5]],
        "for:value": [[5,5]],
        "for_indexes_elements": [[2,5],[3,5]],
        "function:loop_breaking": [[1,6]],
        "function_argument:m": [[1,1]],
        "function_argument:v": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_call:enumerate": [[2,2],[3,3]],
        "function_call:loop_breaking": [[7,7]],
        "function_call:print": [[7,7]],
        "function_call_without_result:print": [[7,7]],
        "function_returning_something:loop_breaking": [[1,6]],
        "if": [[4,5]],
        "if_test_atom:v": [[4,4]],
        "if_test_atom:value": [[4,4]],
        "if_then_branch": [[5,5]],
        "if_without_else": [[4,5]],
        "literal:1": [[7,7]],
        "literal:2": [[7,7]],
        "literal:3": [[7,7]],
        "literal:4": [[7,7]],
        "literal:5": [[7,7]],
        "literal:6": [[7,7],[7,7]],
        "literal:7": [[7,7]],
        "literal:8": [[7,7]],
        "literal:9": [[7,7]],
        "literal:List": [[7,7],[7,7],[7,7]],
        "literal:None": [[6,6]],
        "literal:Tuple": [[7,7]],
        "loop:for": [[2,2],[3,3],[5,5]],
        "loop_with_early_exit:for:return": [[3,3]],
        "loop_with_late_exit:for": [[2,2],[5,5]],
        "nested_for:1": [[3,3]],
        "nested_for:4": [[5,5]],
        "return": [[5,5]],
        "return:None": [[6,6]]
      },
      "taxons": {
        "call/composition": [[7,7]],
        "call/function": [[7,7]],
        "call/function/builtin/enumerate": [[2,2],[3,3]],
        "call/function/builtin/print": [[7,7]],
        "flow/conditional/no_else": [[4,5]],
        "flow/loop/exit/early/return": [[3,3]],
        "flow/loop/exit/late": [[2,2],[5,5]],
        "flow/loop/for": [[2,2],[5,5]],
        "flow/loop/for/elements_and_indexes": [[2,5],[3,5]],
        "flow/loop/for/nested/1": [[3,3]],
        "flow/loop/for/nested/4": [[5,5]],
        "io/standard/print": [[7,7]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/function": [[1,6]],
        "test/equality": [[4,4]],
        "type/container/list": [[7,7],[7,7],[7,7]],
        "type/container/tuple": [[7,7]],
        "type/elementary/null": [[6,6]],
        "type/elementary/number/integer": [[7,7],[7,7],[7,7],[7,7],[7,7],[7,7],[7,7],[7,7],[7,7],[7,7]]
      }
    },
    "043.676-break-outer-loop.py": {
      "timestamp": "ignored",
      "source": "class BreakOuterLoop(Exception):\n    pass\ntry:\n    position = None\n    for row in m:\n        for column in m[row]:\n            if m[row][column] == v:\n                position = (row, column)\n                raise BreakOuterLoop\nexcept BreakOuterLoop:\n    pass",
      "labels": {
        "assignment": [[8,8]],
        "assignment:None": [[4,4]],
        "assignment_lhs_identifier:position": [[4,4],[8,8]],
        "assignment_rhs_atom:None": [[4,4]],
        "assignment_rhs_atom:column": [[8,8]],
        "assignment_rhs_atom:row": [[8,8]],
        "class:BreakOuterLoop": [[1,2]],
        "comparison_operator:Eq": [[7,7]],
        "except:BreakOuterLoop": [[10,10]],
        "for:column": [[6,9]],
        "for:row": [[5,9]],
        "for_each": [[5,9]],
        "if": [[7,9]],
        "if_test_atom:column": [[7,7]],
        "if_test_atom:m": [[7,7]],
        "if_test_atom:row": [[7,7]],
        "if_test_atom:v": [[7,7]],
        "if_then_branch": [[8,9]],
        "if_without_else": [[7,9]],
        "index:column": [[7,7]],
        "index:row": [[6,6],[7,7]],
        "literal:None": [[4,4]],
        "loop:for": [[5,9],[6,9]],
        "loop_with_late_exit:for": [[5,9],[6,9]],
        "nested_for:1": [[6,9]],
        "nested_index:2": [[7,7]],
        "null_operation": [[2,2],[11,11]],
        "raise:BreakOuterLoop": [[9,9]],
        "single_assignment:position": [[4,4],[8,8]],
        "try": [[3,11]],
        "try_except:BreakOuterLoop": [[3,11]],
        "try_raise:BreakOuterLoop": [[3,11]]
      },
      "taxons": {
        "class": [[1,2]],
        "flow/conditional/no_else": [[7,9]],
        "flow/exception/catch/": [[3,11]],
        "flow/exception/raise/": [[3,11]],
        "flow/loop/exit/late": [[5,9],[6,9]],
        "flow/loop/for/elements": [[5,9]],
        "flow/loop/for/nested/1": [[6,9]],
        "flow/null_operation": [[2,2],[11,11]],
        "subscript/index": [[6,6],[7,7],[7,7]],
        "test/equality": [[7,7]],
        "type/elementary/null": [[4,4]],
        "variable/assignment/single": [[4,4],[8,8]]
      }
    },
    "044.190-insert-element-in-list.py": {
      "timestamp": "ignored",
      "source": "s.insert(i, x)",
      "labels": {
        "call_argument:i": [[1,1]],
        "call_argument:x": [[1,1]],
        "method_call:insert": [[1,1]],
        "method_call_object:s": [[1,1]],
        "method_call_without_result:insert": [[1,1]],
        "update:s:i": [[1,1]],
        "update:s:x": [[1,1]],
        "update_by_method_call:s:i": [[1,1]],
        "update_by_method_call:s:x": [[1,1]],
        "update_by_method_call_with:insert": [[1,1]],
        "update_with:insert": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/list/insert": [[1,1]]
      }
    },
    "045.570-pause-execution-for-5-seconds.py": {
      "timestamp": "ignored",
      "source": "import time\ntime.sleep(5)",
      "labels": {
        "call_argument:5": [[2,2]],
        "import:time": [[1,1]],
        "import_module:time": [[1,1]],
        "literal:5": [[2,2]],
        "method_call:sleep": [[2,2]],
        "method_call_object:time": [[2,2]],
        "method_call_without_result:sleep": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/time": [[1,1]],
        "type/elementary/number/integer": [[2,2]]
      }
    },
    "046.191-extract-beginning-of-string-prefix.py": {
      "timestamp": "ignored",
      "source": "t = s[:5]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:5": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "literal:5": [[1,1]],
        "single_assignment:t": [[1,1]],
        "slice::5:": [[1,1]],
        "slice_lower:": [[1,1]],
        "slice_step:": [[1,1]],
        "slice_upper:5": [[1,1]]
      },
      "taxons": {
        "subscript/slice/stop": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "047.198-extract-string-suffix.py": {
      "timestamp": "ignored",
      "source": "t = s[-5:]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:-5": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "literal:-5": [[1,1]],
        "single_assignment:t": [[1,1]],
        "slice:-5::": [[1,1]],
        "slice_lower:-5": [[1,1]],
        "slice_step:": [[1,1]],
        "slice_upper:": [[1,1]]
      },
      "taxons": {
        "subscript/slice/start": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "048.210-multi-line-string-literal.py": {
      "timestamp": "ignored",
      "source": "s = \"\"\"Huey\nDewey\nLouie\"\"\"",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "literal:Str": [[3,3]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "type/elementary/string": [[3,3]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "049.242-split-a-space-separated-string.py": {
      "timestamp": "ignored",
      "source": "chunks = s.split()",
      "labels": {
        "assignment:split": [[1,1]],
        "assignment_lhs_identifier:chunks": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "method_call:split": [[1,1]],
        "single_assignment:chunks": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/split": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "050.572-make-an-infinite-loop.py": {
      "timestamp": "ignored",
      "source": "while True:\n    pass",
      "labels": {
        "infinite_while": [[1,2]],
        "literal:True": [[1,1]],
        "loop:while": [[1,2]],
        "loop_with_late_exit:while": [[1,2]],
        "null_operation": [[2,2]],
        "while": [[1,2]]
      },
      "taxons": {
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/while/infinite": [[1,2]],
        "flow/null_operation": [[2,2]],
        "type/elementary/boolean/true": [[1,1]]
      }
    },
    "051.230-check-if-map-contains-key.py": {
      "timestamp": "ignored",
      "source": "k in m",
      "labels": {
        "comparison_operator:In": [[1,1]]
      },
      "taxons": {
        "test/belonging": [[1,1]]
      }
    },
    "052.666-check-if-map-contains-value.py": {
      "timestamp": "ignored",
      "source": "v in map.values()",
      "labels": {
        "comparison_operator:In": [[1,1]],
        "method_call:values": [[1,1]]
      },
      "taxons": {
        "call/method/dict/values": [[1,1]],
        "test/belonging": [[1,1]]
      }
    },
    "053.1933-join-a-list-of-strings.py": {
      "timestamp": "ignored",
      "source": "y = \", \".join(map(str, x))",
      "labels": {
        "assignment:join": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:str": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:": [[1,1]],
        "call_argument:str": [[1,1]],
        "call_argument:x": [[1,1]],
        "composition": [[1,1]],
        "function_call:map": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:join": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/composition": [[1,1]],
        "call/function/builtin/map": [[1,1]],
        "call/method/sequence/string/join": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "053.240-join-a-list-of-strings.py": {
      "timestamp": "ignored",
      "source": "y = \", \".join(x)",
      "labels": {
        "assignment:join": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:join": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/join": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "054.241-compute-sum-of-integers.py": {
      "timestamp": "ignored",
      "source": "s = sum(x)",
      "labels": {
        "assignment:sum": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:sum": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/sum": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "055.575-convert-integer-to-string.py": {
      "timestamp": "ignored",
      "source": "s = str(i)",
      "labels": {
        "assignment:str": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "call_argument:i": [[1,1]],
        "function_call:str": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/str": [[1,1]],
        "call/function/builtin/str": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py": {
      "timestamp": "ignored",
      "source": "from multiprocessing import Pool\ndef f(i):\n    i * i\nwith Pool(processes) as p:\n    p.map(func=f, iterable=range(1, 1001))\nprint(\"Finished\")",
      "labels": {
        "binary_operator:Mult": [[3,3]],
        "call_argument:": [[6,6]],
        "call_argument:1": [[5,5]],
        "call_argument:1001": [[5,5]],
        "call_argument:processes": [[4,4]],
        "function:f": [[2,3]],
        "function_argument:i": [[2,2]],
        "function_argument_flavor:arg": [[2,2]],
        "function_call:Pool": [[4,4]],
        "function_call:print": [[6,6]],
        "function_call:range": [[5,5]],
        "function_call_without_result:print": [[6,6]],
        "function_returning_nothing:f": [[2,3]],
        "import:multiprocessing:Pool": [[1,1]],
        "import_module:multiprocessing": [[1,1]],
        "import_name:Pool": [[1,1]],
        "literal:1": [[5,5]],
        "literal:1001": [[5,5]],
        "literal:Str": [[6,6]],
        "method_call:map": [[5,5]],
        "method_call_object:p": [[5,5]],
        "method_call_without_result:map": [[5,5]],
        "multiplication_operator": [[3,3]],
        "range:1:1001": [[5,5]],
        "suggest_constant_definition": [[5,5]]
      },
      "taxons": {
        "call/function": [[4,4]],
        "call/function/builtin/print": [[6,6]],
        "call/function/builtin/range": [[5,5]],
        "call/method": [[5,5]],
        "io/standard/print": [[6,6]],
        "library/standard/multiprocessing/Pool": [[1,1]],
        "operator/arithmetic/multiplication": [[3,3]],
        "subroutine/argument/arg": [[2,2]],
        "subroutine/procedure": [[2,3]],
        "type/elementary/number/integer": [[5,5],[5,5]],
        "type/elementary/string": [[6,6]]
      }
    },
    "057.260-filter-list.py": {
      "timestamp": "ignored",
      "source": "y = filter(p, x)",
      "labels": {
        "assignment:filter": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:p": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:p": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:filter": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/filter": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "057.3173-filter-list.py": {
      "timestamp": "ignored",
      "source": "y = [element for element in x if p(element)]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:element": [[1,1],[1,1],[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:element": [[1,1]],
        "comprehension:List": [[1,1]],
        "comprehension_for_count:1": [[1,1]],
        "filtered_comprehension": [[1,1]],
        "function_call:p": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "058.665-extract-file-content-to-a-string.py": {
      "timestamp": "ignored",
      "source": "lines = open(f).read()",
      "labels": {
        "assignment:read": [[1,1]],
        "assignment_lhs_identifier:lines": [[1,1]],
        "assignment_rhs_atom:f": [[1,1]],
        "call_argument:f": [[1,1]],
        "function_call:open": [[1,1]],
        "method_call:read": [[1,1]],
        "single_assignment:lines": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/open": [[1,1]],
        "call/method": [[1,1]],
        "io/file/open": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "059.668-write-to-standard-error-stream.py": {
      "timestamp": "ignored",
      "source": "import sys\nprint(x, \"is negative\", file=sys.stderr)",
      "labels": {
        "call_argument:": [[2,2]],
        "call_argument:x": [[2,2]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:Str": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "io/standard/print": [[2,2]],
        "library/standard/sys": [[1,1]],
        "type/elementary/string": [[2,2]]
      }
    },
    "060.1084-read-command-line-argument.py": {
      "timestamp": "ignored",
      "source": "import sys\nx = sys.argv[1]",
      "labels": {
        "assignment": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:1": [[2,2]],
        "assignment_rhs_atom:sys": [[2,2]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "index:1": [[2,2]],
        "literal:1": [[2,2]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "library/standard/sys": [[1,1]],
        "subscript/index": [[2,2]],
        "type/elementary/number/integer": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "061.576-get-current-date.py": {
      "timestamp": "ignored",
      "source": "import datetime\nd = datetime.datetime.now()",
      "labels": {
        "assignment:now": [[2,2]],
        "assignment_lhs_identifier:d": [[2,2]],
        "assignment_rhs_atom:datetime": [[2,2]],
        "import:datetime": [[1,1]],
        "import_module:datetime": [[1,1]],
        "method_call:now": [[2,2]],
        "single_assignment:d": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/datetime": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "062.1091-find-substring-position.py": {
      "timestamp": "ignored",
      "source": "i = x.find(y)",
      "labels": {
        "assignment:find": [[1,1]],
        "assignment_lhs_identifier:i": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "assignment_rhs_atom:y": [[1,1]],
        "call_argument:y": [[1,1]],
        "method_call:find": [[1,1]],
        "single_assignment:i": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/find": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "063.1088-replace-fragment-of-a-string.py": {
      "timestamp": "ignored",
      "source": "x2 = x.replace(y, z)",
      "labels": {
        "assignment:replace": [[1,1]],
        "assignment_lhs_identifier:x2": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "assignment_rhs_atom:y": [[1,1]],
        "assignment_rhs_atom:z": [[1,1]],
        "call_argument:y": [[1,1]],
        "call_argument:z": [[1,1]],
        "method_call:replace": [[1,1]],
        "single_assignment:x2": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/replace": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "064.274-big-integer--value-3-power-247.py": {
      "timestamp": "ignored",
      "source": "x = 3 ** 247",
      "labels": {
        "assignment:Pow": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:247": [[1,1]],
        "assignment_rhs_atom:3": [[1,1]],
        "binary_operator:Pow": [[1,1]],
        "literal:247": [[1,1]],
        "literal:3": [[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "operator/arithmetic/power": [[1,1]],
        "type/elementary/number/integer": [[1,1],[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "065.1085-format-decimal-number.py": {
      "timestamp": "ignored",
      "source": "s = \"{:.1%}\".format(x)",
      "labels": {
        "assignment:format": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:format": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/format": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "066.672-big-integer-exponentiation.py": {
      "timestamp": "ignored",
      "source": "z = x ** n",
      "labels": {
        "assignment:Pow": [[1,1]],
        "assignment_lhs_identifier:z": [[1,1]],
        "assignment_rhs_atom:n": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "binary_operator:Pow": [[1,1]],
        "single_assignment:z": [[1,1]]
      },
      "taxons": {
        "operator/arithmetic/power": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "067.1426-binomial-coefficient-n-choose-k.py": {
      "timestamp": "ignored",
      "source": "import math\ndef binom(n, k):\n    return math.factorial(n) // math.factorial(k) // math.factorial(n - k)",
      "labels": {
        "binary_operator:FloorDiv": [[3,3],[3,3]],
        "binary_operator:Sub": [[3,3]],
        "call_argument:": [[3,3]],
        "call_argument:k": [[3,3]],
        "call_argument:n": [[3,3]],
        "function:binom": [[2,3]],
        "function_argument:k": [[2,2]],
        "function_argument:n": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2]],
        "function_returning_something:binom": [[2,3]],
        "import:math": [[1,1]],
        "import_module:math": [[1,1]],
        "method_call:factorial": [[3,3],[3,3],[3,3]],
        "return": [[3,3]]
      },
      "taxons": {
        "call/method": [[3,3],[3,3],[3,3]],
        "library/standard/math": [[1,1]],
        "operator/arithmetic/integer_division": [[3,3],[3,3]],
        "operator/arithmetic/substraction": [[3,3]],
        "subroutine/argument/arg": [[2,2],[2,2]],
        "subroutine/function": [[2,3]]
      }
    },
    "068.2271-create-a-bitset.py": {
      "timestamp": "ignored",
      "source": "from __future__ import division\nimport math\nx = bytearray(int(math.ceil(n / 8.0)))",
      "labels": {
        "assignment:bytearray": [[3,3]],
        "assignment_lhs_identifier:x": [[3,3]],
        "assignment_rhs_atom:8.0": [[3,3]],
        "assignment_rhs_atom:math": [[3,3]],
        "assignment_rhs_atom:n": [[3,3]],
        "binary_operator:Div": [[3,3]],
        "call_argument:": [[3,3],[3,3],[3,3]],
        "composition": [[3,3],[3,3]],
        "function_call:bytearray": [[3,3]],
        "function_call:int": [[3,3]],
        "import:__future__:division": [[1,1]],
        "import:math": [[2,2]],
        "import_module:__future__": [[1,1]],
        "import_module:math": [[2,2]],
        "import_name:division": [[1,1]],
        "literal:8.0": [[3,3]],
        "method_call:ceil": [[3,3]],
        "single_assignment:x": [[3,3]]
      },
      "taxons": {
        "call/composition": [[3,3],[3,3]],
        "call/function/builtin/casting/bytearray": [[3,3]],
        "call/function/builtin/casting/int": [[3,3]],
        "call/method": [[3,3]],
        "library/standard/__future__/division": [[1,1]],
        "library/standard/math": [[2,2]],
        "operator/arithmetic/division": [[3,3]],
        "type/elementary/number/floating_point": [[3,3]],
        "type/elementary/number/integer": [[3,3]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "069.1086-seed-random-generator.py": {
      "timestamp": "ignored",
      "source": "import random\nrand = random.Random(s)",
      "labels": {
        "assignment:Random": [[2,2]],
        "assignment_lhs_identifier:rand": [[2,2]],
        "assignment_rhs_atom:random": [[2,2]],
        "assignment_rhs_atom:s": [[2,2]],
        "call_argument:s": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:Random": [[2,2]],
        "single_assignment:rand": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "070.1087-use-clock-as-random-generator-seed.py": {
      "timestamp": "ignored",
      "source": "import random\nrand = random.Random()",
      "labels": {
        "assignment:Random": [[2,2]],
        "assignment_lhs_identifier:rand": [[2,2]],
        "assignment_rhs_atom:random": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:Random": [[2,2]],
        "single_assignment:rand": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "071.379-echo-program-implementation.py": {
      "timestamp": "ignored",
      "source": "import sys\nprint(\" \".join(sys.argv[1:]))",
      "labels": {
        "call_argument:": [[2,2],[2,2]],
        "composition": [[2,2]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:1": [[2,2]],
        "literal:Str": [[2,2]],
        "method_call:join": [[2,2]],
        "slice:1::": [[2,2]],
        "slice_lower:1": [[2,2]],
        "slice_step:": [[2,2]],
        "slice_upper:": [[2,2]]
      },
      "taxons": {
        "call/composition": [[2,2]],
        "call/function/builtin/print": [[2,2]],
        "call/method/sequence/string/join": [[2,2]],
        "io/standard/print": [[2,2]],
        "library/standard/sys": [[1,1]],
        "subscript/slice/start": [[2,2]],
        "type/elementary/number/integer": [[2,2]],
        "type/elementary/string": [[2,2]]
      }
    },
    "073.673-create-a-factory.py": {
      "timestamp": "ignored",
      "source": "def fact(a_class, str_):\n    if issubclass(a_class, Parent):\n        return a_class(str_)",
      "labels": {
        "call_argument:Parent": [[2,2]],
        "call_argument:a_class": [[2,2]],
        "call_argument:str_": [[3,3]],
        "function:fact": [[1,3]],
        "function_argument:a_class": [[1,1]],
        "function_argument:str_": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_call:a_class": [[3,3]],
        "function_call:issubclass": [[2,2]],
        "function_returning_something:fact": [[1,3]],
        "function_tail_call:a_class": [[3,3]],
        "higher_order_function:a_class": [[1,3]],
        "if": [[2,3]],
        "if_test_atom:Parent": [[2,2]],
        "if_test_atom:a_class": [[2,2]],
        "if_then_branch": [[3,3]],
        "if_without_else": [[2,3]],
        "return": [[3,3]]
      },
      "taxons": {
        "call/function": [[3,3]],
        "call/function/builtin/issubclass": [[2,2]],
        "flow/conditional/no_else": [[2,3]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/function": [[1,3]],
        "subroutine/higher_order": [[1,3]]
      }
    },
    "074.674-compute-gcd.py": {
      "timestamp": "ignored",
      "source": "from fractions import gcd\nx = gcd(a, b)",
      "labels": {
        "assignment:gcd": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:a": [[2,2]],
        "assignment_rhs_atom:b": [[2,2]],
        "call_argument:a": [[2,2]],
        "call_argument:b": [[2,2]],
        "function_call:gcd": [[2,2]],
        "import:fractions:gcd": [[1,1]],
        "import_module:fractions": [[1,1]],
        "import_name:gcd": [[1,1]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "library/standard/fractions/gcd": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "075.675-compute-lcm.py": {
      "timestamp": "ignored",
      "source": "from fractions import gcd\nx = (a * b) // gcd(a, b)",
      "labels": {
        "assignment:FloorDiv": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:a": [[2,2],[2,2]],
        "assignment_rhs_atom:b": [[2,2],[2,2]],
        "binary_operator:FloorDiv": [[2,2]],
        "binary_operator:Mult": [[2,2]],
        "call_argument:a": [[2,2]],
        "call_argument:b": [[2,2]],
        "function_call:gcd": [[2,2]],
        "import:fractions:gcd": [[1,1]],
        "import_module:fractions": [[1,1]],
        "import_name:gcd": [[1,1]],
        "multiplication_operator": [[2,2]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "library/standard/fractions/gcd": [[1,1]],
        "operator/arithmetic/integer_division": [[2,2]],
        "operator/arithmetic/multiplication": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "076.1083-binary-digits-from-an-integer.py": {
      "timestamp": "ignored",
      "source": "s = \"{:b}\".format(x)",
      "labels": {
        "assignment:format": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:format": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/format": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "077.1093-complex-number.py": {
      "timestamp": "ignored",
      "source": "x = 3j - 2\ny = x * 1j",
      "labels": {
        "assignment:Mult": [[2,2]],
        "assignment:Sub": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_lhs_identifier:y": [[2,2]],
        "assignment_rhs_atom:1j": [[2,2]],
        "assignment_rhs_atom:2": [[1,1]],
        "assignment_rhs_atom:3j": [[1,1]],
        "assignment_rhs_atom:x": [[2,2]],
        "binary_operator:Mult": [[2,2]],
        "binary_operator:Sub": [[1,1]],
        "literal:1j": [[2,2]],
        "literal:2": [[1,1]],
        "literal:3j": [[1,1]],
        "multiplication_operator": [[2,2]],
        "single_assignment:x": [[1,1]],
        "single_assignment:y": [[2,2]]
      },
      "taxons": {
        "operator/arithmetic/multiplication": [[2,2]],
        "operator/arithmetic/substraction": [[1,1]],
        "type/elementary/number/complex": [[1,1],[2,2]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1],[2,2]]
      }
    },
    "078.1089-do-while-loop.py": {
      "timestamp": "ignored",
      "source": "while True:\n    do_something()\n    if not c:\n        break",
      "labels": {
        "break": [[4,4]],
        "function_call:do_something": [[2,2]],
        "function_call_without_arguments:do_something": [[2,2]],
        "function_call_without_result:do_something": [[2,2]],
        "if": [[3,4]],
        "if_test_atom:c": [[3,3]],
        "if_then_branch": [[4,4]],
        "if_without_else": [[3,4]],
        "infinite_while": [[1,4]],
        "literal:True": [[1,1]],
        "loop:while": [[1,4]],
        "loop_with_early_exit:while:break": [[1,4]],
        "unary_operator:Not": [[3,3]],
        "while": [[1,4]]
      },
      "taxons": {
        "call/function/without_arguments": [[2,2]],
        "flow/conditional/no_else": [[3,4]],
        "flow/loop/exit/early/break": [[1,4]],
        "flow/loop/while/infinite": [[1,4]],
        "operator/boolean/not": [[3,3]],
        "type/elementary/boolean/true": [[1,1]]
      }
    },
    "079.1090-convert-integer-to-floating-point-number.py": {
      "timestamp": "ignored",
      "source": "y = float(x)",
      "labels": {
        "assignment:float": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:float": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/float": [[1,1]],
        "type/elementary/number/floating_point": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "080.1092-truncate-floating-point-number-to-integer.py": {
      "timestamp": "ignored",
      "source": "y = int(x)",
      "labels": {
        "assignment:int": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:int": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/int": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "081.2270-round-floating-point-number-to-integer.py": {
      "timestamp": "ignored",
      "source": "y = int(x + 0.5)",
      "labels": {
        "addition_operator": [[1,1]],
        "assignment:int": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:0.5": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "binary_operator:Add": [[1,1]],
        "call_argument:": [[1,1]],
        "function_call:int": [[1,1]],
        "literal:0.5": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/int": [[1,1]],
        "operator/arithmetic/addition": [[1,1]],
        "type/elementary/number/floating_point": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "082.1096-count-substring-occurrences.py": {
      "timestamp": "ignored",
      "source": "count = s.count(t)",
      "labels": {
        "assignment:count": [[1,1]],
        "assignment_lhs_identifier:count": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "assignment_rhs_atom:t": [[1,1]],
        "call_argument:t": [[1,1]],
        "method_call:count": [[1,1]],
        "single_assignment:count": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/count": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "083.1805-regex-with-character-repetition.py": {
      "timestamp": "ignored",
      "source": "import re\nr = re.compile(r\"htt+p\")",
      "labels": {
        "assignment:compile": [[2,2]],
        "assignment_lhs_identifier:r": [[2,2]],
        "assignment_rhs_atom:re": [[2,2]],
        "call_argument:": [[2,2]],
        "import:re": [[1,1]],
        "import_module:re": [[1,1]],
        "literal:Str": [[2,2]],
        "method_call:compile": [[2,2]],
        "single_assignment:r": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/re": [[1,1]],
        "type/elementary/string": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "084.1940-count-bits-set-in-integer-binary-representation.py": {
      "timestamp": "ignored",
      "source": "c = bin(i).count(\"1\")",
      "labels": {
        "assignment:count": [[1,1]],
        "assignment_lhs_identifier:c": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "call_argument:": [[1,1]],
        "call_argument:i": [[1,1]],
        "function_call:bin": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:count": [[1,1]],
        "single_assignment:c": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/bin": [[1,1]],
        "call/method/sequence/count": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "085.1003-check-if-integer-addition-will-overflow.py": {
      "timestamp": "ignored",
      "source": "def adding_will_overflow(x, y):\n    return False",
      "labels": {
        "function:adding_will_overflow": [[1,2]],
        "function_argument:x": [[1,1]],
        "function_argument:y": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_returning_something:adding_will_overflow": [[1,2]],
        "literal:False": [[2,2]],
        "return:False": [[2,2]]
      },
      "taxons": {
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/function": [[1,2]],
        "type/elementary/boolean/false": [[2,2]]
      }
    },
    "086.1004-check-if-integer-multiplication-will-overflow.py": {
      "timestamp": "ignored",
      "source": "def multiplyWillOverflow(x, y):\n    return False",
      "labels": {
        "function:multiplyWillOverflow": [[1,2]],
        "function_argument:x": [[1,1]],
        "function_argument:y": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_returning_something:multiplyWillOverflow": [[1,2]],
        "literal:False": [[2,2]],
        "return:False": [[2,2]]
      },
      "taxons": {
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/function": [[1,2]],
        "type/elementary/boolean/false": [[2,2]]
      }
    },
    "087.1139-stop-program.py": {
      "timestamp": "ignored",
      "source": "import sys\nsys.exit(1)",
      "labels": {
        "call_argument:1": [[2,2]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:1": [[2,2]],
        "method_call:exit": [[2,2]],
        "method_call_object:sys": [[2,2]],
        "method_call_without_result:exit": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/sys": [[1,1]],
        "type/elementary/number/integer": [[2,2]]
      }
    },
    "088.2143-allocate-1m-bytes.py": {
      "timestamp": "ignored",
      "source": "buf = bytearray(1000000)",
      "labels": {
        "assignment:bytearray": [[1,1]],
        "assignment_lhs_identifier:buf": [[1,1]],
        "assignment_rhs_atom:1000000": [[1,1]],
        "call_argument:1000000": [[1,1]],
        "function_call:bytearray": [[1,1]],
        "literal:1000000": [[1,1]],
        "single_assignment:buf": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/bytearray": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "089.1097-handle-invalid-argument.py": {
      "timestamp": "ignored",
      "source": "raise ValueError(\"x is invalid\")",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:ValueError": [[1,1]],
        "literal:Str": [[1,1]],
        "raise:ValueError": [[1,1]]
      },
      "taxons": {
        "call/function": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "090.1099-read-only-outside.py": {
      "timestamp": "ignored",
      "source": "class Foo(object):\n    def __init__(self):\n        self._x = 0\n    @property\n    def x(self):\n        return self._x",
      "labels": {
        "assignment:0": [[3,3]],
        "assignment_lhs_identifier:self": [[3,3]],
        "assignment_rhs_atom:0": [[3,3]],
        "class:Foo": [[1,6]],
        "decorated_function:x": [[4,6]],
        "function:__init__": [[2,3]],
        "function:x": [[4,6]],
        "function_argument:self": [[2,2],[5,5]],
        "function_argument_flavor:arg": [[2,2],[5,5]],
        "function_decorator:property": [[4,6]],
        "function_returning_nothing:__init__": [[2,3]],
        "function_returning_something:x": [[4,6]],
        "instance_method:__init__": [[2,3]],
        "instance_method:x": [[4,6]],
        "literal:0": [[3,3]],
        "method:__init__": [[2,3]],
        "method:x": [[4,6]],
        "return": [[6,6]]
      },
      "taxons": {
        "class": [[1,6]],
        "subroutine/argument/arg": [[2,2],[5,5]],
        "subroutine/decorated": [[4,6]],
        "subroutine/function": [[4,6]],
        "subroutine/method/flavor/instance": [[2,3],[4,6]],
        "subroutine/method/naming/magic": [[2,3]],
        "subroutine/procedure": [[2,3]],
        "type/elementary/number/integer/zero": [[3,3]],
        "variable/assignment": [[3,3]]
      }
    },
    "091.1098-load-json-file-into-struct.py": {
      "timestamp": "ignored",
      "source": "import json\nwith open(\"data.json\", \"r\") as input:\n    x = json.load(input)",
      "labels": {
        "assignment:load": [[3,3]],
        "assignment_lhs_identifier:x": [[3,3]],
        "assignment_rhs_atom:input": [[3,3]],
        "assignment_rhs_atom:json": [[3,3]],
        "call_argument:": [[2,2],[2,2]],
        "call_argument:input": [[3,3]],
        "function_call:open": [[2,2]],
        "import:json": [[1,1]],
        "import_module:json": [[1,1]],
        "literal:Str": [[2,2],[2,2]],
        "method_call:load": [[3,3]],
        "single_assignment:x": [[3,3]]
      },
      "taxons": {
        "call/function/builtin/open": [[2,2]],
        "call/method": [[3,3]],
        "io/file/open": [[2,2]],
        "library/standard/json": [[1,1]],
        "type/elementary/string": [[2,2],[2,2]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "092.1100-save-object-into-json-file.py": {
      "timestamp": "ignored",
      "source": "import json\nwith open(\"data.json\", \"w\") as output:\n    json.dump(x, output)",
      "labels": {
        "call_argument:": [[2,2],[2,2]],
        "call_argument:output": [[3,3]],
        "call_argument:x": [[3,3]],
        "function_call:open": [[2,2]],
        "import:json": [[1,1]],
        "import_module:json": [[1,1]],
        "literal:Str": [[2,2],[2,2]],
        "method_call:dump": [[3,3]],
        "method_call_object:json": [[3,3]],
        "method_call_without_result:dump": [[3,3]]
      },
      "taxons": {
        "call/function/builtin/open": [[2,2]],
        "call/method": [[3,3]],
        "io/file/open": [[2,2]],
        "library/standard/json": [[1,1]],
        "type/elementary/string": [[2,2],[2,2]]
      }
    },
    "093.1082-pass-a-runnable-procedure-as-parameter.py": {
      "timestamp": "ignored",
      "source": "from __future__ import print_function\ndef control(f):\n    return f()",
      "labels": {
        "function:control": [[2,3]],
        "function_argument:f": [[2,2]],
        "function_argument_flavor:arg": [[2,2]],
        "function_call:f": [[3,3]],
        "function_call_without_arguments:f": [[3,3]],
        "function_returning_something:control": [[2,3]],
        "function_tail_call:f": [[3,3]],
        "higher_order_function:f": [[2,3]],
        "import:__future__:print_function": [[1,1]],
        "import_module:__future__": [[1,1]],
        "import_name:print_function": [[1,1]],
        "return": [[3,3]]
      },
      "taxons": {
        "call/function/without_arguments": [[3,3]],
        "library/standard/__future__/print_function": [[1,1]],
        "subroutine/argument/arg": [[2,2]],
        "subroutine/function": [[2,3]],
        "subroutine/higher_order": [[2,3]]
      }
    },
    "094.1101-print-type-of-variable.py": {
      "timestamp": "ignored",
      "source": "print(type(x))",
      "labels": {
        "call_argument:": [[1,1]],
        "call_argument:x": [[1,1]],
        "composition": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call:type": [[1,1]],
        "function_call_without_result:print": [[1,1]]
      },
      "taxons": {
        "call/composition": [[1,1]],
        "call/function/builtin/print": [[1,1]],
        "call/function/builtin/type": [[1,1]],
        "io/standard/print": [[1,1]]
      }
    },
    "094.1864-print-type-of-variable.py": {
      "timestamp": "ignored",
      "source": "print(x.__class__)",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]]
      }
    },
    "095.2140-get-file-size.py": {
      "timestamp": "ignored",
      "source": "import os\nx = os.path.getsize(path)",
      "labels": {
        "assignment:getsize": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:os": [[2,2]],
        "assignment_rhs_atom:path": [[2,2]],
        "call_argument:path": [[2,2]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "method_call:getsize": [[2,2]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/os": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "096.1094-check-string-prefix.py": {
      "timestamp": "ignored",
      "source": "b = s.startswith(prefix)",
      "labels": {
        "assignment:startswith": [[1,1]],
        "assignment_lhs_identifier:b": [[1,1]],
        "assignment_rhs_atom:prefix": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:prefix": [[1,1]],
        "method_call:startswith": [[1,1]],
        "single_assignment:b": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/startswith": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "097.1095-check-string-suffix.py": {
      "timestamp": "ignored",
      "source": "b = s.endswith(suffix)",
      "labels": {
        "assignment:endswith": [[1,1]],
        "assignment_lhs_identifier:b": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "assignment_rhs_atom:suffix": [[1,1]],
        "call_argument:suffix": [[1,1]],
        "method_call:endswith": [[1,1]],
        "single_assignment:b": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/endswith": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "098.2142-epoch-seconds-to-date-object.py": {
      "timestamp": "ignored",
      "source": "import datetime\nd = datetime.date.fromtimestamp(ts)",
      "labels": {
        "assignment:fromtimestamp": [[2,2]],
        "assignment_lhs_identifier:d": [[2,2]],
        "assignment_rhs_atom:datetime": [[2,2]],
        "assignment_rhs_atom:ts": [[2,2]],
        "call_argument:ts": [[2,2]],
        "import:datetime": [[1,1]],
        "import_module:datetime": [[1,1]],
        "method_call:fromtimestamp": [[2,2]],
        "single_assignment:d": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/datetime": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "099.1429-format-date-yyyy-mm-dd.py": {
      "timestamp": "ignored",
      "source": "from datetime import date\nd = date(2016, 9, 28)\nx = d.strftime(\"%Y-%m-%d\")",
      "labels": {
        "assignment:date": [[2,2]],
        "assignment:strftime": [[3,3]],
        "assignment_lhs_identifier:d": [[2,2]],
        "assignment_lhs_identifier:x": [[3,3]],
        "assignment_rhs_atom:2016": [[2,2]],
        "assignment_rhs_atom:28": [[2,2]],
        "assignment_rhs_atom:9": [[2,2]],
        "assignment_rhs_atom:d": [[3,3]],
        "call_argument:": [[3,3]],
        "call_argument:2016": [[2,2]],
        "call_argument:28": [[2,2]],
        "call_argument:9": [[2,2]],
        "function_call:date": [[2,2]],
        "import:datetime:date": [[1,1]],
        "import_module:datetime": [[1,1]],
        "import_name:date": [[1,1]],
        "literal:2016": [[2,2]],
        "literal:28": [[2,2]],
        "literal:9": [[2,2]],
        "literal:Str": [[3,3]],
        "method_call:strftime": [[3,3]],
        "single_assignment:d": [[2,2]],
        "single_assignment:x": [[3,3]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "call/method": [[3,3]],
        "library/standard/datetime/date": [[1,1]],
        "type/elementary/number/integer": [[2,2],[2,2],[2,2]],
        "type/elementary/string": [[3,3]],
        "variable/assignment/single": [[2,2],[3,3]]
      }
    },
    "099.2693-format-date-yyyy-mm-dd.py": {
      "timestamp": "ignored",
      "source": "from datetime import date\nd = date.today()\nx = d.isoformat()",
      "labels": {
        "assignment:isoformat": [[3,3]],
        "assignment:today": [[2,2]],
        "assignment_lhs_identifier:d": [[2,2]],
        "assignment_lhs_identifier:x": [[3,3]],
        "assignment_rhs_atom:d": [[3,3]],
        "assignment_rhs_atom:date": [[2,2]],
        "import:datetime:date": [[1,1]],
        "import_module:datetime": [[1,1]],
        "import_name:date": [[1,1]],
        "method_call:isoformat": [[3,3]],
        "method_call:today": [[2,2]],
        "single_assignment:d": [[2,2]],
        "single_assignment:x": [[3,3]]
      },
      "taxons": {
        "call/method": [[2,2],[3,3]],
        "library/standard/datetime/date": [[1,1]],
        "variable/assignment/single": [[2,2],[3,3]]
      }
    },
    "100.1142-sort-by-a-comparator.py": {
      "timestamp": "ignored",
      "source": "items.sort(c)",
      "labels": {
        "call_argument:c": [[1,1]],
        "method_call:sort": [[1,1]],
        "method_call_object:items": [[1,1]],
        "method_call_without_result:sort": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/list/sort": [[1,1]]
      }
    },
    "101.2172-load-from-http-get-request-into-a-string.py": {
      "timestamp": "ignored",
      "source": "import urllib.request\nwith urllib.request.urlopen(u) as f:\n    s = f.read()",
      "labels": {
        "assignment:read": [[3,3]],
        "assignment_lhs_identifier:s": [[3,3]],
        "assignment_rhs_atom:f": [[3,3]],
        "call_argument:u": [[2,2]],
        "import:urllib.request": [[1,1]],
        "import_module:urllib.request": [[1,1]],
        "method_call:read": [[3,3]],
        "method_call:urlopen": [[2,2]],
        "single_assignment:s": [[3,3]]
      },
      "taxons": {
        "call/method": [[2,2],[3,3]],
        "library/standard/urllib.request": [[1,1]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "102.2173-load-from-http-get-request-into-a-file.py": {
      "timestamp": "ignored",
      "source": "import urllib\nfilename, headers = urllib.request.urlretrieve(u, \"result.txt\")",
      "labels": {
        "assignment:urlretrieve": [[2,2]],
        "assignment_lhs_identifier:filename": [[2,2]],
        "assignment_lhs_identifier:headers": [[2,2]],
        "assignment_rhs_atom:u": [[2,2]],
        "assignment_rhs_atom:urllib": [[2,2]],
        "call_argument:": [[2,2]],
        "call_argument:u": [[2,2]],
        "import:urllib": [[1,1]],
        "import_module:urllib": [[1,1]],
        "literal:Str": [[2,2]],
        "method_call:urlretrieve": [[2,2]],
        "parallel_assignment:2": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/urllib": [[1,1]],
        "type/container/tuple/assignment": [[2,2]],
        "type/elementary/string": [[2,2]],
        "variable/assignment/parallel/2": [[2,2]]
      }
    },
    "103.2276-load-xml-file-into-struct.py": {
      "timestamp": "ignored",
      "source": "import lxml.etree\nx = lxml.etree.parse(\"data.xml\")",
      "labels": {
        "assignment:parse": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:lxml": [[2,2]],
        "call_argument:": [[2,2]],
        "import:lxml.etree": [[1,1]],
        "import_module:lxml.etree": [[1,1]],
        "literal:Str": [[2,2]],
        "method_call:parse": [[2,2]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/third_party/lxml.etree": [[1,1]],
        "type/elementary/string": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "104.3264-save-object-into-xml-file.py": {
      "timestamp": "ignored",
      "source": "import pyxser as pyx\nclass TestClass(object):\n    a = None\n    b = None\n    c = None\n    def __init__(self, a, b, c):\n        self.a = a\n        self.b = b\n        self.c = c\ntst = TestClass(\"var_a\", \"var_b\", \"var_c\")\nser = pyx.serialize(obj=tst, enc=\"utf-8\")\nprint(ser)",
      "labels": {
        "assignment": [[7,7],[8,8],[9,9]],
        "assignment:None": [[3,3],[4,4],[5,5]],
        "assignment:TestClass": [[10,10]],
        "assignment:serialize": [[11,11]],
        "assignment_lhs_identifier:a": [[3,3]],
        "assignment_lhs_identifier:b": [[4,4]],
        "assignment_lhs_identifier:c": [[5,5]],
        "assignment_lhs_identifier:self": [[7,7],[8,8],[9,9]],
        "assignment_lhs_identifier:ser": [[11,11]],
        "assignment_lhs_identifier:tst": [[10,10]],
        "assignment_rhs_atom:None": [[3,3],[4,4],[5,5]],
        "assignment_rhs_atom:a": [[7,7]],
        "assignment_rhs_atom:b": [[8,8]],
        "assignment_rhs_atom:c": [[9,9]],
        "assignment_rhs_atom:pyx": [[11,11]],
        "assignment_rhs_atom:tst": [[11,11]],
        "call_argument:": [[10,10],[10,10],[10,10]],
        "call_argument:ser": [[12,12]],
        "class:TestClass": [[2,9]],
        "function:__init__": [[6,9]],
        "function_argument:a": [[6,6]],
        "function_argument:b": [[6,6]],
        "function_argument:c": [[6,6]],
        "function_argument:self": [[6,6]],
        "function_argument_flavor:arg": [[6,6],[6,6],[6,6],[6,6]],
        "function_call:TestClass": [[10,10]],
        "function_call:print": [[12,12]],
        "function_call_without_result:print": [[12,12]],
        "function_returning_nothing:__init__": [[6,9]],
        "import:pyxser": [[1,1]],
        "import_module:pyxser": [[1,1]],
        "instance_method:__init__": [[6,9]],
        "literal:None": [[3,3],[4,4],[5,5]],
        "literal:Str": [[10,10],[10,10],[10,10],[11,11]],
        "method:__init__": [[6,9]],
        "method_call:serialize": [[11,11]],
        "single_assignment:a": [[3,3]],
        "single_assignment:b": [[4,4]],
        "single_assignment:c": [[5,5]],
        "single_assignment:ser": [[11,11]],
        "single_assignment:tst": [[10,10]]
      },
      "taxons": {
        "call/function": [[10,10]],
        "call/function/builtin/print": [[12,12]],
        "call/method": [[11,11]],
        "class": [[2,9]],
        "io/standard/print": [[12,12]],
        "library/third_party/pyxser": [[1,1]],
        "subroutine/argument/arg": [[6,6],[6,6],[6,6],[6,6]],
        "subroutine/method/flavor/instance": [[6,9]],
        "subroutine/method/naming/magic": [[6,9]],
        "subroutine/procedure": [[6,9]],
        "type/elementary/null": [[3,3],[4,4],[5,5]],
        "type/elementary/string": [[10,10],[10,10],[10,10],[11,11]],
        "variable/assignment": [[7,7],[8,8],[9,9]],
        "variable/assignment/single": [[3,3],[4,4],[5,5],[10,10],[11,11]]
      }
    },
    "105.1804-current-executable-name.py": {
      "timestamp": "ignored",
      "source": "import sys\ns = sys.argv[0]",
      "labels": {
        "assignment": [[2,2]],
        "assignment_lhs_identifier:s": [[2,2]],
        "assignment_rhs_atom:0": [[2,2]],
        "assignment_rhs_atom:sys": [[2,2]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "index:0": [[2,2]],
        "literal:0": [[2,2]],
        "single_assignment:s": [[2,2]]
      },
      "taxons": {
        "library/standard/sys": [[1,1]],
        "subscript/index": [[2,2]],
        "type/elementary/number/integer/zero": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "106.2039-get-program-working-directory.py": {
      "timestamp": "ignored",
      "source": "import os\ndir = os.getcwd()",
      "labels": {
        "assignment:getcwd": [[2,2]],
        "assignment_lhs_identifier:dir": [[2,2]],
        "assignment_rhs_atom:os": [[2,2]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "method_call:getcwd": [[2,2]],
        "single_assignment:dir": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/os": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "107.2139-get-folder-containing-current-program.py": {
      "timestamp": "ignored",
      "source": "import os\ndir = os.path.dirname(os.path.abspath(__file__))",
      "labels": {
        "assignment:dirname": [[2,2]],
        "assignment_lhs_identifier:dir": [[2,2]],
        "assignment_rhs_atom:__file__": [[2,2]],
        "assignment_rhs_atom:os": [[2,2],[2,2]],
        "call_argument:": [[2,2]],
        "call_argument:__file__": [[2,2]],
        "composition": [[2,2]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "method_call:abspath": [[2,2]],
        "method_call:dirname": [[2,2]],
        "single_assignment:dir": [[2,2]]
      },
      "taxons": {
        "call/composition": [[2,2]],
        "call/method": [[2,2],[2,2]],
        "library/standard/os": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "108.1291-determine-if-variable-name-is-defined.py": {
      "timestamp": "ignored",
      "source": "if \"x\" in locals():\n    print(x)",
      "labels": {
        "call_argument:x": [[2,2]],
        "comparison_operator:In": [[1,1]],
        "function_call:locals": [[1,1]],
        "function_call:print": [[2,2]],
        "function_call_without_arguments:locals": [[1,1]],
        "function_call_without_result:print": [[2,2]],
        "if": [[1,2]],
        "if_then_branch": [[2,2]],
        "if_without_else": [[1,2]],
        "literal:Str": [[1,1]],
        "yoda_comparison:In": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/locals": [[1,1]],
        "call/function/builtin/print": [[2,2]],
        "call/function/without_arguments": [[1,1]],
        "flow/conditional/no_else": [[1,2]],
        "io/standard/print": [[2,2]],
        "test/belonging": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "109.2280-number-of-bytes-of-a-type.py": {
      "timestamp": "ignored",
      "source": "import pympler.asizeof\nn = pympler.asizeof.asizeof(t)",
      "labels": {
        "assignment:asizeof": [[2,2]],
        "assignment_lhs_identifier:n": [[2,2]],
        "assignment_rhs_atom:pympler": [[2,2]],
        "assignment_rhs_atom:t": [[2,2]],
        "call_argument:t": [[2,2]],
        "import:pympler.asizeof": [[1,1]],
        "import_module:pympler.asizeof": [[1,1]],
        "method_call:asizeof": [[2,2]],
        "single_assignment:n": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/third_party/pympler.asizeof": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "110.1455-check-if-string-is-blank.py": {
      "timestamp": "ignored",
      "source": "blank = s.strip() == \"\"",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:blank": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "comparison_operator:Eq": [[1,1]],
        "empty_literal:Str": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:strip": [[1,1]],
        "single_assignment:blank": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/strip": [[1,1]],
        "test/equality": [[1,1]],
        "type/elementary/string/empty": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "111.2168-launch-other-program.py": {
      "timestamp": "ignored",
      "source": "import subprocess\nsubprocess.call([\"x\", \"a\", \"b\"])",
      "labels": {
        "call_argument:": [[2,2]],
        "import:subprocess": [[1,1]],
        "import_module:subprocess": [[1,1]],
        "literal:List": [[2,2]],
        "literal:Str": [[2,2],[2,2],[2,2]],
        "method_call:call": [[2,2]],
        "method_call_object:subprocess": [[2,2]],
        "method_call_without_result:call": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/subprocess": [[1,1]],
        "type/container/list": [[2,2]],
        "type/elementary/string": [[2,2],[2,2],[2,2]]
      }
    },
    "112.2144-iterate-over-map-entries-ordered-by-keys.py": {
      "timestamp": "ignored",
      "source": "for k in sorted(mymap):\n    print(mymap[k])",
      "labels": {
        "call_argument:": [[2,2]],
        "call_argument:mymap": [[1,1]],
        "for:k": [[1,2]],
        "function_call:print": [[2,2]],
        "function_call:sorted": [[1,1]],
        "function_call_without_result:print": [[2,2]],
        "index:k": [[2,2]],
        "loop:for": [[1,2]],
        "loop_with_late_exit:for": [[1,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "call/function/builtin/sorted": [[1,1]],
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/for": [[1,2]],
        "io/standard/print": [[2,2]],
        "subscript/index": [[2,2]]
      }
    },
    "113.2157-iterate-over-map-entries-ordered-by-values.py": {
      "timestamp": "ignored",
      "source": "for x, k in sorted((x, k) for k, x in mymap.items()):\n    print(k, x)",
      "labels": {
        "call_argument:": [[1,1]],
        "call_argument:k": [[2,2]],
        "call_argument:x": [[2,2]],
        "composition": [[1,1]],
        "comprehension:Generator": [[1,1]],
        "comprehension_for_count:1": [[1,1]],
        "for:k": [[2,2]],
        "for:x": [[1,1]],
        "function_call:print": [[2,2]],
        "function_call:sorted": [[1,1]],
        "function_call_without_result:print": [[2,2]],
        "loop:for": [[1,1],[2,2]],
        "loop_with_late_exit:for": [[1,1],[2,2]],
        "method_call:items": [[1,1]],
        "nested_for:1": [[2,2]]
      },
      "taxons": {
        "call/composition": [[1,1]],
        "call/function/builtin/print": [[2,2]],
        "call/function/builtin/sorted": [[1,1]],
        "call/method/dict/items": [[1,1]],
        "flow/loop/exit/late": [[1,1],[2,2]],
        "flow/loop/for": [[1,1]],
        "flow/loop/for/nested/1": [[2,2]],
        "io/standard/print": [[2,2]]
      }
    },
    "114.2273-test-deep-equality.py": {
      "timestamp": "ignored",
      "source": "b = x == y",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:b": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "assignment_rhs_atom:y": [[1,1]],
        "comparison_operator:Eq": [[1,1]],
        "single_assignment:b": [[1,1]]
      },
      "taxons": {
        "test/equality": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "115.2138-compare-dates.py": {
      "timestamp": "ignored",
      "source": "import datetime\nb = d1 < d2",
      "labels": {
        "assignment": [[2,2]],
        "assignment_lhs_identifier:b": [[2,2]],
        "assignment_rhs_atom:d1": [[2,2]],
        "assignment_rhs_atom:d2": [[2,2]],
        "comparison_operator:Lt": [[2,2]],
        "import:datetime": [[1,1]],
        "import_module:datetime": [[1,1]],
        "single_assignment:b": [[2,2]]
      },
      "taxons": {
        "library/standard/datetime": [[1,1]],
        "test/inequality": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "116.1257-remove-occurrences-of-word-from-string.py": {
      "timestamp": "ignored",
      "source": "s2 = s1.replace(w, \"\")",
      "labels": {
        "assignment:replace": [[1,1]],
        "assignment_lhs_identifier:s2": [[1,1]],
        "assignment_rhs_atom:s1": [[1,1]],
        "assignment_rhs_atom:w": [[1,1]],
        "call_argument:": [[1,1]],
        "call_argument:w": [[1,1]],
        "empty_literal:Str": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:replace": [[1,1]],
        "single_assignment:s2": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/replace": [[1,1]],
        "type/elementary/string/empty": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "117.1297-get-list-size.py": {
      "timestamp": "ignored",
      "source": "n = len(x)",
      "labels": {
        "assignment:len": [[1,1]],
        "assignment_lhs_identifier:n": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:len": [[1,1]],
        "single_assignment:n": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/len": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "118.1254-list-to-set.py": {
      "timestamp": "ignored",
      "source": "y = set(x)",
      "labels": {
        "assignment:set": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:set": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/set": [[1,1]],
        "type/container/set": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "118.3266-list-to-set.py": {
      "timestamp": "ignored",
      "source": "set(x)",
      "labels": {
        "call_argument:x": [[1,1]],
        "function_call:set": [[1,1]],
        "function_call_without_result:set": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/set": [[1,1]],
        "type/container/set": [[1,1]]
      }
    },
    "119.1253-deduplicate-list.py": {
      "timestamp": "ignored",
      "source": "x = list(set(x))",
      "labels": {
        "assignment:list": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:": [[1,1]],
        "call_argument:x": [[1,1]],
        "composition": [[1,1]],
        "function_call:list": [[1,1]],
        "function_call:set": [[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "call/composition": [[1,1]],
        "call/function/builtin/casting/list": [[1,1]],
        "call/function/builtin/casting/set": [[1,1]],
        "type/container/list": [[1,1]],
        "type/container/set": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "119.3263-deduplicate-list.py": {
      "timestamp": "ignored",
      "source": "elements = [\"b\", \"a\", \"b\", \"c\"]\nunique_set = set()\nelements_unique = []\nfor i in elements:\n    if i not in unique_set:\n        unique_set.add(i)\n        elements_unique.append(i)\nprint(elements_unique)",
      "labels": {
        "accumulate_elements:add": [[4,7]],
        "accumulate_elements:append": [[4,7]],
        "accumulate_some_elements:add": [[4,7]],
        "accumulate_some_elements:append": [[4,7]],
        "assignment": [[1,1],[3,3]],
        "assignment:set": [[2,2]],
        "assignment_lhs_identifier:elements": [[1,1]],
        "assignment_lhs_identifier:elements_unique": [[3,3]],
        "assignment_lhs_identifier:unique_set": [[2,2]],
        "call_argument:elements_unique": [[8,8]],
        "call_argument:i": [[6,6],[7,7]],
        "comparison_operator:NotIn": [[5,5]],
        "empty_literal:List": [[3,3]],
        "for:i": [[4,7]],
        "for_each": [[4,7]],
        "function_call:print": [[8,8]],
        "function_call:set": [[2,2]],
        "function_call_without_arguments:set": [[2,2]],
        "function_call_without_result:print": [[8,8]],
        "if": [[5,7]],
        "if_test_atom:i": [[5,5]],
        "if_test_atom:unique_set": [[5,5]],
        "if_then_branch": [[6,7]],
        "if_without_else": [[5,7]],
        "literal:List": [[1,1],[3,3]],
        "literal:Str": [[1,1],[1,1],[1,1],[1,1]],
        "loop:for": [[4,7]],
        "loop_with_late_exit:for": [[4,7]],
        "method_call:add": [[6,6]],
        "method_call:append": [[7,7]],
        "method_call_object:elements_unique": [[7,7]],
        "method_call_object:unique_set": [[6,6]],
        "method_call_without_result:add": [[6,6]],
        "method_call_without_result:append": [[7,7]],
        "single_assignment:elements": [[1,1]],
        "single_assignment:elements_unique": [[3,3]],
        "single_assignment:unique_set": [[2,2]],
        "update:elements_unique:i": [[7,7]],
        "update:unique_set:i": [[6,6]],
        "update_by_method_call:elements_unique:i": [[7,7]],
        "update_by_method_call:unique_set:i": [[6,6]],
        "update_by_method_call_with:add": [[6,6]],
        "update_by_method_call_with:append": [[7,7]],
        "update_with:add": [[6,6]],
        "update_with:append": [[7,7]]
      },
      "taxons": {
        "call/function/builtin/casting/set": [[2,2]],
        "call/function/builtin/print": [[8,8]],
        "call/function/without_arguments": [[2,2]],
        "call/method/sequence/list/append": [[7,7]],
        "call/method/set/add": [[6,6]],
        "flow/conditional/no_else": [[5,7]],
        "flow/loop/exit/late": [[4,7]],
        "flow/loop/for/elements": [[4,7]],
        "io/standard/print": [[8,8]],
        "pattern/elements/accumulate/in_list/filtered": [[4,7]],
        "pattern/elements/accumulate/in_set/filtered": [[4,7]],
        "test/belonging/not": [[5,5]],
        "type/container/list": [[1,1]],
        "type/container/list/empty": [[3,3]],
        "type/container/set/empty": [[2,2]],
        "type/elementary/string": [[1,1],[1,1],[1,1],[1,1]],
        "variable/assignment/single": [[1,1],[2,2],[3,3]]
      }
    },
    "120.1479-read-integer-from-stdin.py": {
      "timestamp": "ignored",
      "source": "input_var = int(raw_input(\"Input Prompting String: \"))",
      "labels": {
        "assignment:int": [[1,1]],
        "assignment_lhs_identifier:input_var": [[1,1]],
        "call_argument:": [[1,1],[1,1]],
        "composition": [[1,1]],
        "function_call:int": [[1,1]],
        "function_call:raw_input": [[1,1]],
        "literal:Str": [[1,1]],
        "single_assignment:input_var": [[1,1]]
      },
      "taxons": {
        "call/composition": [[1,1]],
        "call/function": [[1,1]],
        "call/function/builtin/casting/int": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "121.3029-udp-listen-and-read.py": {
      "timestamp": "ignored",
      "source": "import socket\nUDP_IP = \"127.0.0.1\"\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nsock.bind((UDP_IP, p))\nwhile True:\n    data, addr = sock.recvfrom(1024)\n    print(\"received message:\", data)",
      "labels": {
        "assignment": [[2,2]],
        "assignment:recvfrom": [[6,6]],
        "assignment:socket": [[3,3]],
        "assignment_lhs_identifier:UDP_IP": [[2,2]],
        "assignment_lhs_identifier:addr": [[6,6]],
        "assignment_lhs_identifier:data": [[6,6]],
        "assignment_lhs_identifier:sock": [[3,3]],
        "assignment_rhs_atom:1024": [[6,6]],
        "assignment_rhs_atom:sock": [[6,6]],
        "assignment_rhs_atom:socket": [[3,3],[3,3],[3,3]],
        "call_argument:": [[3,3],[3,3],[4,4],[7,7]],
        "call_argument:1024": [[6,6]],
        "call_argument:data": [[7,7]],
        "function_call:print": [[7,7]],
        "function_call_without_result:print": [[7,7]],
        "import:socket": [[1,1]],
        "import_module:socket": [[1,1]],
        "infinite_while": [[5,7]],
        "literal:1024": [[6,6]],
        "literal:Str": [[2,2],[7,7]],
        "literal:True": [[5,5]],
        "loop:while": [[5,7]],
        "loop_with_late_exit:while": [[5,7]],
        "method_call:bind": [[4,4]],
        "method_call:recvfrom": [[6,6]],
        "method_call:socket": [[3,3]],
        "method_call_object:sock": [[4,4]],
        "method_call_without_result:bind": [[4,4]],
        "parallel_assignment:2": [[6,6]],
        "single_assignment:UDP_IP": [[2,2]],
        "single_assignment:sock": [[3,3]],
        "suggest_constant_definition": [[6,6]],
        "while": [[5,7]]
      },
      "taxons": {
        "call/function/builtin/print": [[7,7]],
        "call/method": [[3,3],[4,4],[6,6]],
        "flow/loop/exit/late": [[5,7]],
        "flow/loop/while/infinite": [[5,7]],
        "io/standard/print": [[7,7]],
        "library/standard/socket": [[1,1]],
        "type/container/tuple/assignment": [[6,6]],
        "type/elementary/boolean/true": [[5,5]],
        "type/elementary/number/integer": [[6,6]],
        "type/elementary/string": [[2,2],[7,7]],
        "variable/assignment/constant": [[2,2]],
        "variable/assignment/parallel/2": [[6,6]],
        "variable/assignment/single": [[2,2],[3,3]]
      }
    },
    "122.1453-declare-enumeration.py": {
      "timestamp": "ignored",
      "source": "class Suit:\n    SPADES, HEARTS, DIAMONDS, CLUBS = range(4)",
      "labels": {
        "assignment:range": [[2,2]],
        "assignment_lhs_identifier:CLUBS": [[2,2]],
        "assignment_lhs_identifier:DIAMONDS": [[2,2]],
        "assignment_lhs_identifier:HEARTS": [[2,2]],
        "assignment_lhs_identifier:SPADES": [[2,2]],
        "assignment_rhs_atom:4": [[2,2]],
        "call_argument:4": [[2,2]],
        "class:Suit": [[1,2]],
        "function_call:range": [[2,2]],
        "literal:4": [[2,2]],
        "parallel_assignment:4": [[2,2]],
        "range:4": [[2,2]],
        "suggest_constant_definition": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/range": [[2,2]],
        "class": [[1,2]],
        "type/container/tuple/assignment": [[2,2]],
        "type/elementary/number/integer": [[2,2]],
        "variable/assignment/constant": [[2,2],[2,2],[2,2],[2,2]],
        "variable/assignment/parallel/4": [[2,2]]
      }
    },
    "122.1454-declare-enumeration.py": {
      "timestamp": "ignored",
      "source": "from enum import Enum\nclass Suit(Enum):\n    SPADES = 1\n    HEARTS = 2\n    DIAMONDS = 3\n    CLUBS = 4",
      "labels": {
        "assignment:1": [[3,3]],
        "assignment:2": [[4,4]],
        "assignment:3": [[5,5]],
        "assignment:4": [[6,6]],
        "assignment_lhs_identifier:CLUBS": [[6,6]],
        "assignment_lhs_identifier:DIAMONDS": [[5,5]],
        "assignment_lhs_identifier:HEARTS": [[4,4]],
        "assignment_lhs_identifier:SPADES": [[3,3]],
        "assignment_rhs_atom:1": [[3,3]],
        "assignment_rhs_atom:2": [[4,4]],
        "assignment_rhs_atom:3": [[5,5]],
        "assignment_rhs_atom:4": [[6,6]],
        "class:Suit": [[2,6]],
        "import:enum:Enum": [[1,1]],
        "import_module:enum": [[1,1]],
        "import_name:Enum": [[1,1]],
        "literal:1": [[3,3]],
        "literal:2": [[4,4]],
        "literal:3": [[5,5]],
        "literal:4": [[6,6]],
        "single_assignment:CLUBS": [[6,6]],
        "single_assignment:DIAMONDS": [[5,5]],
        "single_assignment:HEARTS": [[4,4]],
        "single_assignment:SPADES": [[3,3]],
        "suggest_constant_definition": [[5,5],[6,6]]
      },
      "taxons": {
        "class": [[2,6]],
        "library/standard/enum/Enum": [[1,1]],
        "type/elementary/number/integer": [[3,3],[4,4],[5,5],[6,6]],
        "variable/assignment/constant": [[3,3],[4,4],[5,5],[6,6]],
        "variable/assignment/single": [[3,3],[4,4],[5,5],[6,6]]
      }
    },
    "123.2146-assert-condition.py": {
      "timestamp": "ignored",
      "source": "assert isConsistent",
      "labels": {
        "assertion": [[1,1]]
      },
      "taxons": {
        "flow/assertion": [[1,1]]
      }
    },
    "124.2152-binary-search-for-a-value-in-sorted-array.py": {
      "timestamp": "ignored",
      "source": "import bisect\ndef binarySearch(a, x):\n    i = bisect.bisect_left(a, x)\n    return i if i != len(a) and a[i] == x else -1",
      "labels": {
        "assignment:bisect_left": [[3,3]],
        "assignment_lhs_identifier:i": [[3,3]],
        "assignment_rhs_atom:a": [[3,3]],
        "assignment_rhs_atom:bisect": [[3,3]],
        "assignment_rhs_atom:x": [[3,3]],
        "boolean_operator:And": [[4,4]],
        "call_argument:a": [[3,3],[4,4]],
        "call_argument:x": [[3,3]],
        "comparison_operator:Eq": [[4,4]],
        "comparison_operator:NotEq": [[4,4]],
        "conditional_expression": [[4,4]],
        "function:binarySearch": [[2,4]],
        "function_argument:a": [[2,2]],
        "function_argument:x": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2]],
        "function_call:len": [[4,4]],
        "function_returning_something:binarySearch": [[2,4]],
        "import:bisect": [[1,1]],
        "import_module:bisect": [[1,1]],
        "index:i": [[4,4]],
        "literal:-1": [[4,4]],
        "method_call:bisect_left": [[3,3]],
        "return": [[4,4]],
        "single_assignment:i": [[3,3]]
      },
      "taxons": {
        "call/function/builtin/len": [[4,4]],
        "call/method": [[3,3]],
        "library/standard/bisect": [[1,1]],
        "operator/boolean/and": [[4,4]],
        "operator/ternary": [[4,4]],
        "subroutine/argument/arg": [[2,2],[2,2]],
        "subroutine/function": [[2,4]],
        "subscript/index": [[4,4]],
        "test/equality": [[4,4]],
        "test/equality/not": [[4,4]],
        "type/elementary/number/integer": [[4,4]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "125.2167-measure-function-call-duration.py": {
      "timestamp": "ignored",
      "source": "import time\nt1 = time.perf_counter()\nfoo()\nt2 = time.perf_counter()\nprint(\"Seconds:\", t2 - t1)",
      "labels": {
        "assignment:perf_counter": [[2,2],[4,4]],
        "assignment_lhs_identifier:t1": [[2,2]],
        "assignment_lhs_identifier:t2": [[4,4]],
        "assignment_rhs_atom:time": [[2,2],[4,4]],
        "binary_operator:Sub": [[5,5]],
        "call_argument:": [[5,5],[5,5]],
        "function_call:foo": [[3,3]],
        "function_call:print": [[5,5]],
        "function_call_without_arguments:foo": [[3,3]],
        "function_call_without_result:foo": [[3,3]],
        "function_call_without_result:print": [[5,5]],
        "import:time": [[1,1]],
        "import_module:time": [[1,1]],
        "literal:Str": [[5,5]],
        "method_call:perf_counter": [[2,2],[4,4]],
        "single_assignment:t1": [[2,2]],
        "single_assignment:t2": [[4,4]]
      },
      "taxons": {
        "call/function/builtin/print": [[5,5]],
        "call/function/without_arguments": [[3,3]],
        "call/method": [[2,2],[4,4]],
        "io/standard/print": [[5,5]],
        "library/standard/time": [[1,1]],
        "operator/arithmetic/substraction": [[5,5]],
        "type/elementary/string": [[5,5]],
        "variable/assignment/single": [[2,2],[4,4]]
      }
    },
    "126.2137-multiple-return-values.py": {
      "timestamp": "ignored",
      "source": "def foo():\n    return \"string\", True",
      "labels": {
        "function:foo": [[1,2]],
        "function_returning_something:foo": [[1,2]],
        "function_without_arguments:foo": [[1,2]],
        "literal:Str": [[2,2]],
        "literal:True": [[2,2]],
        "literal:Tuple": [[2,2]],
        "return": [[2,2]]
      },
      "taxons": {
        "subroutine/argument/no": [[1,2]],
        "subroutine/function": [[1,2]],
        "type/container/tuple": [[2,2]],
        "type/elementary/boolean/true": [[2,2]],
        "type/elementary/string": [[2,2]]
      }
    },
    "127.2274-source-code-inclusion.py": {
      "timestamp": "ignored",
      "source": "import imp\nfoo = imp.load_module(\"foobody\", \"foobody.txt\").foo",
      "labels": {
        "assignment": [[2,2]],
        "assignment_lhs_identifier:foo": [[2,2]],
        "assignment_rhs_atom:imp": [[2,2]],
        "call_argument:": [[2,2],[2,2]],
        "import:imp": [[1,1]],
        "import_module:imp": [[1,1]],
        "literal:Str": [[2,2],[2,2]],
        "method_call:load_module": [[2,2]],
        "method_call_object:imp": [[2,2]],
        "single_assignment:foo": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/imp": [[1,1]],
        "type/elementary/string": [[2,2],[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "128.2085-breadth-first-traversing-of-a-tree.py": {
      "timestamp": "ignored",
      "source": "def BFS(f, root):\n    Q = [root]\n    while Q:\n        n = Q.pop(0)\n        f(n)\n        for child in n:\n            if not n.discovered:\n                n.discovered = True\n                Q.append(n)",
      "labels": {
        "assignment": [[2,2]],
        "assignment:True": [[8,8]],
        "assignment:pop": [[4,4]],
        "assignment_lhs_identifier:Q": [[2,2]],
        "assignment_lhs_identifier:n": [[4,4],[8,8]],
        "assignment_rhs_atom:0": [[4,4]],
        "assignment_rhs_atom:Q": [[4,4]],
        "assignment_rhs_atom:True": [[8,8]],
        "assignment_rhs_atom:root": [[2,2]],
        "call_argument:0": [[4,4]],
        "call_argument:n": [[5,5],[9,9]],
        "for:child": [[6,9]],
        "for_each": [[6,9]],
        "function:BFS": [[1,9]],
        "function_argument:f": [[1,1]],
        "function_argument:root": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_call:f": [[5,5]],
        "function_call_without_result:f": [[5,5]],
        "function_returning_nothing:BFS": [[1,9]],
        "higher_order_function:f": [[1,9]],
        "if": [[7,9]],
        "if_test_atom:n": [[7,7]],
        "if_then_branch": [[8,9]],
        "if_without_else": [[7,9]],
        "literal:0": [[4,4]],
        "literal:True": [[8,8]],
        "loop:for": [[6,9]],
        "loop:while": [[3,9]],
        "loop_with_late_exit:for": [[6,9]],
        "loop_with_late_exit:while": [[3,9]],
        "method_call:append": [[9,9]],
        "method_call:pop": [[4,4]],
        "method_call_object:Q": [[9,9]],
        "method_call_without_result:append": [[9,9]],
        "single_assignment:Q": [[2,2]],
        "single_assignment:n": [[4,4]],
        "unary_operator:Not": [[7,7]],
        "update:Q:n": [[9,9]],
        "update_by_method_call:Q:n": [[9,9]],
        "update_by_method_call_with:append": [[9,9]],
        "update_with:append": [[9,9]],
        "while": [[3,9]]
      },
      "taxons": {
        "call/function": [[5,5]],
        "call/method/sequence/list/append": [[9,9]],
        "call/method/set_or_list/pop": [[4,4]],
        "flow/conditional/no_else": [[7,9]],
        "flow/loop/exit/late": [[3,9],[6,9]],
        "flow/loop/for/elements": [[6,9]],
        "flow/loop/while": [[3,9]],
        "operator/boolean/not": [[7,7]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/higher_order": [[1,9]],
        "subroutine/procedure": [[1,9]],
        "type/elementary/boolean/true": [[8,8]],
        "type/elementary/number/integer/zero": [[4,4]],
        "variable/assignment": [[8,8]],
        "variable/assignment/constant": [[2,2]],
        "variable/assignment/single": [[2,2],[4,4]]
      }
    },
    "129.2282-breadth-first-traversing-in-a-graph.py": {
      "timestamp": "ignored",
      "source": "from collections import deque\ndef breadth_first(start, f):\n    seen = set()\n    q = deque([start])\n    while q:\n        vertex = q.popleft()\n        f(vertex)\n        seen.add(vertex)\n        q.extend(v for v in vertex.adjacent if v not in seen)",
      "labels": {
        "assignment:deque": [[4,4]],
        "assignment:popleft": [[6,6]],
        "assignment:set": [[3,3]],
        "assignment_lhs_identifier:q": [[4,4]],
        "assignment_lhs_identifier:seen": [[3,3]],
        "assignment_lhs_identifier:vertex": [[6,6]],
        "assignment_rhs_atom:q": [[6,6]],
        "assignment_rhs_atom:start": [[4,4]],
        "call_argument:": [[4,4],[9,9]],
        "call_argument:vertex": [[7,7],[8,8]],
        "comparison_operator:NotIn": [[9,9]],
        "comprehension:Generator": [[9,9]],
        "comprehension_for_count:1": [[9,9]],
        "filtered_comprehension": [[9,9]],
        "function:breadth_first": [[2,9]],
        "function_argument:f": [[2,2]],
        "function_argument:start": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2]],
        "function_call:deque": [[4,4]],
        "function_call:f": [[7,7]],
        "function_call:set": [[3,3]],
        "function_call_without_arguments:set": [[3,3]],
        "function_call_without_result:f": [[7,7]],
        "function_returning_nothing:breadth_first": [[2,9]],
        "higher_order_function:f": [[2,9]],
        "import:collections:deque": [[1,1]],
        "import_module:collections": [[1,1]],
        "import_name:deque": [[1,1]],
        "loop:while": [[5,9]],
        "loop_with_late_exit:while": [[5,9]],
        "method_call:add": [[8,8]],
        "method_call:extend": [[9,9]],
        "method_call:popleft": [[6,6]],
        "method_call_object:q": [[9,9]],
        "method_call_object:seen": [[8,8]],
        "method_call_without_result:add": [[8,8]],
        "method_call_without_result:extend": [[9,9]],
        "single_assignment:q": [[4,4]],
        "single_assignment:seen": [[3,3]],
        "single_assignment:vertex": [[6,6]],
        "update:seen:vertex": [[8,8]],
        "update_by_method_call:seen:vertex": [[8,8]],
        "update_by_method_call_with:add": [[8,8]],
        "update_with:add": [[8,8]],
        "while": [[5,9]]
      },
      "taxons": {
        "call/function": [[4,4],[7,7]],
        "call/function/builtin/casting/set": [[3,3]],
        "call/function/without_arguments": [[3,3]],
        "call/method": [[6,6]],
        "call/method/sequence/list/extend": [[9,9]],
        "call/method/set/add": [[8,8]],
        "flow/loop/exit/late": [[5,9]],
        "flow/loop/while": [[5,9]],
        "library/standard/collections/deque": [[1,1]],
        "subroutine/argument/arg": [[2,2],[2,2]],
        "subroutine/higher_order": [[2,9]],
        "subroutine/procedure": [[2,9]],
        "test/belonging/not": [[9,9]],
        "type/container/set/empty": [[3,3]],
        "variable/assignment/single": [[3,3],[4,4],[6,6]]
      }
    },
    "130.2283-depth-first-traversing-in-a-graph.py": {
      "timestamp": "ignored",
      "source": "def depth_first(start, f):\n    seen = set()\n    stack = [start]\n    while stack:\n        vertex = stack.pop()\n        f(vertex)\n        seen.add(vertex)\n        stack.extend(v for v in vertex.adjacent if v not in seen)",
      "labels": {
        "assignment": [[3,3]],
        "assignment:pop": [[5,5]],
        "assignment:set": [[2,2]],
        "assignment_lhs_identifier:seen": [[2,2]],
        "assignment_lhs_identifier:stack": [[3,3]],
        "assignment_lhs_identifier:vertex": [[5,5]],
        "assignment_rhs_atom:stack": [[5,5]],
        "assignment_rhs_atom:start": [[3,3]],
        "call_argument:": [[8,8]],
        "call_argument:vertex": [[6,6],[7,7]],
        "comparison_operator:NotIn": [[8,8]],
        "comprehension:Generator": [[8,8]],
        "comprehension_for_count:1": [[8,8]],
        "filtered_comprehension": [[8,8]],
        "function:depth_first": [[1,8]],
        "function_argument:f": [[1,1]],
        "function_argument:start": [[1,1]],
        "function_argument_flavor:arg": [[1,1],[1,1]],
        "function_call:f": [[6,6]],
        "function_call:set": [[2,2]],
        "function_call_without_arguments:set": [[2,2]],
        "function_call_without_result:f": [[6,6]],
        "function_returning_nothing:depth_first": [[1,8]],
        "higher_order_function:f": [[1,8]],
        "loop:while": [[4,8]],
        "loop_with_late_exit:while": [[4,8]],
        "method_call:add": [[7,7]],
        "method_call:extend": [[8,8]],
        "method_call:pop": [[5,5]],
        "method_call_object:seen": [[7,7]],
        "method_call_object:stack": [[8,8]],
        "method_call_without_result:add": [[7,7]],
        "method_call_without_result:extend": [[8,8]],
        "single_assignment:seen": [[2,2]],
        "single_assignment:stack": [[3,3]],
        "single_assignment:vertex": [[5,5]],
        "update:seen:vertex": [[7,7]],
        "update_by_method_call:seen:vertex": [[7,7]],
        "update_by_method_call_with:add": [[7,7]],
        "update_with:add": [[7,7]],
        "while": [[4,8]]
      },
      "taxons": {
        "call/function": [[6,6]],
        "call/function/builtin/casting/set": [[2,2]],
        "call/function/without_arguments": [[2,2]],
        "call/method/sequence/list/extend": [[8,8]],
        "call/method/set/add": [[7,7]],
        "call/method/set_or_list/pop": [[5,5]],
        "flow/loop/exit/late": [[4,8]],
        "flow/loop/while": [[4,8]],
        "subroutine/argument/arg": [[1,1],[1,1]],
        "subroutine/higher_order": [[1,8]],
        "subroutine/procedure": [[1,8]],
        "test/belonging/not": [[8,8]],
        "type/container/set/empty": [[2,2]],
        "variable/assignment/single": [[2,2],[3,3],[5,5]]
      }
    },
    "131.2083-successive-conditions.py": {
      "timestamp": "ignored",
      "source": "f1 if c1 else f2 if c2 else f3 if c3 else None",
      "labels": {
        "conditional_expression": [[1,1],[1,1],[1,1]],
        "literal:None": [[1,1]]
      },
      "taxons": {
        "operator/ternary": [[1,1],[1,1],[1,1]],
        "type/elementary/null": [[1,1]]
      }
    },
    "131.2766-successive-conditions.py": {
      "timestamp": "ignored",
      "source": "if c1:\n    f1()\nelif c2:\n    f2()\nelif c3:\n    f3()",
      "labels": {
        "function_call:f1": [[2,2]],
        "function_call:f2": [[4,4]],
        "function_call:f3": [[6,6]],
        "function_call_without_arguments:f1": [[2,2]],
        "function_call_without_arguments:f2": [[4,4]],
        "function_call_without_arguments:f3": [[6,6]],
        "function_call_without_result:f1": [[2,2]],
        "function_call_without_result:f2": [[4,4]],
        "function_call_without_result:f3": [[6,6]],
        "if": [[1,6],[3,6],[5,6]],
        "if_elif_branch": [[4,4],[6,6]],
        "if_then_branch": [[2,2]]
      },
      "taxons": {
        "call/function/without_arguments": [[2,2],[4,4],[6,6]],
        "flow/conditional": [[1,6],[3,6],[5,6]],
        "flow/conditional/else/if": [[4,4],[6,6]]
      }
    },
    "132.2040-measure-duration-of-procedure-execution.py": {
      "timestamp": "ignored",
      "source": "import timeit\nduration = timeit.timeit(\"f()\", setup=\"from __main__ import f\")",
      "labels": {
        "assignment:timeit": [[2,2]],
        "assignment_lhs_identifier:duration": [[2,2]],
        "assignment_rhs_atom:timeit": [[2,2]],
        "call_argument:": [[2,2]],
        "import:timeit": [[1,1]],
        "import_module:timeit": [[1,1]],
        "literal:Str": [[2,2],[2,2]],
        "method_call:timeit": [[2,2]],
        "single_assignment:duration": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/timeit": [[1,1]],
        "type/elementary/string": [[2,2],[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "133.2160-case-insensitive-string-contains.py": {
      "timestamp": "ignored",
      "source": "ok = word.lower() in s.lower()",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:ok": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "assignment_rhs_atom:word": [[1,1]],
        "comparison_operator:In": [[1,1]],
        "method_call:lower": [[1,1],[1,1]],
        "single_assignment:ok": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/lower": [[1,1],[1,1]],
        "test/belonging": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "134.1850-create-a-new-list.py": {
      "timestamp": "ignored",
      "source": "items = [a, b, c]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:items": [[1,1]],
        "assignment_rhs_atom:a": [[1,1]],
        "assignment_rhs_atom:b": [[1,1]],
        "assignment_rhs_atom:c": [[1,1]],
        "single_assignment:items": [[1,1]]
      },
      "taxons": {
        "variable/assignment/single": [[1,1]]
      }
    },
    "135.2158-remove-item-from-list-by-its-value.py": {
      "timestamp": "ignored",
      "source": "items.remove(x)",
      "labels": {
        "call_argument:x": [[1,1]],
        "method_call:remove": [[1,1]],
        "method_call_object:items": [[1,1]],
        "method_call_without_result:remove": [[1,1]],
        "update:items:x": [[1,1]],
        "update_by_method_call:items:x": [[1,1]],
        "update_by_method_call_with:remove": [[1,1]],
        "update_with:remove": [[1,1]]
      },
      "taxons": {
        "call/method/set_or_list/remove": [[1,1]]
      }
    },
    "136.2141-remove-all-occurrences-of-a-value-from-a-list.py": {
      "timestamp": "ignored",
      "source": "newlist = [item for item in items if item != x]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:newlist": [[1,1]],
        "assignment_rhs_atom:item": [[1,1],[1,1],[1,1]],
        "assignment_rhs_atom:items": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "comparison_operator:NotEq": [[1,1]],
        "comprehension:List": [[1,1]],
        "comprehension_for_count:1": [[1,1]],
        "filtered_comprehension": [[1,1]],
        "single_assignment:newlist": [[1,1]]
      },
      "taxons": {
        "test/equality/not": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "137.1823-check-if-string-contains-only-digits.py": {
      "timestamp": "ignored",
      "source": "b = s.isdigit()",
      "labels": {
        "assignment:isdigit": [[1,1]],
        "assignment_lhs_identifier:b": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "method_call:isdigit": [[1,1]],
        "single_assignment:b": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/isdigit": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "138.2161-create-temp-file.py": {
      "timestamp": "ignored",
      "source": "import tempfile\nfile = tempfile.TemporaryFile()",
      "labels": {
        "assignment:TemporaryFile": [[2,2]],
        "assignment_lhs_identifier:file": [[2,2]],
        "assignment_rhs_atom:tempfile": [[2,2]],
        "import:tempfile": [[1,1]],
        "import_module:tempfile": [[1,1]],
        "method_call:TemporaryFile": [[2,2]],
        "single_assignment:file": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/tempfile": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "139.2162-create-temp-directory.py": {
      "timestamp": "ignored",
      "source": "import tempfile\ntd = tempfile.TemporaryDirectory()",
      "labels": {
        "assignment:TemporaryDirectory": [[2,2]],
        "assignment_lhs_identifier:td": [[2,2]],
        "assignment_rhs_atom:tempfile": [[2,2]],
        "import:tempfile": [[1,1]],
        "import_module:tempfile": [[1,1]],
        "method_call:TemporaryDirectory": [[2,2]],
        "single_assignment:td": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/tempfile": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "140.2156-delete-map-entry.py": {
      "timestamp": "ignored",
      "source": "m.pop(k, None)",
      "labels": {
        "call_argument:None": [[1,1]],
        "call_argument:k": [[1,1]],
        "literal:None": [[1,1]],
        "method_call:pop": [[1,1]],
        "method_call_object:m": [[1,1]],
        "method_call_without_result:pop": [[1,1]],
        "update:m:None": [[1,1]],
        "update:m:k": [[1,1]],
        "update_by_method_call:m:None": [[1,1]],
        "update_by_method_call:m:k": [[1,1]],
        "update_by_method_call_with:pop": [[1,1]],
        "update_with:pop": [[1,1]]
      },
      "taxons": {
        "call/method/set_or_list/pop": [[1,1]],
        "type/elementary/null": [[1,1]]
      }
    },
    "141.2159-iterate-in-sequence-over-two-lists.py": {
      "timestamp": "ignored",
      "source": "for x in items1 + items2:\n    print(x)",
      "labels": {
        "addition_operator": [[1,1]],
        "binary_operator:Add": [[1,1]],
        "call_argument:x": [[2,2]],
        "for:x": [[1,2]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "loop:for": [[1,2]],
        "loop_with_late_exit:for": [[1,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/for": [[1,2]],
        "io/standard/print": [[2,2]],
        "operator/arithmetic/addition": [[1,1]]
      }
    },
    "142.2151-hexadecimal-digits-of-an-integer.py": {
      "timestamp": "ignored",
      "source": "s = hex(x)",
      "labels": {
        "assignment:hex": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:x": [[1,1]],
        "function_call:hex": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/hex": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "143.2256-iterate-alternatively-over-two-lists.py": {
      "timestamp": "ignored",
      "source": "for pair in zip(item1, item2):\n    print(pair)",
      "labels": {
        "call_argument:item1": [[1,1]],
        "call_argument:item2": [[1,1]],
        "call_argument:pair": [[2,2]],
        "for:pair": [[1,2]],
        "function_call:print": [[2,2]],
        "function_call:zip": [[1,1]],
        "function_call_without_result:print": [[2,2]],
        "loop:for": [[1,2]],
        "loop_with_late_exit:for": [[1,2]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "call/function/builtin/zip": [[1,1]],
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/for": [[1,2]],
        "io/standard/print": [[2,2]]
      }
    },
    "144.2145-check-if-file-exists.py": {
      "timestamp": "ignored",
      "source": "import os\nb = os.path.exists(fp)",
      "labels": {
        "assignment:exists": [[2,2]],
        "assignment_lhs_identifier:b": [[2,2]],
        "assignment_rhs_atom:fp": [[2,2]],
        "assignment_rhs_atom:os": [[2,2]],
        "call_argument:fp": [[2,2]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "method_call:exists": [[2,2]],
        "single_assignment:b": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/os": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "144.2915-check-if-file-exists.py": {
      "timestamp": "ignored",
      "source": "from pathlib import Path\nb = Path(fp).exists()",
      "labels": {
        "assignment:exists": [[2,2]],
        "assignment_lhs_identifier:b": [[2,2]],
        "assignment_rhs_atom:fp": [[2,2]],
        "call_argument:fp": [[2,2]],
        "function_call:Path": [[2,2]],
        "import:pathlib:Path": [[1,1]],
        "import_module:pathlib": [[1,1]],
        "import_name:Path": [[1,1]],
        "method_call:exists": [[2,2]],
        "single_assignment:b": [[2,2]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "call/method": [[2,2]],
        "library/standard/pathlib/Path": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "145.1822-print-log-line-with-datetime.py": {
      "timestamp": "ignored",
      "source": "import sys, logging\nlogging.basicConfig(\n    stream=sys.stdout, level=logging.DEBUG, format=\"%(asctime)-15s %(message)s\"\n)\nlogger = logging.getLogger(\"NAME OF LOGGER\")\nlogger.info(msg)",
      "labels": {
        "assignment:getLogger": [[5,5]],
        "assignment_lhs_identifier:logger": [[5,5]],
        "assignment_rhs_atom:logging": [[5,5]],
        "call_argument:": [[5,5]],
        "call_argument:msg": [[6,6]],
        "import:logging": [[1,1]],
        "import:sys": [[1,1]],
        "import_module:logging": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:Str": [[3,3],[5,5]],
        "method_call:basicConfig": [[2,2]],
        "method_call:getLogger": [[5,5]],
        "method_call:info": [[6,6]],
        "method_call_object:logger": [[6,6]],
        "method_call_object:logging": [[2,2]],
        "method_call_without_result:basicConfig": [[2,2]],
        "method_call_without_result:info": [[6,6]],
        "single_assignment:logger": [[5,5]]
      },
      "taxons": {
        "call/method": [[2,2],[5,5],[6,6]],
        "library/standard/logging": [[1,1]],
        "library/standard/sys": [[1,1]],
        "type/elementary/string": [[3,3],[5,5]],
        "variable/assignment/single": [[5,5]]
      }
    },
    "146.1825-convert-string-to-floating-point-number.py": {
      "timestamp": "ignored",
      "source": "import locale\ns = u\"545,2222\"\nlocale.setlocale(locale.LC_ALL, \"de\")\nf = locale.atof(s)",
      "labels": {
        "assignment": [[2,2]],
        "assignment:atof": [[4,4]],
        "assignment_lhs_identifier:f": [[4,4]],
        "assignment_lhs_identifier:s": [[2,2]],
        "assignment_rhs_atom:locale": [[4,4]],
        "assignment_rhs_atom:s": [[4,4]],
        "call_argument:": [[3,3],[3,3]],
        "call_argument:s": [[4,4]],
        "import:locale": [[1,1]],
        "import_module:locale": [[1,1]],
        "literal:Str": [[2,2],[3,3]],
        "method_call:atof": [[4,4]],
        "method_call:setlocale": [[3,3]],
        "method_call_object:locale": [[3,3]],
        "method_call_without_result:setlocale": [[3,3]],
        "single_assignment:f": [[4,4]],
        "single_assignment:s": [[2,2]]
      },
      "taxons": {
        "call/method": [[3,3],[4,4]],
        "library/standard/locale": [[1,1]],
        "type/elementary/string": [[2,2],[3,3]],
        "variable/assignment/single": [[2,2],[4,4]]
      }
    },
    "146.1826-convert-string-to-floating-point-number.py": {
      "timestamp": "ignored",
      "source": "f = float(s)",
      "labels": {
        "assignment:float": [[1,1]],
        "assignment_lhs_identifier:f": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:s": [[1,1]],
        "function_call:float": [[1,1]],
        "single_assignment:f": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/float": [[1,1]],
        "type/elementary/number/floating_point": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "146.2739-convert-string-to-floating-point-number.py": {
      "timestamp": "ignored",
      "source": "float(\"1.3\")",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:float": [[1,1]],
        "function_call_without_result:float": [[1,1]],
        "literal:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/casting/float": [[1,1]],
        "type/elementary/number/floating_point": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "147.2171-remove-all-non-ascii-characters.py": {
      "timestamp": "ignored",
      "source": "import re\nt = re.sub(\"[^\\u0000-\\u007f]\", \"\", s)",
      "labels": {
        "assignment:sub": [[2,2]],
        "assignment_lhs_identifier:t": [[2,2]],
        "assignment_rhs_atom:re": [[2,2]],
        "assignment_rhs_atom:s": [[2,2]],
        "call_argument:": [[2,2],[2,2]],
        "call_argument:s": [[2,2]],
        "empty_literal:Str": [[2,2]],
        "import:re": [[1,1]],
        "import_module:re": [[1,1]],
        "literal:Str": [[2,2],[2,2]],
        "method_call:sub": [[2,2]],
        "single_assignment:t": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/re": [[1,1]],
        "type/elementary/string": [[2,2]],
        "type/elementary/string/empty": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "148.1829-read-list-of-integer-numbers-from-stdin.py": {
      "timestamp": "ignored",
      "source": "list(map(int, input().split()))",
      "labels": {
        "call_argument:": [[1,1],[1,1]],
        "call_argument:int": [[1,1]],
        "composition": [[1,1],[1,1]],
        "function_call:input": [[1,1]],
        "function_call:list": [[1,1]],
        "function_call:map": [[1,1]],
        "function_call_without_arguments:input": [[1,1]],
        "function_call_without_result:list": [[1,1]],
        "method_call:split": [[1,1]]
      },
      "taxons": {
        "call/composition": [[1,1],[1,1]],
        "call/function/builtin/casting/list": [[1,1]],
        "call/function/builtin/input": [[1,1]],
        "call/function/builtin/map": [[1,1]],
        "call/function/without_arguments": [[1,1]],
        "call/method/sequence/string/split": [[1,1]],
        "io/standard/input": [[1,1]],
        "type/container/list": [[1,1]]
      }
    },
    "150.2154-remove-trailing-slash.py": {
      "timestamp": "ignored",
      "source": "p = p.rstrip(\"/\")",
      "labels": {
        "assignment:rstrip": [[1,1]],
        "assignment_lhs_identifier:p": [[1,1]],
        "assignment_rhs_atom:p": [[1,1]],
        "call_argument:": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:rstrip": [[1,1]],
        "single_assignment:p": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/rstrip": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "151.2166-remove-string-trailing-path-separator.py": {
      "timestamp": "ignored",
      "source": "import os\nif p.endswith(os.sep):\n    p = p[:-1]",
      "labels": {
        "assignment": [[3,3]],
        "assignment_lhs_identifier:p": [[3,3]],
        "assignment_rhs_atom:-1": [[3,3]],
        "assignment_rhs_atom:p": [[3,3]],
        "call_argument:": [[2,2]],
        "if": [[2,3]],
        "if_test_atom:os": [[2,2]],
        "if_test_atom:p": [[2,2]],
        "if_then_branch": [[3,3]],
        "if_without_else": [[2,3]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "literal:-1": [[3,3]],
        "method_call:endswith": [[2,2]],
        "single_assignment:p": [[3,3]],
        "slice::-1:": [[3,3]],
        "slice_lower:": [[3,3]],
        "slice_step:": [[3,3]],
        "slice_upper:-1": [[3,3]],
        "update:p:-1": [[3,3]],
        "update_by_assignment:p:-1": [[3,3]],
        "update_by_assignment_with": [[3,3]],
        "update_with": [[3,3]]
      },
      "taxons": {
        "call/method/sequence/string/endswith": [[2,2]],
        "flow/conditional/no_else": [[2,3]],
        "library/standard/os": [[1,1]],
        "subscript/slice/stop": [[3,3]],
        "type/elementary/number/integer": [[3,3]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "152.2153-turn-a-character-into-a-string.py": {
      "timestamp": "ignored",
      "source": "s = c",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:c": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "variable/assignment/single": [[1,1]]
      }
    },
    "153.1980-concatenate-string-with-integer.py": {
      "timestamp": "ignored",
      "source": "t = \"{}{}\".format(s, i)",
      "labels": {
        "assignment:format": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:i": [[1,1]],
        "call_argument:s": [[1,1]],
        "literal:Str": [[1,1]],
        "method_call:format": [[1,1]],
        "single_assignment:t": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/format": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "154.2155-halfway-between-two-hex-color-codes.py": {
      "timestamp": "ignored",
      "source": "r1, g1, b1 = [int(c1[p : p + 2], 16) for p in range(1, 6, 2)]\nr2, g2, b2 = [int(c2[p : p + 2], 16) for p in range(1, 6, 2)]\nc = \"#{:02x}{:02x}{:02x}\".format((r1 + r2) // 2, (g1 + g2) // 2, (b1 + b2) // 2)",
      "labels": {
        "addition_operator": [[1,1],[2,2],[3,3],[3,3],[3,3]],
        "assignment": [[1,1],[2,2]],
        "assignment:format": [[3,3]],
        "assignment_lhs_identifier:b1": [[1,1]],
        "assignment_lhs_identifier:b2": [[2,2]],
        "assignment_lhs_identifier:c": [[3,3]],
        "assignment_lhs_identifier:g1": [[1,1]],
        "assignment_lhs_identifier:g2": [[2,2]],
        "assignment_lhs_identifier:r1": [[1,1]],
        "assignment_lhs_identifier:r2": [[2,2]],
        "assignment_rhs_atom:1": [[1,1],[2,2]],
        "assignment_rhs_atom:16": [[1,1],[2,2]],
        "assignment_rhs_atom:2": [[1,1],[1,1],[2,2],[2,2],[3,3],[3,3],[3,3]],
        "assignment_rhs_atom:6": [[1,1],[2,2]],
        "assignment_rhs_atom:b1": [[3,3]],
        "assignment_rhs_atom:b2": [[3,3]],
        "assignment_rhs_atom:c1": [[1,1]],
        "assignment_rhs_atom:c2": [[2,2]],
        "assignment_rhs_atom:g1": [[3,3]],
        "assignment_rhs_atom:g2": [[3,3]],
        "assignment_rhs_atom:p": [[1,1],[1,1],[1,1],[2,2],[2,2],[2,2]],
        "assignment_rhs_atom:r1": [[3,3]],
        "assignment_rhs_atom:r2": [[3,3]],
        "binary_operator:Add": [[1,1],[2,2],[3,3],[3,3],[3,3]],
        "binary_operator:FloorDiv": [[3,3],[3,3],[3,3]],
        "call_argument:": [[1,1],[2,2],[3,3],[3,3],[3,3]],
        "call_argument:1": [[1,1],[2,2]],
        "call_argument:16": [[1,1],[2,2]],
        "call_argument:2": [[1,1],[2,2]],
        "call_argument:6": [[1,1],[2,2]],
        "comprehension:List": [[1,1],[2,2]],
        "comprehension_for_count:1": [[1,1],[2,2]],
        "function_call:int": [[1,1],[2,2]],
        "function_call:range": [[1,1],[2,2]],
        "literal:1": [[1,1],[2,2]],
        "literal:16": [[1,1],[2,2]],
        "literal:2": [[1,1],[1,1],[2,2],[2,2],[3,3],[3,3],[3,3]],
        "literal:6": [[1,1],[2,2]],
        "literal:Str": [[3,3]],
        "method_call:format": [[3,3]],
        "parallel_assignment:3": [[1,1],[2,2]],
        "range:1:6:2": [[1,1],[2,2]],
        "single_assignment:c": [[3,3]],
        "slice:p:_:": [[1,1],[2,2]],
        "slice_lower:p": [[1,1],[2,2]],
        "slice_step:": [[1,1],[2,2]],
        "slice_upper:_": [[1,1],[2,2]]
      },
      "taxons": {
        "call/function/builtin/casting/int": [[1,1],[2,2]],
        "call/function/builtin/range": [[1,1],[2,2]],
        "call/method/sequence/string/format": [[3,3]],
        "operator/arithmetic/addition": [[1,1],[2,2],[3,3],[3,3],[3,3]],
        "operator/arithmetic/integer_division": [[3,3],[3,3],[3,3]],
        "subscript/slice/start": [[1,1],[2,2]],
        "subscript/slice/stop": [[1,1],[2,2]],
        "type/container/tuple/assignment": [[1,1],[2,2]],
        "type/elementary/number/integer": [[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[3,3],[3,3],[3,3]],
        "type/elementary/string": [[3,3]],
        "variable/assignment/parallel/3": [[1,1],[2,2]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "154.2292-halfway-between-two-hex-color-codes.py": {
      "timestamp": "ignored",
      "source": "import numpy\nclass RGB(numpy.ndarray):\n    @classmethod\n    def from_str(cls, rgbstr):\n        return numpy.array(\n            [int(rgbstr[i : i + 2], 16) for i in range(1, len(rgbstr), 2)]\n        ).view(cls)\n    def __str__(self):\n        self = self.astype(numpy.uint8)\n        return \"#\" + \"\".join(format(n, \"x\") for n in self)\nc1 = RGB.from_str(\"#a1b1c1\")\nprint(c1)\nc2 = RGB.from_str(\"#1A1B1C\")\nprint(c2)\nprint((c1 + c2) / 2)",
      "labels": {
        "addition_operator": [[6,6],[15,15]],
        "assignment:astype": [[9,9]],
        "assignment:from_str": [[11,11],[13,13]],
        "assignment_lhs_identifier:c1": [[11,11]],
        "assignment_lhs_identifier:c2": [[13,13]],
        "assignment_lhs_identifier:self": [[9,9]],
        "assignment_rhs_atom:RGB": [[11,11],[13,13]],
        "assignment_rhs_atom:numpy": [[9,9]],
        "assignment_rhs_atom:self": [[9,9]],
        "binary_operator:Add": [[6,6],[10,10],[15,15]],
        "binary_operator:Div": [[15,15]],
        "call_argument:": [[6,6],[6,6],[6,6],[9,9],[10,10],[10,10],[11,11],[13,13],[15,15]],
        "call_argument:1": [[6,6]],
        "call_argument:16": [[6,6]],
        "call_argument:2": [[6,6]],
        "call_argument:c1": [[12,12]],
        "call_argument:c2": [[14,14]],
        "call_argument:cls": [[7,7]],
        "call_argument:n": [[10,10]],
        "call_argument:rgbstr": [[6,6]],
        "class:RGB": [[2,10]],
        "class_method:from_str": [[3,7]],
        "composition": [[5,5],[6,6],[10,10]],
        "comprehension:Generator": [[10,10]],
        "comprehension:List": [[6,6]],
        "comprehension_for_count:1": [[6,6],[10,10]],
        "concatenation_operator:Str": [[10,10]],
        "decorated_function:from_str": [[3,7]],
        "empty_literal:Str": [[10,10]],
        "function:__str__": [[8,10]],
        "function:from_str": [[3,7]],
        "function_argument:cls": [[4,4]],
        "function_argument:rgbstr": [[4,4]],
        "function_argument:self": [[8,8]],
        "function_argument_flavor:arg": [[4,4],[4,4],[8,8]],
        "function_call:format": [[10,10]],
        "function_call:int": [[6,6]],
        "function_call:len": [[6,6]],
        "function_call:print": [[12,12],[14,14],[15,15]],
        "function_call:range": [[6,6]],
        "function_call_without_result:print": [[12,12],[14,14],[15,15]],
        "function_decorator:classmethod": [[3,7]],
        "function_returning_something:__str__": [[8,10]],
        "function_returning_something:from_str": [[3,7]],
        "import:numpy": [[1,1]],
        "import_module:numpy": [[1,1]],
        "instance_method:__str__": [[8,10]],
        "literal:1": [[6,6]],
        "literal:16": [[6,6]],
        "literal:2": [[6,6],[6,6],[15,15]],
        "literal:Str": [[10,10],[10,10],[10,10],[11,11],[13,13]],
        "method:__str__": [[8,10]],
        "method:from_str": [[3,7]],
        "method_call:array": [[5,5]],
        "method_call:astype": [[9,9]],
        "method_call:from_str": [[11,11],[13,13]],
        "method_call:join": [[10,10]],
        "method_call:view": [[5,5]],
        "method_call_object:numpy": [[5,5]],
        "method_chaining": [[5,5]],
        "range:1:_:2": [[6,6]],
        "return": [[5,5],[10,10]],
        "single_assignment:c1": [[11,11]],
        "single_assignment:c2": [[13,13]],
        "single_assignment:self": [[9,9]],
        "slice:i:_:": [[6,6]],
        "slice_lower:i": [[6,6]],
        "slice_step:": [[6,6]],
        "slice_upper:_": [[6,6]],
        "suggest_constant_definition": [[6,6]],
        "update:self:numpy": [[9,9]],
        "update_by_assignment:self:numpy": [[9,9]],
        "update_by_assignment_with:astype": [[9,9]],
        "update_with:astype": [[9,9]]
      },
      "taxons": {
        "call/composition": [[5,5],[6,6],[10,10]],
        "call/function/builtin/casting/int": [[6,6]],
        "call/function/builtin/format": [[10,10]],
        "call/function/builtin/len": [[6,6]],
        "call/function/builtin/print": [[12,12],[14,14],[15,15]],
        "call/function/builtin/range": [[6,6]],
        "call/method": [[5,5],[9,9],[11,11],[13,13]],
        "call/method/chaining": [[5,5]],
        "call/method/sequence/string/join": [[10,10]],
        "class": [[2,10]],
        "io/standard/print": [[12,12],[14,14],[15,15]],
        "library/third_party/numpy": [[1,1]],
        "operator/arithmetic/addition": [[6,6],[15,15]],
        "operator/arithmetic/division": [[15,15]],
        "operator/string/concatenation": [[10,10]],
        "subroutine/argument/arg": [[4,4],[4,4],[8,8]],
        "subroutine/decorated": [[3,7]],
        "subroutine/function": [[3,7],[8,10]],
        "subroutine/method/flavor/class": [[3,7]],
        "subroutine/method/flavor/instance": [[8,10]],
        "subroutine/method/naming/magic": [[8,10]],
        "subscript/slice/start": [[6,6]],
        "subscript/slice/stop": [[6,6]],
        "type/elementary/number/integer": [[6,6],[6,6],[6,6],[6,6],[6,6],[15,15]],
        "type/elementary/string": [[10,10],[10,10],[11,11],[13,13]],
        "type/elementary/string/empty": [[10,10]],
        "variable/assignment/single": [[9,9],[11,11],[13,13]]
      }
    },
    "155.2147-delete-file.py": {
      "timestamp": "ignored",
      "source": "import pathlib\npath = pathlib.Path(_filepath)\npath.unlink()",
      "labels": {
        "assignment:Path": [[2,2]],
        "assignment_lhs_identifier:path": [[2,2]],
        "assignment_rhs_atom:_filepath": [[2,2]],
        "assignment_rhs_atom:pathlib": [[2,2]],
        "call_argument:_filepath": [[2,2]],
        "import:pathlib": [[1,1]],
        "import_module:pathlib": [[1,1]],
        "method_call:Path": [[2,2]],
        "method_call:unlink": [[3,3]],
        "method_call_object:path": [[3,3]],
        "method_call_without_result:unlink": [[3,3]],
        "single_assignment:path": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2],[3,3]],
        "library/standard/pathlib": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "156.2148-format-integer-with-zero-padding.py": {
      "timestamp": "ignored",
      "source": "s = format(\"03d\", i)",
      "labels": {
        "assignment:format": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:i": [[1,1]],
        "call_argument:": [[1,1]],
        "call_argument:i": [[1,1]],
        "function_call:format": [[1,1]],
        "literal:Str": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/format": [[1,1]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "157.2150-declare-constant-string.py": {
      "timestamp": "ignored",
      "source": "PLANET = \"Earth\"",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:PLANET": [[1,1]],
        "literal:Str": [[1,1]],
        "single_assignment:PLANET": [[1,1]]
      },
      "taxons": {
        "type/elementary/string": [[1,1]],
        "variable/assignment/constant": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "158.2163-random-sublist.py": {
      "timestamp": "ignored",
      "source": "import random\ny = random.sample(x, k)",
      "labels": {
        "assignment:sample": [[2,2]],
        "assignment_lhs_identifier:y": [[2,2]],
        "assignment_rhs_atom:k": [[2,2]],
        "assignment_rhs_atom:random": [[2,2]],
        "assignment_rhs_atom:x": [[2,2]],
        "call_argument:k": [[2,2]],
        "call_argument:x": [[2,2]],
        "import:random": [[1,1]],
        "import_module:random": [[1,1]],
        "method_call:sample": [[2,2]],
        "single_assignment:y": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/random": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "159.2281-trie.py": {
      "timestamp": "ignored",
      "source": "class Trie:\n    def __init__(self, prefix, value=None):\n        self.prefix = prefix\n        self.children = []\n        self.value = value",
      "labels": {
        "assignment": [[3,3],[4,4],[5,5]],
        "assignment_lhs_identifier:self": [[3,3],[4,4],[5,5]],
        "assignment_rhs_atom:prefix": [[3,3]],
        "assignment_rhs_atom:value": [[5,5]],
        "class:Trie": [[1,5]],
        "empty_literal:List": [[4,4]],
        "function:__init__": [[2,5]],
        "function_argument:prefix": [[2,2]],
        "function_argument:self": [[2,2]],
        "function_argument:value": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2],[2,2]],
        "function_returning_nothing:__init__": [[2,5]],
        "instance_method:__init__": [[2,5]],
        "literal:List": [[4,4]],
        "literal:None": [[2,2]],
        "method:__init__": [[2,5]]
      },
      "taxons": {
        "class": [[1,5]],
        "subroutine/argument/arg": [[2,2],[2,2],[2,2]],
        "subroutine/method/flavor/instance": [[2,5]],
        "subroutine/method/naming/magic": [[2,5]],
        "subroutine/procedure": [[2,5]],
        "type/container/list/empty": [[4,4]],
        "type/elementary/null": [[2,2]],
        "variable/assignment": [[3,3],[4,4],[5,5]]
      }
    },
    "160.2165-detect-if-32-bit-or-64-bit-architecture.py": {
      "timestamp": "ignored",
      "source": "import sys\nif sys.maxsize > 2 ** 32:\n    f64()\nelse:\n    f32()",
      "labels": {
        "binary_operator:Pow": [[2,2]],
        "comparison_operator:Gt": [[2,2]],
        "function_call:f32": [[5,5]],
        "function_call:f64": [[3,3]],
        "function_call_without_arguments:f32": [[5,5]],
        "function_call_without_arguments:f64": [[3,3]],
        "function_call_without_result:f32": [[5,5]],
        "function_call_without_result:f64": [[3,3]],
        "if": [[2,5]],
        "if_else_branch": [[5,5]],
        "if_test_atom:2": [[2,2]],
        "if_test_atom:32": [[2,2]],
        "if_test_atom:sys": [[2,2]],
        "if_then_branch": [[3,3]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:2": [[2,2]],
        "literal:32": [[2,2]]
      },
      "taxons": {
        "call/function/without_arguments": [[3,3],[5,5]],
        "flow/conditional": [[2,5]],
        "flow/conditional/else": [[5,5]],
        "library/standard/sys": [[1,1]],
        "operator/arithmetic/power": [[2,2]],
        "test/inequality": [[2,2]],
        "type/elementary/number/integer": [[2,2],[2,2]]
      }
    },
    "161.2098-multiply-all-the-elements-of-a-list.py": {
      "timestamp": "ignored",
      "source": "elements = [c * x for x in elements]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:elements": [[1,1]],
        "assignment_rhs_atom:c": [[1,1]],
        "assignment_rhs_atom:elements": [[1,1]],
        "assignment_rhs_atom:x": [[1,1],[1,1]],
        "binary_operator:Mult": [[1,1]],
        "comprehension:List": [[1,1]],
        "comprehension_for_count:1": [[1,1]],
        "multiplication_operator": [[1,1]],
        "single_assignment:elements": [[1,1]],
        "update:elements:c": [[1,1]],
        "update:elements:x": [[1,1]],
        "update_by_assignment:elements:c": [[1,1]],
        "update_by_assignment:elements:x": [[1,1]],
        "update_by_assignment_with": [[1,1]],
        "update_with": [[1,1]]
      },
      "taxons": {
        "operator/arithmetic/multiplication": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "162.2164-execute-procedures-depending-on-options.py": {
      "timestamp": "ignored",
      "source": "import sys\nif \"b\" in sys.argv[1:]:\n    bat()\nif \"f\" in sys.argv[1:]:\n    fox()",
      "labels": {
        "comparison_operator:In": [[2,2],[4,4]],
        "function_call:bat": [[3,3]],
        "function_call:fox": [[5,5]],
        "function_call_without_arguments:bat": [[3,3]],
        "function_call_without_arguments:fox": [[5,5]],
        "function_call_without_result:bat": [[3,3]],
        "function_call_without_result:fox": [[5,5]],
        "if": [[2,3],[4,5]],
        "if_test_atom:1": [[2,2],[4,4]],
        "if_test_atom:sys": [[2,2],[4,4]],
        "if_then_branch": [[3,3],[5,5]],
        "if_without_else": [[2,3],[4,5]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:1": [[2,2],[4,4]],
        "literal:Str": [[2,2],[4,4]],
        "slice:1::": [[2,2],[4,4]],
        "slice_lower:1": [[2,2],[4,4]],
        "slice_step:": [[2,2],[4,4]],
        "slice_upper:": [[2,2],[4,4]],
        "yoda_comparison:In": [[2,2],[4,4]]
      },
      "taxons": {
        "call/function/without_arguments": [[3,3],[5,5]],
        "flow/conditional/no_else": [[2,3],[4,5]],
        "library/standard/sys": [[1,1]],
        "subscript/slice/start": [[2,2],[4,4]],
        "test/belonging": [[2,2],[4,4]],
        "type/elementary/number/integer": [[2,2],[4,4]],
        "type/elementary/string": [[2,2],[4,4]]
      }
    },
    "163.2170-print-list-elements-by-group-of-2.py": {
      "timestamp": "ignored",
      "source": "for x in zip(list[::2], list[1::2]):\n    print(x)",
      "labels": {
        "call_argument:": [[1,1],[1,1]],
        "call_argument:x": [[2,2]],
        "for:x": [[1,2]],
        "function_call:print": [[2,2]],
        "function_call:zip": [[1,1]],
        "function_call_without_result:print": [[2,2]],
        "literal:1": [[1,1]],
        "literal:2": [[1,1],[1,1]],
        "loop:for": [[1,2]],
        "loop_with_late_exit:for": [[1,2]],
        "slice:1::2": [[1,1]],
        "slice:::2": [[1,1]],
        "slice_lower:": [[1,1]],
        "slice_lower:1": [[1,1]],
        "slice_step:2": [[1,1],[1,1]],
        "slice_upper:": [[1,1],[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "call/function/builtin/zip": [[1,1]],
        "flow/loop/exit/late": [[1,2]],
        "flow/loop/for": [[1,2]],
        "io/standard/print": [[2,2]],
        "subscript/slice/start": [[1,1]],
        "subscript/slice/step": [[1,1],[1,1]],
        "type/elementary/number/integer": [[1,1],[1,1],[1,1]]
      }
    },
    "163.3177-print-list-elements-by-group-of-2.py": {
      "timestamp": "ignored",
      "source": "from itertools import tee\ndef pairwise(iterable):\n    a, b = tee(iterable)\n    next(b, None)\n    return zip(a, b)\nfor a, b in pairwise(list):\n    print(a, b)",
      "labels": {
        "assignment:tee": [[3,3]],
        "assignment_lhs_identifier:a": [[3,3]],
        "assignment_lhs_identifier:b": [[3,3]],
        "assignment_rhs_atom:iterable": [[3,3]],
        "call_argument:None": [[4,4]],
        "call_argument:a": [[5,5],[7,7]],
        "call_argument:b": [[4,4],[5,5],[7,7]],
        "call_argument:iterable": [[3,3]],
        "call_argument:list": [[6,6]],
        "for:a": [[6,6]],
        "for:b": [[7,7]],
        "function:pairwise": [[2,5]],
        "function_argument:iterable": [[2,2]],
        "function_argument_flavor:arg": [[2,2]],
        "function_call:next": [[4,4]],
        "function_call:pairwise": [[6,6]],
        "function_call:print": [[7,7]],
        "function_call:tee": [[3,3]],
        "function_call:zip": [[5,5]],
        "function_call_without_result:next": [[4,4]],
        "function_call_without_result:print": [[7,7]],
        "function_returning_something:pairwise": [[2,5]],
        "function_tail_call:zip": [[5,5]],
        "import:itertools:tee": [[1,1]],
        "import_module:itertools": [[1,1]],
        "import_name:tee": [[1,1]],
        "literal:None": [[4,4]],
        "loop:for": [[6,6],[7,7]],
        "loop_with_late_exit:for": [[6,6],[7,7]],
        "nested_for:1": [[7,7]],
        "parallel_assignment:2": [[3,3]],
        "return": [[5,5]]
      },
      "taxons": {
        "call/function": [[3,3],[6,6]],
        "call/function/builtin/next": [[4,4]],
        "call/function/builtin/print": [[7,7]],
        "call/function/builtin/zip": [[5,5]],
        "flow/loop/exit/late": [[6,6],[7,7]],
        "flow/loop/for": [[6,6]],
        "flow/loop/for/nested/1": [[7,7]],
        "io/standard/print": [[7,7]],
        "library/standard/itertools/tee": [[1,1]],
        "subroutine/argument/arg": [[2,2]],
        "subroutine/function": [[2,5]],
        "type/container/tuple/assignment": [[3,3]],
        "type/elementary/null": [[4,4]],
        "variable/assignment/parallel/2": [[3,3]]
      }
    },
    "164.2169-open-url-in-default-browser.py": {
      "timestamp": "ignored",
      "source": "import webbrowser\nwebbrowser.open(s)",
      "labels": {
        "call_argument:s": [[2,2]],
        "import:webbrowser": [[1,1]],
        "import_module:webbrowser": [[1,1]],
        "method_call:open": [[2,2]],
        "method_call_object:webbrowser": [[2,2]],
        "method_call_without_result:open": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/webbrowser": [[1,1]]
      }
    },
    "165.2149-last-element-of-list.py": {
      "timestamp": "ignored",
      "source": "x = items[-1]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:x": [[1,1]],
        "assignment_rhs_atom:-1": [[1,1]],
        "assignment_rhs_atom:items": [[1,1]],
        "index:-1": [[1,1]],
        "literal:-1": [[1,1]],
        "negative_index:-1": [[1,1]],
        "single_assignment:x": [[1,1]]
      },
      "taxons": {
        "subscript/index": [[1,1]],
        "subscript/index/backwards/last": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "166.2272-concatenate-two-lists.py": {
      "timestamp": "ignored",
      "source": "ab = a + b",
      "labels": {
        "addition_operator": [[1,1]],
        "assignment:Add": [[1,1]],
        "assignment_lhs_identifier:ab": [[1,1]],
        "assignment_rhs_atom:a": [[1,1]],
        "assignment_rhs_atom:b": [[1,1]],
        "binary_operator:Add": [[1,1]],
        "single_assignment:ab": [[1,1]]
      },
      "taxons": {
        "operator/arithmetic/addition": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "167.2611-trim-prefix.py": {
      "timestamp": "ignored",
      "source": "t = s[s.startswith(p) and len(p) :]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:p": [[1,1],[1,1]],
        "assignment_rhs_atom:s": [[1,1],[1,1]],
        "boolean_operator:And": [[1,1]],
        "call_argument:p": [[1,1],[1,1]],
        "function_call:len": [[1,1]],
        "method_call:startswith": [[1,1]],
        "single_assignment:t": [[1,1]],
        "slice:_::": [[1,1]],
        "slice_lower:_": [[1,1]],
        "slice_step:": [[1,1]],
        "slice_upper:": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/len": [[1,1]],
        "call/method/sequence/string/startswith": [[1,1]],
        "operator/boolean/and": [[1,1]],
        "subscript/slice/start": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "167.3175-trim-prefix.py": {
      "timestamp": "ignored",
      "source": "t = s.lstrip(p)",
      "labels": {
        "assignment:lstrip": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:p": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:p": [[1,1]],
        "method_call:lstrip": [[1,1]],
        "single_assignment:t": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/lstrip": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "168.2277-trim-suffix.py": {
      "timestamp": "ignored",
      "source": "t = s.rsplit(w, 1)[0]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:0": [[1,1]],
        "assignment_rhs_atom:1": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "assignment_rhs_atom:w": [[1,1]],
        "call_argument:1": [[1,1]],
        "call_argument:w": [[1,1]],
        "index:0": [[1,1]],
        "literal:0": [[1,1]],
        "literal:1": [[1,1]],
        "method_call:rsplit": [[1,1]],
        "method_call_object:s": [[1,1]],
        "single_assignment:t": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/rsplit": [[1,1]],
        "subscript/index": [[1,1]],
        "type/elementary/number/integer": [[1,1]],
        "type/elementary/number/integer/zero": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "168.3174-trim-suffix.py": {
      "timestamp": "ignored",
      "source": "t = s.rstrip(w)",
      "labels": {
        "assignment:rstrip": [[1,1]],
        "assignment_lhs_identifier:t": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "assignment_rhs_atom:w": [[1,1]],
        "call_argument:w": [[1,1]],
        "method_call:rstrip": [[1,1]],
        "single_assignment:t": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/string/rstrip": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "169.2233-string-length.py": {
      "timestamp": "ignored",
      "source": "n = len(s)",
      "labels": {
        "assignment:len": [[1,1]],
        "assignment_lhs_identifier:n": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:s": [[1,1]],
        "function_call:len": [[1,1]],
        "single_assignment:n": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/len": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "170.2275-get-map-size.py": {
      "timestamp": "ignored",
      "source": "n = len(mymap)",
      "labels": {
        "assignment:len": [[1,1]],
        "assignment_lhs_identifier:n": [[1,1]],
        "assignment_rhs_atom:mymap": [[1,1]],
        "call_argument:mymap": [[1,1]],
        "function_call:len": [[1,1]],
        "single_assignment:n": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/len": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "171.2446-add-an-element-at-the-end-of-a-list.py": {
      "timestamp": "ignored",
      "source": "s.append(x)",
      "labels": {
        "call_argument:x": [[1,1]],
        "method_call:append": [[1,1]],
        "method_call_object:s": [[1,1]],
        "method_call_without_result:append": [[1,1]],
        "update:s:x": [[1,1]],
        "update_by_method_call:s:x": [[1,1]],
        "update_by_method_call_with:append": [[1,1]],
        "update_with:append": [[1,1]]
      },
      "taxons": {
        "call/method/sequence/list/append": [[1,1]]
      }
    },
    "172.2442-insert-entry-in-map.py": {
      "timestamp": "ignored",
      "source": "m[k] = v",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:m": [[1,1]],
        "assignment_rhs_atom:v": [[1,1]],
        "index:k": [[1,1]]
      },
      "taxons": {
        "subscript/index": [[1,1]],
        "variable/assignment": [[1,1]]
      }
    },
    "173.2427-format-a-number-with-grouped-thousands.py": {
      "timestamp": "ignored",
      "source": "print(\"f'{1000:,}'\")",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]],
        "literal:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "173.2428-format-a-number-with-grouped-thousands.py": {
      "timestamp": "ignored",
      "source": "print(\"format(1000, ',')\")",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]],
        "literal:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "173.2429-format-a-number-with-grouped-thousands.py": {
      "timestamp": "ignored",
      "source": "print(\"'{:,}'.format(1000)\")",
      "labels": {
        "call_argument:": [[1,1]],
        "function_call:print": [[1,1]],
        "function_call_without_result:print": [[1,1]],
        "literal:Str": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[1,1]],
        "io/standard/print": [[1,1]],
        "type/elementary/string": [[1,1]]
      }
    },
    "174.2687-make-http-post-request.py": {
      "timestamp": "ignored",
      "source": "from urllib import request, parse\ndata = parse.urlencode(\"<your data dict>\").encode()\nreq = request.Request(u, data=data, method=\"POST\")\nresp = request.urlopen(req)",
      "labels": {
        "assignment:Request": [[3,3]],
        "assignment:encode": [[2,2]],
        "assignment:urlopen": [[4,4]],
        "assignment_lhs_identifier:data": [[2,2]],
        "assignment_lhs_identifier:req": [[3,3]],
        "assignment_lhs_identifier:resp": [[4,4]],
        "assignment_rhs_atom:data": [[3,3]],
        "assignment_rhs_atom:parse": [[2,2]],
        "assignment_rhs_atom:req": [[4,4]],
        "assignment_rhs_atom:request": [[3,3],[4,4]],
        "assignment_rhs_atom:u": [[3,3]],
        "call_argument:": [[2,2]],
        "call_argument:req": [[4,4]],
        "call_argument:u": [[3,3]],
        "import:urllib:parse": [[1,1]],
        "import:urllib:request": [[1,1]],
        "import_module:urllib": [[1,1]],
        "import_name:parse": [[1,1]],
        "import_name:request": [[1,1]],
        "literal:Str": [[2,2],[3,3]],
        "method_call:Request": [[3,3]],
        "method_call:encode": [[2,2]],
        "method_call:urlencode": [[2,2]],
        "method_call:urlopen": [[4,4]],
        "method_call_object:parse": [[2,2]],
        "method_chaining": [[2,2]],
        "single_assignment:data": [[2,2]],
        "single_assignment:req": [[3,3]],
        "single_assignment:resp": [[4,4]]
      },
      "taxons": {
        "call/method": [[2,2],[3,3],[4,4]],
        "call/method/chaining": [[2,2]],
        "call/method/sequence/string/encode": [[2,2]],
        "library/standard/urllib/parse": [[1,1]],
        "library/standard/urllib/request": [[1,1]],
        "type/elementary/string": [[2,2],[3,3]],
        "variable/assignment/single": [[2,2],[3,3],[4,4]]
      }
    },
    "175.2613-bytes-to-hex-string.py": {
      "timestamp": "ignored",
      "source": "s = a.hex()",
      "labels": {
        "assignment:hex": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "assignment_rhs_atom:a": [[1,1]],
        "method_call:hex": [[1,1]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/method": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "176.2614-hex-string-to-byte-array.py": {
      "timestamp": "ignored",
      "source": "a = bytearray.fromhex(s)",
      "labels": {
        "assignment:fromhex": [[1,1]],
        "assignment_lhs_identifier:a": [[1,1]],
        "assignment_rhs_atom:bytearray": [[1,1]],
        "assignment_rhs_atom:s": [[1,1]],
        "call_argument:s": [[1,1]],
        "method_call:fromhex": [[1,1]],
        "single_assignment:a": [[1,1]]
      },
      "taxons": {
        "call/method": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "177.2709-find-files-with-a-given-list-of-filename-extensions.py": {
      "timestamp": "ignored",
      "source": "import os\nextensions = [\".jpg\", \".jpeg\", \".png\"]\nL = [f for f in os.listdir(D) if os.path.splitext(f)[1] in extensions]",
      "labels": {
        "assignment": [[2,2],[3,3]],
        "assignment_lhs_identifier:L": [[3,3]],
        "assignment_lhs_identifier:extensions": [[2,2]],
        "assignment_rhs_atom:1": [[3,3]],
        "assignment_rhs_atom:D": [[3,3]],
        "assignment_rhs_atom:extensions": [[3,3]],
        "assignment_rhs_atom:f": [[3,3],[3,3],[3,3]],
        "assignment_rhs_atom:os": [[3,3],[3,3]],
        "call_argument:D": [[3,3]],
        "call_argument:f": [[3,3]],
        "comparison_operator:In": [[3,3]],
        "comprehension:List": [[3,3]],
        "comprehension_for_count:1": [[3,3]],
        "filtered_comprehension": [[3,3]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "index:1": [[3,3]],
        "literal:1": [[3,3]],
        "literal:List": [[2,2]],
        "literal:Str": [[2,2],[2,2],[2,2]],
        "method_call:listdir": [[3,3]],
        "method_call:splitext": [[3,3]],
        "single_assignment:L": [[3,3]],
        "single_assignment:extensions": [[2,2]]
      },
      "taxons": {
        "call/method": [[3,3],[3,3]],
        "library/standard/os": [[1,1]],
        "subscript/index": [[3,3]],
        "test/belonging": [[3,3]],
        "type/container/list": [[2,2]],
        "type/elementary/number/integer": [[3,3]],
        "type/elementary/string": [[2,2],[2,2],[2,2]],
        "variable/assignment/constant": [[3,3]],
        "variable/assignment/single": [[2,2],[3,3]]
      }
    },
    "177.2725-find-files-with-a-given-list-of-filename-extensions.py": {
      "timestamp": "ignored",
      "source": "import re\nimport os\nfiltered_files = [\n    \"{}/{}\".format(dirpath, filename)\n    for dirpath, _, filenames in os.walk(D)\n    for filename in filenames\n    if re.match(r\"^.*\\.(?:jpg|jpeg|png)$\", filename)\n]",
      "labels": {
        "assignment": [[3,3]],
        "assignment_lhs_identifier:filtered_files": [[3,3]],
        "assignment_rhs_atom:D": [[5,5]],
        "assignment_rhs_atom:_": [[5,5]],
        "assignment_rhs_atom:dirpath": [[4,4],[5,5]],
        "assignment_rhs_atom:filename": [[4,4],[6,6],[7,7]],
        "assignment_rhs_atom:filenames": [[5,5],[6,6]],
        "assignment_rhs_atom:os": [[5,5]],
        "assignment_rhs_atom:re": [[7,7]],
        "call_argument:": [[7,7]],
        "call_argument:D": [[5,5]],
        "call_argument:dirpath": [[4,4]],
        "call_argument:filename": [[4,4],[7,7]],
        "comprehension:List": [[4,4]],
        "comprehension_for_count:2": [[4,4]],
        "filtered_comprehension": [[7,7]],
        "import:os": [[2,2]],
        "import:re": [[1,1]],
        "import_module:os": [[2,2]],
        "import_module:re": [[1,1]],
        "literal:Str": [[4,4],[7,7]],
        "method_call:format": [[4,4]],
        "method_call:match": [[7,7]],
        "method_call:walk": [[5,5]],
        "single_assignment:filtered_files": [[3,3]]
      },
      "taxons": {
        "call/method": [[5,5],[7,7]],
        "call/method/sequence/string/format": [[4,4]],
        "library/standard/os": [[2,2]],
        "library/standard/re": [[1,1]],
        "type/elementary/string": [[4,4],[7,7]],
        "variable/assignment/single": [[3,3]]
      }
    },
    "177.3241-find-files-with-a-given-list-of-filename-extensions.py": {
      "timestamp": "ignored",
      "source": "import glob\nimport itertools\nlist(itertools.chain(*(glob.glob(\"*/**.%s\" % ext) for ext in [\"jpg\", \"jpeg\", \"png\"])))",
      "labels": {
        "binary_operator:Mod": [[3,3]],
        "call_argument:": [[3,3],[3,3],[3,3]],
        "composition": [[3,3],[3,3]],
        "comprehension:Generator": [[3,3]],
        "comprehension_for_count:1": [[3,3]],
        "function_call:list": [[3,3]],
        "function_call_without_result:list": [[3,3]],
        "import:glob": [[1,1]],
        "import:itertools": [[2,2]],
        "import_module:glob": [[1,1]],
        "import_module:itertools": [[2,2]],
        "literal:List": [[3,3]],
        "literal:Str": [[3,3],[3,3],[3,3],[3,3]],
        "method_call:chain": [[3,3]],
        "method_call:glob": [[3,3]],
        "string_formatting_operator": [[3,3]]
      },
      "taxons": {
        "call/composition": [[3,3],[3,3]],
        "call/function/builtin/casting/list": [[3,3]],
        "call/method": [[3,3],[3,3]],
        "library/standard/glob": [[1,1]],
        "library/standard/itertools": [[2,2]],
        "operator/string/format": [[3,3]],
        "type/container/list": [[3,3],[3,3]],
        "type/elementary/string": [[3,3],[3,3],[3,3],[3,3]]
      }
    },
    "178.2615-check-if-point-is-inside-rectangle.py": {
      "timestamp": "ignored",
      "source": "b = (x1 < x < x2) and (y1 < y < y2)",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:b": [[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "assignment_rhs_atom:x1": [[1,1]],
        "assignment_rhs_atom:x2": [[1,1]],
        "assignment_rhs_atom:y": [[1,1]],
        "assignment_rhs_atom:y1": [[1,1]],
        "assignment_rhs_atom:y2": [[1,1]],
        "boolean_operator:And": [[1,1]],
        "chained_comparison:2": [[1,1],[1,1]],
        "chained_inequalities:2": [[1,1],[1,1]],
        "comparison_operator:Lt": [[1,1],[1,1],[1,1],[1,1]],
        "single_assignment:b": [[1,1]]
      },
      "taxons": {
        "operator/boolean/and": [[1,1]],
        "test/inequality": [[1,1],[1,1],[1,1],[1,1]],
        "test/inequality/chained/2": [[1,1],[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "179.2688-get-center-of-a-rectangle.py": {
      "timestamp": "ignored",
      "source": "center = ((x1 + x2) / 2, (y1 + y2) / 2)",
      "labels": {
        "addition_operator": [[1,1],[1,1]],
        "assignment": [[1,1]],
        "assignment_lhs_identifier:center": [[1,1]],
        "assignment_rhs_atom:2": [[1,1],[1,1]],
        "assignment_rhs_atom:x1": [[1,1]],
        "assignment_rhs_atom:x2": [[1,1]],
        "assignment_rhs_atom:y1": [[1,1]],
        "assignment_rhs_atom:y2": [[1,1]],
        "binary_operator:Add": [[1,1],[1,1]],
        "binary_operator:Div": [[1,1],[1,1]],
        "literal:2": [[1,1],[1,1]],
        "single_assignment:center": [[1,1]]
      },
      "taxons": {
        "operator/arithmetic/addition": [[1,1],[1,1]],
        "operator/arithmetic/division": [[1,1],[1,1]],
        "type/elementary/number/integer": [[1,1],[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "179.2689-get-center-of-a-rectangle.py": {
      "timestamp": "ignored",
      "source": "from collections import namedtuple\nPoint = namedtuple(\"Point\", \"x y\")\ncenter = Point((x1 + x2) / 2, (y1 + y2) / 2)",
      "labels": {
        "addition_operator": [[3,3],[3,3]],
        "assignment:Point": [[3,3]],
        "assignment:namedtuple": [[2,2]],
        "assignment_lhs_identifier:Point": [[2,2]],
        "assignment_lhs_identifier:center": [[3,3]],
        "assignment_rhs_atom:2": [[3,3],[3,3]],
        "assignment_rhs_atom:x1": [[3,3]],
        "assignment_rhs_atom:x2": [[3,3]],
        "assignment_rhs_atom:y1": [[3,3]],
        "assignment_rhs_atom:y2": [[3,3]],
        "binary_operator:Add": [[3,3],[3,3]],
        "binary_operator:Div": [[3,3],[3,3]],
        "call_argument:": [[2,2],[2,2],[3,3],[3,3]],
        "function_call:Point": [[3,3]],
        "function_call:namedtuple": [[2,2]],
        "import:collections:namedtuple": [[1,1]],
        "import_module:collections": [[1,1]],
        "import_name:namedtuple": [[1,1]],
        "literal:2": [[3,3],[3,3]],
        "literal:Str": [[2,2],[2,2]],
        "single_assignment:Point": [[2,2]],
        "single_assignment:center": [[3,3]]
      },
      "taxons": {
        "call/function": [[2,2],[3,3]],
        "library/standard/collections/namedtuple": [[1,1]],
        "operator/arithmetic/addition": [[3,3],[3,3]],
        "operator/arithmetic/division": [[3,3],[3,3]],
        "type/elementary/number/integer": [[3,3],[3,3]],
        "type/elementary/string": [[2,2],[2,2]],
        "variable/assignment/single": [[2,2],[3,3]]
      }
    },
    "180.2612-list-files-in-directory.py": {
      "timestamp": "ignored",
      "source": "import os\nx = os.listdir(d)",
      "labels": {
        "assignment:listdir": [[2,2]],
        "assignment_lhs_identifier:x": [[2,2]],
        "assignment_rhs_atom:d": [[2,2]],
        "assignment_rhs_atom:os": [[2,2]],
        "call_argument:d": [[2,2]],
        "import:os": [[1,1]],
        "import_module:os": [[1,1]],
        "method_call:listdir": [[2,2]],
        "single_assignment:x": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/os": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "182.2658-quine-program.py": {
      "timestamp": "ignored",
      "source": "s = \"s = %r\\nprint(s%%s)\"\nprint(s % s)",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:s": [[1,1]],
        "binary_operator:Mod": [[2,2]],
        "call_argument:": [[2,2]],
        "function_call:print": [[2,2]],
        "function_call_without_result:print": [[2,2]],
        "literal:Str": [[1,1]],
        "modulo_operator": [[2,2]],
        "single_assignment:s": [[1,1]]
      },
      "taxons": {
        "call/function/builtin/print": [[2,2]],
        "io/standard/print": [[2,2]],
        "operator/arithmetic/modulo": [[2,2]],
        "type/elementary/string": [[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "183.3025-make-http-put-request.py": {
      "timestamp": "ignored",
      "source": "requests\nimport requests\ncontent_type = \"text/plain\"\nheaders = {\"Content-Type\": content_type}\ndata = {}\nr = requests.put(url, headers=headers, data=data)\nstatus_code, content = r.status_code, r.content",
      "labels": {
        "assignment": [[3,3],[4,4],[5,5],[7,7]],
        "assignment:put": [[6,6]],
        "assignment_lhs_identifier:content": [[7,7]],
        "assignment_lhs_identifier:content_type": [[3,3]],
        "assignment_lhs_identifier:data": [[5,5]],
        "assignment_lhs_identifier:headers": [[4,4]],
        "assignment_lhs_identifier:r": [[6,6]],
        "assignment_lhs_identifier:status_code": [[7,7]],
        "assignment_rhs_atom:content_type": [[4,4]],
        "assignment_rhs_atom:data": [[6,6]],
        "assignment_rhs_atom:headers": [[6,6]],
        "assignment_rhs_atom:r": [[7,7],[7,7]],
        "assignment_rhs_atom:requests": [[6,6]],
        "assignment_rhs_atom:url": [[6,6]],
        "call_argument:url": [[6,6]],
        "empty_literal:Dict": [[5,5]],
        "import:requests": [[2,2]],
        "import_module:requests": [[2,2]],
        "literal:Dict": [[5,5]],
        "literal:Str": [[3,3],[4,4]],
        "method_call:put": [[6,6]],
        "parallel_assignment:2": [[7,7]],
        "single_assignment:content_type": [[3,3]],
        "single_assignment:data": [[5,5]],
        "single_assignment:headers": [[4,4]],
        "single_assignment:r": [[6,6]]
      },
      "taxons": {
        "call/method": [[6,6]],
        "library/third_party/requests": [[2,2]],
        "type/container/dictionary/empty": [[5,5]],
        "type/container/tuple/assignment": [[7,7]],
        "type/elementary/string": [[3,3],[4,4]],
        "variable/assignment/parallel/2": [[7,7]],
        "variable/assignment/single": [[3,3],[4,4],[5,5],[6,6]]
      }
    },
    "184.2701-tomorrow.py": {
      "timestamp": "ignored",
      "source": "from datetime import date, timedelta\ndate.today() + timedelta(days=1)",
      "labels": {
        "addition_operator": [[2,2]],
        "binary_operator:Add": [[2,2]],
        "function_call:timedelta": [[2,2]],
        "import:datetime:date": [[1,1]],
        "import:datetime:timedelta": [[1,1]],
        "import_module:datetime": [[1,1]],
        "import_name:date": [[1,1]],
        "import_name:timedelta": [[1,1]],
        "literal:1": [[2,2]],
        "method_call:today": [[2,2]]
      },
      "taxons": {
        "call/function": [[2,2]],
        "call/method": [[2,2]],
        "library/standard/datetime/date": [[1,1]],
        "library/standard/datetime/timedelta": [[1,1]],
        "operator/arithmetic/addition": [[2,2]],
        "type/elementary/number/integer": [[2,2]]
      }
    },
    "185.2820-execute-function-in-30-seconds.py": {
      "timestamp": "ignored",
      "source": "import threading\ntimer = threading.Timer(30.0, f, args=(42,))\ntimer.start()",
      "labels": {
        "assignment:Timer": [[2,2]],
        "assignment_lhs_identifier:timer": [[2,2]],
        "assignment_rhs_atom:30.0": [[2,2]],
        "assignment_rhs_atom:42": [[2,2]],
        "assignment_rhs_atom:f": [[2,2]],
        "assignment_rhs_atom:threading": [[2,2]],
        "call_argument:30.0": [[2,2]],
        "call_argument:f": [[2,2]],
        "import:threading": [[1,1]],
        "import_module:threading": [[1,1]],
        "literal:30.0": [[2,2]],
        "literal:42": [[2,2]],
        "literal:Tuple": [[2,2]],
        "method_call:Timer": [[2,2]],
        "method_call:start": [[3,3]],
        "method_call_object:timer": [[3,3]],
        "method_call_without_result:start": [[3,3]],
        "single_assignment:timer": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2],[3,3]],
        "library/standard/threading": [[1,1]],
        "type/container/tuple": [[2,2]],
        "type/elementary/number/floating_point": [[2,2]],
        "type/elementary/number/integer": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "186.2699-exit-program-cleanly.py": {
      "timestamp": "ignored",
      "source": "import sys\nsys.exit(0)",
      "labels": {
        "call_argument:0": [[2,2]],
        "import:sys": [[1,1]],
        "import_module:sys": [[1,1]],
        "literal:0": [[2,2]],
        "method_call:exit": [[2,2]],
        "method_call_object:sys": [[2,2]],
        "method_call_without_result:exit": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/standard/sys": [[1,1]],
        "type/elementary/number/integer/zero": [[2,2]]
      }
    },
    "187.3261-disjoint-set.py": {
      "timestamp": "ignored",
      "source": "class UnionFind:\n    def __init__(self, size):\n        self.rank = [0] * size\n        self.p = [i for i in range(size)]\n    def find_set(self, i):\n        if self.p[i] == i:\n            return i\n        else:\n            self.p[i] = self.find_set(self.p[i])\n            return self.p[i]\n    def is_same_set(self, i, j):\n        return self.find_set(i) == self.find_set(j)\n    def union_set(self, i, j):\n        if not self.is_same_set(i, j):\n            x, y = self.find_set(i), self.find_set(j)",
      "labels": {
        "assignment": [[4,4],[15,15]],
        "assignment:Mult": [[3,3]],
        "assignment:find_set": [[9,9]],
        "assignment_lhs_identifier:self": [[3,3],[4,4]],
        "assignment_lhs_identifier:x": [[15,15]],
        "assignment_lhs_identifier:y": [[15,15]],
        "assignment_rhs_atom:0": [[3,3]],
        "assignment_rhs_atom:i": [[4,4],[4,4],[9,9],[15,15]],
        "assignment_rhs_atom:j": [[15,15]],
        "assignment_rhs_atom:self": [[9,9],[9,9],[15,15],[15,15]],
        "assignment_rhs_atom:size": [[3,3],[4,4]],
        "binary_operator:Mult": [[3,3]],
        "call_argument:": [[9,9]],
        "call_argument:i": [[12,12],[14,14],[15,15]],
        "call_argument:j": [[12,12],[14,14],[15,15]],
        "call_argument:size": [[4,4]],
        "class:UnionFind": [[1,15]],
        "comparison_operator:Eq": [[6,6],[12,12]],
        "comprehension:List": [[4,4]],
        "comprehension_for_count:1": [[4,4]],
        "function:__init__": [[2,4]],
        "function:find_set": [[5,10]],
        "function:is_same_set": [[11,12]],
        "function:union_set": [[13,15]],
        "function_argument:i": [[5,5],[11,11],[13,13]],
        "function_argument:j": [[11,11],[13,13]],
        "function_argument:self": [[2,2],[5,5],[11,11],[13,13]],
        "function_argument:size": [[2,2]],
        "function_argument_flavor:arg": [[2,2],[2,2],[5,5],[5,5],[11,11],[11,11],[11,11],[13,13],[13,13],[13,13]],
        "function_call:range": [[4,4]],
        "function_returning_nothing:__init__": [[2,4]],
        "function_returning_nothing:union_set": [[13,15]],
        "function_returning_something:find_set": [[5,10]],
        "function_returning_something:is_same_set": [[11,12]],
        "if": [[6,10],[14,15]],
        "if_else_branch": [[9,10]],
        "if_test_atom:i": [[6,6],[6,6],[14,14]],
        "if_test_atom:j": [[14,14]],
        "if_test_atom:self": [[6,6],[14,14]],
        "if_then_branch": [[7,7],[15,15]],
        "if_without_else": [[14,15]],
        "index:i": [[6,6],[9,9],[9,9],[10,10]],
        "instance_method:__init__": [[2,4]],
        "instance_method:find_set": [[5,10]],
        "instance_method:is_same_set": [[11,12]],
        "instance_method:union_set": [[13,15]],
        "literal:0": [[3,3]],
        "literal:List": [[3,3]],
        "method:__init__": [[2,4]],
        "method:find_set": [[5,10]],
        "method:is_same_set": [[11,12]],
        "method:union_set": [[13,15]],
        "method_call:find_set": [[9,9],[12,12],[12,12],[15,15],[15,15]],
        "method_call:is_same_set": [[14,14]],
        "parallel_assignment:2": [[15,15]],
        "range:size": [[4,4]],
        "replication_operator:List": [[3,3]],
        "return": [[10,10],[12,12]],
        "return:i": [[7,7]],
        "unary_operator:Not": [[14,14]]
      },
      "taxons": {
        "call/function/builtin/range": [[4,4]],
        "call/method": [[9,9],[12,12],[12,12],[14,14],[15,15],[15,15]],
        "class": [[1,15]],
        "flow/conditional": [[6,10]],
        "flow/conditional/else": [[9,10]],
        "flow/conditional/no_else": [[14,15]],
        "operator/boolean/not": [[14,14]],
        "operator/list/replication": [[3,3]],
        "subroutine/argument/arg": [[2,2],[2,2],[5,5],[5,5],[11,11],[11,11],[11,11],[13,13],[13,13],[13,13]],
        "subroutine/function": [[5,10],[11,12]],
        "subroutine/method/flavor/instance": [[2,4],[5,10],[11,12],[13,15]],
        "subroutine/method/naming/magic": [[2,4]],
        "subroutine/predicate": [[11,12]],
        "subroutine/procedure": [[2,4],[13,15]],
        "subscript/index": [[6,6],[9,9],[9,9],[10,10]],
        "test/equality": [[6,6],[12,12]],
        "type/container/list": [[3,3]],
        "type/container/tuple/assignment": [[15,15]],
        "type/elementary/number/integer/zero": [[3,3]],
        "variable/assignment": [[3,3],[4,4],[9,9]],
        "variable/assignment/parallel/2": [[15,15]]
      }
    },
    "188.3171-matrix-multiplication.py": {
      "timestamp": "ignored",
      "source": "import numpy as np\nc = a @ b",
      "labels": {
        "assignment:MatMult": [[2,2]],
        "assignment_lhs_identifier:c": [[2,2]],
        "assignment_rhs_atom:a": [[2,2]],
        "assignment_rhs_atom:b": [[2,2]],
        "binary_operator:MatMult": [[2,2]],
        "import:numpy": [[1,1]],
        "import_module:numpy": [[1,1]],
        "single_assignment:c": [[2,2]]
      },
      "taxons": {
        "library/third_party/numpy": [[1,1]],
        "operator/matrix/multiplication": [[2,2]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "188.3284-matrix-multiplication.py": {
      "timestamp": "ignored",
      "source": "import numpy as np\nc = np.matmul(a, b)",
      "labels": {
        "assignment:matmul": [[2,2]],
        "assignment_lhs_identifier:c": [[2,2]],
        "assignment_rhs_atom:a": [[2,2]],
        "assignment_rhs_atom:b": [[2,2]],
        "assignment_rhs_atom:np": [[2,2]],
        "call_argument:a": [[2,2]],
        "call_argument:b": [[2,2]],
        "import:numpy": [[1,1]],
        "import_module:numpy": [[1,1]],
        "method_call:matmul": [[2,2]],
        "single_assignment:c": [[2,2]]
      },
      "taxons": {
        "call/method": [[2,2]],
        "library/third_party/numpy": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    },
    "189.3236-filter-and-transform-list.py": {
      "timestamp": "ignored",
      "source": "y = [T(e) for e in x if P(e)]",
      "labels": {
        "assignment": [[1,1]],
        "assignment_lhs_identifier:y": [[1,1]],
        "assignment_rhs_atom:e": [[1,1],[1,1],[1,1]],
        "assignment_rhs_atom:x": [[1,1]],
        "call_argument:e": [[1,1],[1,1]],
        "comprehension:List": [[1,1]],
        "comprehension_for_count:1": [[1,1]],
        "filtered_comprehension": [[1,1]],
        "function_call:P": [[1,1]],
        "function_call:T": [[1,1]],
        "single_assignment:y": [[1,1]]
      },
      "taxons": {
        "call/function": [[1,1],[1,1]],
        "variable/assignment/single": [[1,1]]
      }
    },
    "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py": {
      "timestamp": "ignored",
      "source": "if any(v > x for v in a):\n    f()",
      "labels": {
        "call_argument:": [[1,1]],
        "comparison_operator:Gt": [[1,1]],
        "comprehension:Generator": [[1,1]],
        "comprehension_for_count:1": [[1,1]],
        "function_call:any": [[1,1]],
        "function_call:f": [[2,2]],
        "function_call_without_arguments:f": [[2,2]],
        "function_call_without_result:f": [[2,2]],
        "if": [[1,2]],
        "if_test_atom:a": [[1,1]],
        "if_test_atom:v": [[1,1],[1,1]],
        "if_test_atom:x": [[1,1]],
        "if_then_branch": [[2,2]],
        "if_without_else": [[1,2]]
      },
      "taxons": {
        "call/function/builtin/any": [[1,1]],
        "call/function/without_arguments": [[2,2]],
        "flow/conditional/no_else": [[1,2]],
        "test/inequality": [[1,1]]
      }
    },
    "197.3457-get-a-list-of-lines-from-a-file.py": {
      "timestamp": "ignored",
      "source": "with open(path) as f:\n    lines = f.readlines()",
      "labels": {
        "assignment:readlines": [[2,2]],
        "assignment_lhs_identifier:lines": [[2,2]],
        "assignment_rhs_atom:f": [[2,2]],
        "call_argument:path": [[1,1]],
        "function_call:open": [[1,1]],
        "method_call:readlines": [[2,2]],
        "single_assignment:lines": [[2,2]]
      },
      "taxons": {
        "call/function/builtin/open": [[1,1]],
        "call/method": [[2,2]],
        "io/file/open": [[1,1]],
        "variable/assignment/single": [[2,2]]
      }
    }
  },
  "labels": {
    "accumulate_elements:add": [
      "119.3263-deduplicate-list.py"
    ],
    "accumulate_elements:append": [
      "119.3263-deduplicate-list.py"
    ],
    "accumulate_some_elements:add": [
      "119.3263-deduplicate-list.py"
    ],
    "accumulate_some_elements:append": [
      "119.3263-deduplicate-list.py"
    ],
    "addition_operator": [
      "037.671-currying.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "166.2272-concatenate-two-lists.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py",
      "184.2701-tomorrow.py"
    ],
    "assertion": [
      "123.2146-assert-condition.py"
    ],
    "assignment": [
      "008.39-initialize-a-new-map-associative-array.py",
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "019.1983-reverse-a-list.py",
      "021.84-swap-values-of-variables-a-and-b.py",
      "024.664-assign-to-string-the-japanese-word-.py",
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "038.186-extract-a-substring.py",
      "039.571-check-if-string-contains-a-word.py",
      "040.2279-graph-with-adjacency-lists.py",
      "041.2714-reverse-a-string.py",
      "043.676-break-outer-loop.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "048.210-multi-line-string-literal.py",
      "057.3173-filter-list.py",
      "060.1084-read-command-line-argument.py",
      "104.3264-save-object-into-xml-file.py",
      "105.1804-current-executable-name.py",
      "110.1455-check-if-string-is-blank.py",
      "114.2273-test-deep-equality.py",
      "115.2138-compare-dates.py",
      "119.3263-deduplicate-list.py",
      "121.3029-udp-listen-and-read.py",
      "127.2274-source-code-inclusion.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "133.2160-case-insensitive-string-contains.py",
      "134.1850-create-a-new-list.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "152.2153-turn-a-character-into-a-string.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "157.2150-declare-constant-string.py",
      "159.2281-trie.py",
      "161.2098-multiply-all-the-elements-of-a-list.py",
      "165.2149-last-element-of-list.py",
      "167.2611-trim-prefix.py",
      "168.2277-trim-suffix.py",
      "172.2442-insert-entry-in-map.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "178.2615-check-if-point-is-inside-rectangle.py",
      "179.2688-get-center-of-a-rectangle.py",
      "182.2658-quine-program.py",
      "183.3025-make-http-put-request.py",
      "187.3261-disjoint-set.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "assignment:0": [
      "090.1099-read-only-outside.py"
    ],
    "assignment:1": [
      "122.1454-declare-enumeration.py"
    ],
    "assignment:2": [
      "122.1454-declare-enumeration.py"
    ],
    "assignment:3": [
      "122.1454-declare-enumeration.py"
    ],
    "assignment:4": [
      "122.1454-declare-enumeration.py"
    ],
    "assignment:Add": [
      "166.2272-concatenate-two-lists.py"
    ],
    "assignment:FloorDiv": [
      "075.675-compute-lcm.py"
    ],
    "assignment:Graph": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "assignment:Lock": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "assignment:MatMult": [
      "188.3171-matrix-multiplication.py"
    ],
    "assignment:Mult": [
      "077.1093-complex-number.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment:None": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "043.676-break-outer-loop.py",
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment:Path": [
      "155.2147-delete-file.py"
    ],
    "assignment:Point": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment:Pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "assignment:Pow": [
      "064.274-big-integer--value-3-power-247.py",
      "066.672-big-integer-exponentiation.py"
    ],
    "assignment:Queue": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "assignment:Random": [
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py"
    ],
    "assignment:Request": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment:Sub": [
      "077.1093-complex-number.py"
    ],
    "assignment:TemporaryDirectory": [
      "139.2162-create-temp-directory.py"
    ],
    "assignment:TemporaryFile": [
      "138.2161-create-temp-file.py"
    ],
    "assignment:TestClass": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment:Thread": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "assignment:Timer": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "assignment:True": [
      "025.195-send-a-value-to-another-thread.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "assignment:asizeof": [
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "assignment:astype": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "assignment:atof": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "assignment:bisect_left": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "assignment:bytearray": [
      "068.2271-create-a-bitset.py",
      "088.2143-allocate-1m-bytes.py"
    ],
    "assignment:compile": [
      "083.1805-regex-with-character-repetition.py"
    ],
    "assignment:count": [
      "082.1096-count-substring-occurrences.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py"
    ],
    "assignment:date": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "assignment:deque": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "assignment:dirname": [
      "107.2139-get-folder-containing-current-program.py"
    ],
    "assignment:encode": [
      "041.187-reverse-a-string.py",
      "174.2687-make-http-post-request.py"
    ],
    "assignment:endswith": [
      "097.1095-check-string-suffix.py"
    ],
    "assignment:exists": [
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py"
    ],
    "assignment:f": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "assignment:filter": [
      "057.260-filter-list.py"
    ],
    "assignment:find": [
      "062.1091-find-substring-position.py"
    ],
    "assignment:find_set": [
      "187.3261-disjoint-set.py"
    ],
    "assignment:float": [
      "079.1090-convert-integer-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py"
    ],
    "assignment:format": [
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "065.1085-format-decimal-number.py",
      "076.1083-binary-digits-from-an-integer.py",
      "153.1980-concatenate-string-with-integer.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "156.2148-format-integer-with-zero-padding.py"
    ],
    "assignment:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "assignment:fromhex": [
      "176.2614-hex-string-to-byte-array.py"
    ],
    "assignment:fromtimestamp": [
      "098.2142-epoch-seconds-to-date-object.py"
    ],
    "assignment:gcd": [
      "074.674-compute-gcd.py"
    ],
    "assignment:getLogger": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "assignment:getcwd": [
      "106.2039-get-program-working-directory.py"
    ],
    "assignment:getsize": [
      "095.2140-get-file-size.py"
    ],
    "assignment:hex": [
      "142.2151-hexadecimal-digits-of-an-integer.py",
      "175.2613-bytes-to-hex-string.py"
    ],
    "assignment:int": [
      "022.243-convert-string-to-integer.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "120.1479-read-integer-from-stdin.py"
    ],
    "assignment:isdigit": [
      "137.1823-check-if-string-contains-only-digits.py"
    ],
    "assignment:isoformat": [
      "099.2693-format-date-yyyy-mm-dd.py"
    ],
    "assignment:join": [
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py"
    ],
    "assignment:len": [
      "117.1297-get-list-size.py",
      "169.2233-string-length.py",
      "170.2275-get-map-size.py"
    ],
    "assignment:list": [
      "017.1103-create-a-tree-data-structure.py",
      "119.1253-deduplicate-list.py"
    ],
    "assignment:listdir": [
      "180.2612-list-files-in-directory.py"
    ],
    "assignment:load": [
      "091.1098-load-json-file-into-struct.py"
    ],
    "assignment:lstrip": [
      "167.3175-trim-prefix.py"
    ],
    "assignment:matmul": [
      "188.3284-matrix-multiplication.py"
    ],
    "assignment:namedtuple": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment:now": [
      "061.576-get-current-date.py"
    ],
    "assignment:parse": [
      "103.2276-load-xml-file-into-struct.py"
    ],
    "assignment:perf_counter": [
      "125.2167-measure-function-call-duration.py"
    ],
    "assignment:pop": [
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment:popleft": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "assignment:put": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment:range": [
      "122.1453-declare-enumeration.py"
    ],
    "assignment:read": [
      "058.665-extract-file-content-to-a-string.py",
      "101.2172-load-from-http-get-request-into-a-string.py"
    ],
    "assignment:readlines": [
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "assignment:recvfrom": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment:replace": [
      "063.1088-replace-fragment-of-a-string.py",
      "116.1257-remove-occurrences-of-word-from-string.py"
    ],
    "assignment:reversed": [
      "019.197-reverse-a-list.py"
    ],
    "assignment:rstrip": [
      "150.2154-remove-trailing-slash.py",
      "168.3174-trim-suffix.py"
    ],
    "assignment:sample": [
      "158.2163-random-sublist.py"
    ],
    "assignment:serialize": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment:set": [
      "034.625-create-a-set-of-objects.py",
      "118.1254-list-to-set.py",
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment:socket": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment:sorted": [
      "028.350-sort-by-a-property.py"
    ],
    "assignment:split": [
      "049.242-split-a-space-separated-string.py"
    ],
    "assignment:startswith": [
      "096.1094-check-string-prefix.py"
    ],
    "assignment:str": [
      "055.575-convert-integer-to-string.py"
    ],
    "assignment:strftime": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "assignment:sub": [
      "147.2171-remove-all-non-ascii-characters.py"
    ],
    "assignment:sum": [
      "054.241-compute-sum-of-integers.py"
    ],
    "assignment:tee": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "assignment:timeit": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "assignment:today": [
      "099.2693-format-date-yyyy-mm-dd.py"
    ],
    "assignment:urlopen": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment:urlretrieve": [
      "102.2173-load-from-http-get-request-into-a-file.py"
    ],
    "assignment:zeros": [
      "027.193-create-a-3-dimensional-array.py"
    ],
    "assignment_lhs_identifier:CLUBS": [
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "assignment_lhs_identifier:DIAMONDS": [
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "assignment_lhs_identifier:G": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "assignment_lhs_identifier:HEARTS": [
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "assignment_lhs_identifier:L": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_lhs_identifier:PLANET": [
      "157.2150-declare-constant-string.py"
    ],
    "assignment_lhs_identifier:Point": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_lhs_identifier:Q": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "assignment_lhs_identifier:SPADES": [
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "assignment_lhs_identifier:UDP_IP": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment_lhs_identifier:a": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "104.3264-save-object-into-xml-file.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "176.2614-hex-string-to-byte-array.py"
    ],
    "assignment_lhs_identifier:ab": [
      "166.2272-concatenate-two-lists.py"
    ],
    "assignment_lhs_identifier:addr": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment_lhs_identifier:b": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "096.1094-check-string-prefix.py",
      "097.1095-check-string-suffix.py",
      "104.3264-save-object-into-xml-file.py",
      "114.2273-test-deep-equality.py",
      "115.2138-compare-dates.py",
      "137.1823-check-if-string-contains-only-digits.py",
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "assignment_lhs_identifier:b1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:b2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:blank": [
      "110.1455-check-if-string-is-blank.py"
    ],
    "assignment_lhs_identifier:buf": [
      "088.2143-allocate-1m-bytes.py"
    ],
    "assignment_lhs_identifier:c": [
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "104.3264-save-object-into-xml-file.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "assignment_lhs_identifier:c1": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:c2": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:center": [
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_lhs_identifier:chunks": [
      "049.242-split-a-space-separated-string.py"
    ],
    "assignment_lhs_identifier:content": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_lhs_identifier:content_type": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_lhs_identifier:count": [
      "082.1096-count-substring-occurrences.py"
    ],
    "assignment_lhs_identifier:d": [
      "061.576-get-current-date.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py"
    ],
    "assignment_lhs_identifier:data": [
      "121.3029-udp-listen-and-read.py",
      "174.2687-make-http-post-request.py",
      "183.3025-make-http-put-request.py"
    ],
    "assignment_lhs_identifier:dir": [
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py"
    ],
    "assignment_lhs_identifier:duration": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "assignment_lhs_identifier:elements": [
      "119.3263-deduplicate-list.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "assignment_lhs_identifier:elements_unique": [
      "119.3263-deduplicate-list.py"
    ],
    "assignment_lhs_identifier:extensions": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_lhs_identifier:f": [
      "146.1825-convert-string-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py"
    ],
    "assignment_lhs_identifier:file": [
      "138.2161-create-temp-file.py"
    ],
    "assignment_lhs_identifier:filename": [
      "102.2173-load-from-http-get-request-into-a-file.py"
    ],
    "assignment_lhs_identifier:filtered_files": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_lhs_identifier:foo": [
      "127.2274-source-code-inclusion.py"
    ],
    "assignment_lhs_identifier:g1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:g2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:headers": [
      "102.2173-load-from-http-get-request-into-a-file.py",
      "183.3025-make-http-put-request.py"
    ],
    "assignment_lhs_identifier:i": [
      "022.243-convert-string-to-integer.py",
      "062.1091-find-substring-position.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "assignment_lhs_identifier:input_var": [
      "120.1479-read-integer-from-stdin.py"
    ],
    "assignment_lhs_identifier:items": [
      "028.350-sort-by-a-property.py",
      "134.1850-create-a-new-list.py"
    ],
    "assignment_lhs_identifier:lines": [
      "058.665-extract-file-content-to-a-string.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "assignment_lhs_identifier:lock": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "assignment_lhs_identifier:logger": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "assignment_lhs_identifier:m": [
      "172.2442-insert-entry-in-map.py"
    ],
    "assignment_lhs_identifier:n": [
      "109.2280-number-of-bytes-of-a-type.py",
      "117.1297-get-list-size.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "169.2233-string-length.py",
      "170.2275-get-map-size.py"
    ],
    "assignment_lhs_identifier:newlist": [
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py"
    ],
    "assignment_lhs_identifier:ok": [
      "039.571-check-if-string-contains-a-word.py",
      "133.2160-case-insensitive-string-contains.py"
    ],
    "assignment_lhs_identifier:p": [
      "150.2154-remove-trailing-slash.py",
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "assignment_lhs_identifier:path": [
      "155.2147-delete-file.py"
    ],
    "assignment_lhs_identifier:pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "assignment_lhs_identifier:position": [
      "043.676-break-outer-loop.py"
    ],
    "assignment_lhs_identifier:q": [
      "025.195-send-a-value-to-another-thread.py",
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "assignment_lhs_identifier:r": [
      "083.1805-regex-with-character-repetition.py",
      "183.3025-make-http-put-request.py"
    ],
    "assignment_lhs_identifier:r1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:r2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_lhs_identifier:rand": [
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py"
    ],
    "assignment_lhs_identifier:req": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment_lhs_identifier:resp": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment_lhs_identifier:s": [
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "024.664-assign-to-string-the-japanese-word-.py",
      "048.210-multi-line-string-literal.py",
      "054.241-compute-sum-of-integers.py",
      "055.575-convert-integer-to-string.py",
      "065.1085-format-decimal-number.py",
      "076.1083-binary-digits-from-an-integer.py",
      "101.2172-load-from-http-get-request-into-a-string.py",
      "105.1804-current-executable-name.py",
      "142.2151-hexadecimal-digits-of-an-integer.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "152.2153-turn-a-character-into-a-string.py",
      "156.2148-format-integer-with-zero-padding.py",
      "175.2613-bytes-to-hex-string.py",
      "182.2658-quine-program.py"
    ],
    "assignment_lhs_identifier:s2": [
      "116.1257-remove-occurrences-of-word-from-string.py"
    ],
    "assignment_lhs_identifier:seen": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment_lhs_identifier:self": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment_lhs_identifier:ser": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment_lhs_identifier:sock": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment_lhs_identifier:stack": [
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment_lhs_identifier:status_code": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_lhs_identifier:t": [
      "025.195-send-a-value-to-another-thread.py",
      "038.186-extract-a-substring.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "153.1980-concatenate-string-with-integer.py",
      "167.2611-trim-prefix.py",
      "167.3175-trim-prefix.py",
      "168.2277-trim-suffix.py",
      "168.3174-trim-suffix.py"
    ],
    "assignment_lhs_identifier:t1": [
      "125.2167-measure-function-call-duration.py"
    ],
    "assignment_lhs_identifier:t2": [
      "125.2167-measure-function-call-duration.py"
    ],
    "assignment_lhs_identifier:td": [
      "139.2162-create-temp-directory.py"
    ],
    "assignment_lhs_identifier:timer": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "assignment_lhs_identifier:tst": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment_lhs_identifier:unique_set": [
      "119.3263-deduplicate-list.py"
    ],
    "assignment_lhs_identifier:vertex": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment_lhs_identifier:x": [
      "008.39-initialize-a-new-map-associative-array.py",
      "019.197-reverse-a-list.py",
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "027.193-create-a-3-dimensional-array.py",
      "033.1420-atomically-read-and-update-variable.py",
      "034.625-create-a-set-of-objects.py",
      "060.1084-read-command-line-argument.py",
      "064.274-big-integer--value-3-power-247.py",
      "068.2271-create-a-bitset.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "077.1093-complex-number.py",
      "091.1098-load-json-file-into-struct.py",
      "095.2140-get-file-size.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "103.2276-load-xml-file-into-struct.py",
      "119.1253-deduplicate-list.py",
      "165.2149-last-element-of-list.py",
      "180.2612-list-files-in-directory.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment_lhs_identifier:x2": [
      "063.1088-replace-fragment-of-a-string.py"
    ],
    "assignment_lhs_identifier:y": [
      "019.1983-reverse-a-list.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "057.260-filter-list.py",
      "057.3173-filter-list.py",
      "077.1093-complex-number.py",
      "079.1090-convert-integer-to-floating-point-number.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "118.1254-list-to-set.py",
      "158.2163-random-sublist.py",
      "187.3261-disjoint-set.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "assignment_lhs_identifier:z": [
      "066.672-big-integer-exponentiation.py"
    ],
    "assignment_rhs_atom:-1": [
      "019.1983-reverse-a-list.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "165.2149-last-element-of-list.py"
    ],
    "assignment_rhs_atom:-5": [
      "047.198-extract-string-suffix.py"
    ],
    "assignment_rhs_atom:0": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "105.1804-current-executable-name.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "168.2277-trim-suffix.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment_rhs_atom:0.5": [
      "081.2270-round-floating-point-number-to-integer.py"
    ],
    "assignment_rhs_atom:1": [
      "008.39-initialize-a-new-map-associative-array.py",
      "040.2279-graph-with-adjacency-lists.py",
      "060.1084-read-command-line-argument.py",
      "122.1454-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "168.2277-trim-suffix.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:1000000": [
      "088.2143-allocate-1m-bytes.py"
    ],
    "assignment_rhs_atom:1024": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment_rhs_atom:16": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:1j": [
      "077.1093-complex-number.py"
    ],
    "assignment_rhs_atom:2": [
      "008.39-initialize-a-new-map-associative-array.py",
      "040.2279-graph-with-adjacency-lists.py",
      "077.1093-complex-number.py",
      "122.1454-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_rhs_atom:2016": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "assignment_rhs_atom:247": [
      "064.274-big-integer--value-3-power-247.py"
    ],
    "assignment_rhs_atom:28": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "assignment_rhs_atom:3": [
      "040.2279-graph-with-adjacency-lists.py",
      "064.274-big-integer--value-3-power-247.py",
      "122.1454-declare-enumeration.py"
    ],
    "assignment_rhs_atom:30.0": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "assignment_rhs_atom:3j": [
      "077.1093-complex-number.py"
    ],
    "assignment_rhs_atom:4": [
      "040.2279-graph-with-adjacency-lists.py",
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "assignment_rhs_atom:42": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "assignment_rhs_atom:5": [
      "046.191-extract-beginning-of-string-prefix.py"
    ],
    "assignment_rhs_atom:6": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:8.0": [
      "068.2271-create-a-bitset.py"
    ],
    "assignment_rhs_atom:9": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "assignment_rhs_atom:D": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:None": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "043.676-break-outer-loop.py",
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment_rhs_atom:Q": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "assignment_rhs_atom:RGB": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:True": [
      "025.195-send-a-value-to-another-thread.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "assignment_rhs_atom:Vertex": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "assignment_rhs_atom:_": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:__file__": [
      "107.2139-get-folder-containing-current-program.py"
    ],
    "assignment_rhs_atom:_filepath": [
      "155.2147-delete-file.py"
    ],
    "assignment_rhs_atom:a": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "104.3264-save-object-into-xml-file.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "134.1850-create-a-new-list.py",
      "166.2272-concatenate-two-lists.py",
      "175.2613-bytes-to-hex-string.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "assignment_rhs_atom:b": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "104.3264-save-object-into-xml-file.py",
      "134.1850-create-a-new-list.py",
      "166.2272-concatenate-two-lists.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "assignment_rhs_atom:b1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:b2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:bisect": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "assignment_rhs_atom:bytearray": [
      "176.2614-hex-string-to-byte-array.py"
    ],
    "assignment_rhs_atom:c": [
      "104.3264-save-object-into-xml-file.py",
      "134.1850-create-a-new-list.py",
      "152.2153-turn-a-character-into-a-string.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "assignment_rhs_atom:c1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:c2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:children": [
      "017.1103-create-a-tree-data-structure.py"
    ],
    "assignment_rhs_atom:column": [
      "043.676-break-outer-loop.py"
    ],
    "assignment_rhs_atom:content_type": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_rhs_atom:d": [
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "180.2612-list-files-in-directory.py"
    ],
    "assignment_rhs_atom:d1": [
      "115.2138-compare-dates.py"
    ],
    "assignment_rhs_atom:d2": [
      "115.2138-compare-dates.py"
    ],
    "assignment_rhs_atom:data": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "174.2687-make-http-post-request.py",
      "183.3025-make-http-put-request.py"
    ],
    "assignment_rhs_atom:date": [
      "099.2693-format-date-yyyy-mm-dd.py"
    ],
    "assignment_rhs_atom:datetime": [
      "061.576-get-current-date.py",
      "098.2142-epoch-seconds-to-date-object.py"
    ],
    "assignment_rhs_atom:dirpath": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:e": [
      "189.3236-filter-and-transform-list.py"
    ],
    "assignment_rhs_atom:element": [
      "057.3173-filter-list.py"
    ],
    "assignment_rhs_atom:elements": [
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "assignment_rhs_atom:extensions": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:f": [
      "058.665-extract-file-content-to-a-string.py",
      "101.2172-load-from-http-get-request-into-a-string.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "185.2820-execute-function-in-30-seconds.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "assignment_rhs_atom:filename": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:filenames": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:fp": [
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py"
    ],
    "assignment_rhs_atom:g1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:g2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:headers": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_rhs_atom:i": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "038.186-extract-a-substring.py",
      "055.575-convert-integer-to-string.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "153.1980-concatenate-string-with-integer.py",
      "156.2148-format-integer-with-zero-padding.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment_rhs_atom:imp": [
      "127.2274-source-code-inclusion.py"
    ],
    "assignment_rhs_atom:input": [
      "091.1098-load-json-file-into-struct.py"
    ],
    "assignment_rhs_atom:item": [
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py"
    ],
    "assignment_rhs_atom:items": [
      "028.350-sort-by-a-property.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "165.2149-last-element-of-list.py"
    ],
    "assignment_rhs_atom:iterable": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "assignment_rhs_atom:j": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "038.186-extract-a-substring.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment_rhs_atom:json": [
      "091.1098-load-json-file-into-struct.py"
    ],
    "assignment_rhs_atom:k": [
      "027.192-create-a-3-dimensional-array.py",
      "158.2163-random-sublist.py"
    ],
    "assignment_rhs_atom:left_child": [
      "009.3176-create-a-binary-tree-data-structure.py"
    ],
    "assignment_rhs_atom:locale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "assignment_rhs_atom:logging": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "assignment_rhs_atom:lxml": [
      "103.2276-load-xml-file-into-struct.py"
    ],
    "assignment_rhs_atom:m": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "027.193-create-a-3-dimensional-array.py"
    ],
    "assignment_rhs_atom:math": [
      "068.2271-create-a-bitset.py"
    ],
    "assignment_rhs_atom:mymap": [
      "170.2275-get-map-size.py"
    ],
    "assignment_rhs_atom:n": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "027.193-create-a-3-dimensional-array.py",
      "066.672-big-integer-exponentiation.py",
      "068.2271-create-a-bitset.py"
    ],
    "assignment_rhs_atom:np": [
      "188.3284-matrix-multiplication.py"
    ],
    "assignment_rhs_atom:numpy": [
      "027.193-create-a-3-dimensional-array.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:os": [
      "095.2140-get-file-size.py",
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py",
      "144.2145-check-if-file-exists.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "180.2612-list-files-in-directory.py"
    ],
    "assignment_rhs_atom:p": [
      "027.192-create-a-3-dimensional-array.py",
      "027.193-create-a-3-dimensional-array.py",
      "057.260-filter-list.py",
      "150.2154-remove-trailing-slash.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "167.2611-trim-prefix.py",
      "167.3175-trim-prefix.py"
    ],
    "assignment_rhs_atom:parse": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment_rhs_atom:path": [
      "095.2140-get-file-size.py"
    ],
    "assignment_rhs_atom:pathlib": [
      "155.2147-delete-file.py"
    ],
    "assignment_rhs_atom:prefix": [
      "096.1094-check-string-prefix.py",
      "159.2281-trie.py"
    ],
    "assignment_rhs_atom:pympler": [
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "assignment_rhs_atom:pyx": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment_rhs_atom:q": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "assignment_rhs_atom:r": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_rhs_atom:r1": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:r2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "assignment_rhs_atom:random": [
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py",
      "158.2163-random-sublist.py"
    ],
    "assignment_rhs_atom:re": [
      "083.1805-regex-with-character-repetition.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "assignment_rhs_atom:req": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment_rhs_atom:request": [
      "174.2687-make-http-post-request.py"
    ],
    "assignment_rhs_atom:requests": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_rhs_atom:right_child": [
      "009.3176-create-a-binary-tree-data-structure.py"
    ],
    "assignment_rhs_atom:root": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "assignment_rhs_atom:row": [
      "043.676-break-outer-loop.py"
    ],
    "assignment_rhs_atom:s": [
      "022.243-convert-string-to-integer.py",
      "038.186-extract-a-substring.py",
      "039.571-check-if-string-contains-a-word.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "049.242-split-a-space-separated-string.py",
      "069.1086-seed-random-generator.py",
      "082.1096-count-substring-occurrences.py",
      "096.1094-check-string-prefix.py",
      "097.1095-check-string-suffix.py",
      "110.1455-check-if-string-is-blank.py",
      "133.2160-case-insensitive-string-contains.py",
      "137.1823-check-if-string-contains-only-digits.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "153.1980-concatenate-string-with-integer.py",
      "167.2611-trim-prefix.py",
      "167.3175-trim-prefix.py",
      "168.2277-trim-suffix.py",
      "168.3174-trim-suffix.py",
      "169.2233-string-length.py",
      "176.2614-hex-string-to-byte-array.py"
    ],
    "assignment_rhs_atom:s1": [
      "116.1257-remove-occurrences-of-word-from-string.py"
    ],
    "assignment_rhs_atom:self": [
      "154.2292-halfway-between-two-hex-color-codes.py",
      "187.3261-disjoint-set.py"
    ],
    "assignment_rhs_atom:size": [
      "187.3261-disjoint-set.py"
    ],
    "assignment_rhs_atom:sock": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment_rhs_atom:socket": [
      "121.3029-udp-listen-and-read.py"
    ],
    "assignment_rhs_atom:stack": [
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment_rhs_atom:start": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "assignment_rhs_atom:str": [
      "053.1933-join-a-list-of-strings.py"
    ],
    "assignment_rhs_atom:suffix": [
      "097.1095-check-string-suffix.py"
    ],
    "assignment_rhs_atom:sys": [
      "060.1084-read-command-line-argument.py",
      "105.1804-current-executable-name.py"
    ],
    "assignment_rhs_atom:t": [
      "082.1096-count-substring-occurrences.py",
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "assignment_rhs_atom:tempfile": [
      "138.2161-create-temp-file.py",
      "139.2162-create-temp-directory.py"
    ],
    "assignment_rhs_atom:threading": [
      "033.1420-atomically-read-and-update-variable.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "assignment_rhs_atom:time": [
      "125.2167-measure-function-call-duration.py"
    ],
    "assignment_rhs_atom:timeit": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "assignment_rhs_atom:ts": [
      "098.2142-epoch-seconds-to-date-object.py"
    ],
    "assignment_rhs_atom:tst": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "assignment_rhs_atom:u": [
      "102.2173-load-from-http-get-request-into-a-file.py",
      "174.2687-make-http-post-request.py"
    ],
    "assignment_rhs_atom:url": [
      "183.3025-make-http-put-request.py"
    ],
    "assignment_rhs_atom:urllib": [
      "102.2173-load-from-http-get-request-into-a-file.py"
    ],
    "assignment_rhs_atom:v": [
      "172.2442-insert-entry-in-map.py"
    ],
    "assignment_rhs_atom:value": [
      "017.1103-create-a-tree-data-structure.py",
      "159.2281-trie.py"
    ],
    "assignment_rhs_atom:w": [
      "116.1257-remove-occurrences-of-word-from-string.py",
      "168.2277-trim-suffix.py",
      "168.3174-trim-suffix.py"
    ],
    "assignment_rhs_atom:word": [
      "039.571-check-if-string-contains-a-word.py",
      "133.2160-case-insensitive-string-contains.py"
    ],
    "assignment_rhs_atom:worker": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "assignment_rhs_atom:x": [
      "019.197-reverse-a-list.py",
      "019.1983-reverse-a-list.py",
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "028.350-sort-by-a-property.py",
      "033.1420-atomically-read-and-update-variable.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "054.241-compute-sum-of-integers.py",
      "057.260-filter-list.py",
      "057.3173-filter-list.py",
      "062.1091-find-substring-position.py",
      "063.1088-replace-fragment-of-a-string.py",
      "065.1085-format-decimal-number.py",
      "066.672-big-integer-exponentiation.py",
      "076.1083-binary-digits-from-an-integer.py",
      "077.1093-complex-number.py",
      "079.1090-convert-integer-to-floating-point-number.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "114.2273-test-deep-equality.py",
      "117.1297-get-list-size.py",
      "118.1254-list-to-set.py",
      "119.1253-deduplicate-list.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "142.2151-hexadecimal-digits-of-an-integer.py",
      "158.2163-random-sublist.py",
      "161.2098-multiply-all-the-elements-of-a-list.py",
      "178.2615-check-if-point-is-inside-rectangle.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "assignment_rhs_atom:x1": [
      "178.2615-check-if-point-is-inside-rectangle.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_rhs_atom:x2": [
      "178.2615-check-if-point-is-inside-rectangle.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_rhs_atom:y": [
      "062.1091-find-substring-position.py",
      "063.1088-replace-fragment-of-a-string.py",
      "114.2273-test-deep-equality.py",
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "assignment_rhs_atom:y1": [
      "178.2615-check-if-point-is-inside-rectangle.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_rhs_atom:y2": [
      "178.2615-check-if-point-is-inside-rectangle.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "assignment_rhs_atom:z": [
      "063.1088-replace-fragment-of-a-string.py"
    ],
    "binary_operator:Add": [
      "003.19-create-a-procedure.py",
      "037.671-currying.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "166.2272-concatenate-two-lists.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py",
      "184.2701-tomorrow.py"
    ],
    "binary_operator:Div": [
      "068.2271-create-a-bitset.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "binary_operator:FloorDiv": [
      "067.1426-binomial-coefficient-n-choose-k.py",
      "075.675-compute-lcm.py",
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "binary_operator:MatMult": [
      "188.3171-matrix-multiplication.py"
    ],
    "binary_operator:Mod": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "182.2658-quine-program.py"
    ],
    "binary_operator:Mult": [
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "031.188-recursive-factorial-simple.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "075.675-compute-lcm.py",
      "077.1093-complex-number.py",
      "161.2098-multiply-all-the-elements-of-a-list.py",
      "187.3261-disjoint-set.py"
    ],
    "binary_operator:Pow": [
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "064.274-big-integer--value-3-power-247.py",
      "066.672-big-integer-exponentiation.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "binary_operator:Sub": [
      "031.188-recursive-factorial-simple.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "077.1093-complex-number.py",
      "125.2167-measure-function-call-duration.py"
    ],
    "body_recursive_function:DFS": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "body_recursive_function:dfs": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "body_recursive_function:f": [
      "031.188-recursive-factorial-simple.py"
    ],
    "boolean_operator:And": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "167.2611-trim-prefix.py",
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "break": [
      "078.1089-do-while-loop.py"
    ],
    "call_argument:": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "025.195-send-a-value-to-another-thread.py",
      "027.193-create-a-3-dimensional-array.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "031.188-recursive-factorial-simple.py",
      "034.625-create-a-set-of-objects.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "041.187-reverse-a-string.py",
      "043.2733-break-outer-loop.py",
      "053.1933-join-a-list-of-strings.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "068.2271-create-a-bitset.py",
      "071.379-echo-program-implementation.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "083.1805-regex-with-character-repetition.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "089.1097-handle-invalid-argument.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "094.1101-print-type-of-variable.py",
      "094.1864-print-type-of-variable.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "103.2276-load-xml-file-into-struct.py",
      "104.3264-save-object-into-xml-file.py",
      "107.2139-get-folder-containing-current-program.py",
      "111.2168-launch-other-program.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "116.1257-remove-occurrences-of-word-from-string.py",
      "119.1253-deduplicate-list.py",
      "120.1479-read-integer-from-stdin.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "127.2274-source-code-inclusion.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "132.2040-measure-duration-of-procedure-execution.py",
      "145.1822-print-log-line-with-datetime.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "146.2739-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "150.2154-remove-trailing-slash.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "156.2148-format-integer-with-zero-padding.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "174.2687-make-http-post-request.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "179.2689-get-center-of-a-rectangle.py",
      "182.2658-quine-program.py",
      "187.3261-disjoint-set.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "call_argument:0": [
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "call_argument:1": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "037.671-currying.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "087.1139-stop-program.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "168.2277-trim-suffix.py"
    ],
    "call_argument:10": [
      "002.11-print-hello-10-times.py"
    ],
    "call_argument:1000000": [
      "088.2143-allocate-1m-bytes.py"
    ],
    "call_argument:1001": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "call_argument:1024": [
      "121.3029-udp-listen-and-read.py"
    ],
    "call_argument:16": [
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:2": [
      "037.671-currying.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:2016": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "call_argument:28": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "call_argument:30.0": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "call_argument:4": [
      "122.1453-declare-enumeration.py"
    ],
    "call_argument:5": [
      "045.570-pause-execution-for-5-seconds.py"
    ],
    "call_argument:6": [
      "043.2733-break-outer-loop.py",
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:9": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "call_argument:D": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "call_argument:None": [
      "140.2156-delete-map-entry.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "call_argument:Parent": [
      "073.673-create-a-factory.py"
    ],
    "call_argument:__file__": [
      "107.2139-get-folder-containing-current-program.py"
    ],
    "call_argument:_filepath": [
      "155.2147-delete-file.py"
    ],
    "call_argument:a": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py",
      "035.667-first-class-function--compose.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "188.3284-matrix-multiplication.py"
    ],
    "call_argument:a_class": [
      "073.673-create-a-factory.py"
    ],
    "call_argument:b": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "188.3284-matrix-multiplication.py"
    ],
    "call_argument:bt": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "call_argument:c": [
      "100.1142-sort-by-a-comparator.py"
    ],
    "call_argument:c1": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:c2": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:child": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "call_argument:children": [
      "017.1103-create-a-tree-data-structure.py"
    ],
    "call_argument:cls": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:d": [
      "180.2612-list-files-in-directory.py"
    ],
    "call_argument:data": [
      "121.3029-udp-listen-and-read.py"
    ],
    "call_argument:dirpath": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "call_argument:e": [
      "189.3236-filter-and-transform-list.py"
    ],
    "call_argument:element": [
      "057.3173-filter-list.py"
    ],
    "call_argument:elements_unique": [
      "119.3263-deduplicate-list.py"
    ],
    "call_argument:f": [
      "018.2084-depth-first-traversing-of-a-tree.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "058.665-extract-file-content-to-a-string.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "call_argument:filename": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "call_argument:fp": [
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py"
    ],
    "call_argument:i": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "044.190-insert-element-in-list.py",
      "055.575-convert-integer-to-string.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "119.3263-deduplicate-list.py",
      "153.1980-concatenate-string-with-integer.py",
      "156.2148-format-integer-with-zero-padding.py",
      "187.3261-disjoint-set.py"
    ],
    "call_argument:input": [
      "091.1098-load-json-file-into-struct.py"
    ],
    "call_argument:int": [
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "call_argument:item1": [
      "143.2256-iterate-alternatively-over-two-lists.py"
    ],
    "call_argument:item2": [
      "143.2256-iterate-alternatively-over-two-lists.py"
    ],
    "call_argument:items": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "028.350-sort-by-a-property.py"
    ],
    "call_argument:iterable": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "call_argument:j": [
      "187.3261-disjoint-set.py"
    ],
    "call_argument:k": [
      "013.574-iterate-over-map-keys-and-values.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "140.2156-delete-map-entry.py",
      "158.2163-random-sublist.py"
    ],
    "call_argument:l1": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "call_argument:l2": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "call_argument:labels": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "call_argument:list": [
      "010.1478-shuffle-a-list.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "call_argument:m": [
      "020.573-return-two-values.py",
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "043.2733-break-outer-loop.py"
    ],
    "call_argument:msg": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "call_argument:mymap": [
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "170.2275-get-map-size.py"
    ],
    "call_argument:n": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:output": [
      "092.1100-save-object-into-json-file.py"
    ],
    "call_argument:p": [
      "027.192-create-a-3-dimensional-array.py",
      "057.260-filter-list.py",
      "167.2611-trim-prefix.py",
      "167.3175-trim-prefix.py"
    ],
    "call_argument:pair": [
      "143.2256-iterate-alternatively-over-two-lists.py"
    ],
    "call_argument:path": [
      "040.2279-graph-with-adjacency-lists.py",
      "095.2140-get-file-size.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "call_argument:prefix": [
      "096.1094-check-string-prefix.py"
    ],
    "call_argument:processes": [
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "call_argument:req": [
      "174.2687-make-http-post-request.py"
    ],
    "call_argument:rgbstr": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call_argument:root": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "call_argument:row": [
      "043.2733-break-outer-loop.py"
    ],
    "call_argument:s": [
      "022.243-convert-string-to-integer.py",
      "069.1086-seed-random-generator.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "153.1980-concatenate-string-with-integer.py",
      "164.2169-open-url-in-default-browser.py",
      "169.2233-string-length.py",
      "176.2614-hex-string-to-byte-array.py"
    ],
    "call_argument:ser": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "call_argument:size": [
      "187.3261-disjoint-set.py"
    ],
    "call_argument:str": [
      "053.1933-join-a-list-of-strings.py"
    ],
    "call_argument:str_": [
      "073.673-create-a-factory.py"
    ],
    "call_argument:suffix": [
      "097.1095-check-string-suffix.py"
    ],
    "call_argument:t": [
      "082.1096-count-substring-occurrences.py",
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "call_argument:ts": [
      "098.2142-epoch-seconds-to-date-object.py"
    ],
    "call_argument:u": [
      "101.2172-load-from-http-get-request-into-a-string.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "174.2687-make-http-post-request.py"
    ],
    "call_argument:url": [
      "183.3025-make-http-put-request.py"
    ],
    "call_argument:v": [
      "013.574-iterate-over-map-keys-and-values.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py"
    ],
    "call_argument:vertex": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "call_argument:w": [
      "116.1257-remove-occurrences-of-word-from-string.py",
      "168.2277-trim-suffix.py",
      "168.3174-trim-suffix.py"
    ],
    "call_argument:x": [
      "006.32-iterate-over-list-values.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "010.182-shuffle-a-list.py",
      "011.47-pick-a-random-element-from-a-list.py",
      "019.197-reverse-a-list.py",
      "020.573-return-two-values.py",
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "033.1420-atomically-read-and-update-variable.py",
      "036.670-first-class-function--generic-composition.py",
      "044.190-insert-element-in-list.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "054.241-compute-sum-of-integers.py",
      "057.260-filter-list.py",
      "059.668-write-to-standard-error-stream.py",
      "065.1085-format-decimal-number.py",
      "076.1083-binary-digits-from-an-integer.py",
      "079.1090-convert-integer-to-floating-point-number.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "092.1100-save-object-into-json-file.py",
      "094.1101-print-type-of-variable.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "117.1297-get-list-size.py",
      "118.1254-list-to-set.py",
      "118.3266-list-to-set.py",
      "119.1253-deduplicate-list.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "135.2158-remove-item-from-list-by-its-value.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "142.2151-hexadecimal-digits-of-an-integer.py",
      "158.2163-random-sublist.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "call_argument:y": [
      "062.1091-find-substring-position.py",
      "063.1088-replace-fragment-of-a-string.py"
    ],
    "call_argument:z": [
      "063.1088-replace-fragment-of-a-string.py"
    ],
    "chained_comparison:2": [
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "chained_inequalities:2": [
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "class:BreakOuterLoop": [
      "043.676-break-outer-loop.py"
    ],
    "class:Foo": [
      "090.1099-read-only-outside.py"
    ],
    "class:Graph": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "class:Node": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py"
    ],
    "class:Point": [
      "005.663-create-a-2d-point-data-structure.py"
    ],
    "class:RGB": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "class:Suit": [
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "class:T": [
      "034.625-create-a-set-of-objects.py"
    ],
    "class:TestClass": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "class:Trie": [
      "159.2281-trie.py"
    ],
    "class:UnionFind": [
      "187.3261-disjoint-set.py"
    ],
    "class:Vertex": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "class_method:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "closure:f": [
      "037.671-currying.py"
    ],
    "comparison_operator:Eq": [
      "031.188-recursive-factorial-simple.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "110.1455-check-if-string-is-blank.py",
      "114.2273-test-deep-equality.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "187.3261-disjoint-set.py"
    ],
    "comparison_operator:Gt": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "comparison_operator:In": [
      "012.181-check-if-list-contains-a-value.py",
      "020.573-return-two-values.py",
      "039.571-check-if-string-contains-a-word.py",
      "051.230-check-if-map-contains-key.py",
      "052.666-check-if-map-contains-value.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "133.2160-case-insensitive-string-contains.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "comparison_operator:Is": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "comparison_operator:Lt": [
      "115.2138-compare-dates.py",
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "comparison_operator:NotEq": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py"
    ],
    "comparison_operator:NotIn": [
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "composition": [
      "034.625-create-a-set-of-objects.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "043.2733-break-outer-loop.py",
      "053.1933-join-a-list-of-strings.py",
      "068.2271-create-a-bitset.py",
      "071.379-echo-program-implementation.py",
      "094.1101-print-type-of-variable.py",
      "107.2139-get-folder-containing-current-program.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.1253-deduplicate-list.py",
      "120.1479-read-integer-from-stdin.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "comprehension:Generator": [
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "comprehension:List": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "057.3173-filter-list.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "161.2098-multiply-all-the-elements-of-a-list.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "187.3261-disjoint-set.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "comprehension_for_count:1": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "057.3173-filter-list.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "161.2098-multiply-all-the-elements-of-a-list.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "187.3261-disjoint-set.py",
      "189.3236-filter-and-transform-list.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "comprehension_for_count:2": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "concatenation_operator:Str": [
      "003.19-create-a-procedure.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "conditional_expression": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "131.2083-successive-conditions.py"
    ],
    "continue": [
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py"
    ],
    "decorated_function:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "decorated_function:x": [
      "090.1099-read-only-outside.py"
    ],
    "empty_literal:Dict": [
      "183.3025-make-http-put-request.py"
    ],
    "empty_literal:List": [
      "119.3263-deduplicate-list.py",
      "159.2281-trie.py"
    ],
    "empty_literal:Str": [
      "110.1455-check-if-string-is-blank.py",
      "116.1257-remove-occurrences-of-word-from-string.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "except:BreakOuterLoop": [
      "043.676-break-outer-loop.py"
    ],
    "except:Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "filtered_comprehension": [
      "057.3173-filter-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "for:a": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "for:b": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "for:child": [
      "018.2084-depth-first-traversing-of-a-tree.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "for:column": [
      "043.676-break-outer-loop.py"
    ],
    "for:i": [
      "002.11-print-hello-10-times.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "043.2733-break-outer-loop.py",
      "119.3263-deduplicate-list.py"
    ],
    "for:idx": [
      "020.573-return-two-values.py"
    ],
    "for:item": [
      "020.573-return-two-values.py"
    ],
    "for:j": [
      "043.2733-break-outer-loop.py"
    ],
    "for:k": [
      "013.574-iterate-over-map-keys-and-values.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py"
    ],
    "for:l1": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "for:l2": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "for:pair": [
      "143.2256-iterate-alternatively-over-two-lists.py"
    ],
    "for:path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "for:row": [
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py"
    ],
    "for:u": [
      "042.1264-continue-outer-loop.py"
    ],
    "for:v": [
      "013.574-iterate-over-map-keys-and-values.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py"
    ],
    "for:v_": [
      "042.3168-continue-outer-loop.py"
    ],
    "for:value": [
      "043.2733-break-outer-loop.py"
    ],
    "for:x": [
      "006.32-iterate-over-list-values.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "for_each": [
      "006.32-iterate-over-list-values.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.676-break-outer-loop.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "for_indexes_elements": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "for_range:10": [
      "002.11-print-hello-10-times.py"
    ],
    "for_range:1:1001": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "function:BFS": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "function:DFS": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "function:__init__": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "function:__str__": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function:a": [
      "003.2372-create-a-procedure.py"
    ],
    "function:add": [
      "037.671-currying.py"
    ],
    "function:adding_will_overflow": [
      "085.1003-check-if-integer-addition-will-overflow.py"
    ],
    "function:binarySearch": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "function:binom": [
      "067.1426-binomial-coefficient-n-choose-k.py"
    ],
    "function:breadth_first": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "function:compose": [
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py"
    ],
    "function:control": [
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "function:depth_first": [
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "function:dfs": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "function:exp": [
      "032.196-integer-exponentiation-by-squaring.py"
    ],
    "function:f": [
      "031.188-recursive-factorial-simple.py",
      "037.671-currying.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "function:fact": [
      "073.673-create-a-factory.py"
    ],
    "function:find_set": [
      "187.3261-disjoint-set.py"
    ],
    "function:finish": [
      "003.19-create-a-procedure.py"
    ],
    "function:foo": [
      "126.2137-multiple-return-values.py"
    ],
    "function:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function:is_same_set": [
      "187.3261-disjoint-set.py"
    ],
    "function:loop_breaking": [
      "043.2733-break-outer-loop.py"
    ],
    "function:make_path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "function:multiplyWillOverflow": [
      "086.1004-check-if-integer-multiplication-will-overflow.py"
    ],
    "function:pairwise": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function:pick": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py"
    ],
    "function:search": [
      "020.573-return-two-values.py"
    ],
    "function:square": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py"
    ],
    "function:union_set": [
      "187.3261-disjoint-set.py"
    ],
    "function:x": [
      "090.1099-read-only-outside.py"
    ],
    "function_argument:a": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "035.667-first-class-function--compose.py",
      "037.671-currying.py",
      "104.3264-save-object-into-xml-file.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "function_argument:a_class": [
      "073.673-create-a-factory.py"
    ],
    "function_argument:b": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "037.671-currying.py",
      "104.3264-save-object-into-xml-file.py"
    ],
    "function_argument:bt": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "function_argument:c": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "function_argument:children": [
      "017.1103-create-a-tree-data-structure.py"
    ],
    "function_argument:cls": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function_argument:data": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py"
    ],
    "function_argument:f": [
      "018.2084-depth-first-traversing-of-a-tree.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "function_argument:g": [
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py"
    ],
    "function_argument:i": [
      "031.188-recursive-factorial-simple.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "187.3261-disjoint-set.py"
    ],
    "function_argument:iterable": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_argument:j": [
      "187.3261-disjoint-set.py"
    ],
    "function_argument:k": [
      "067.1426-binomial-coefficient-n-choose-k.py"
    ],
    "function_argument:labels": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "function_argument:left_child": [
      "009.3176-create-a-binary-tree-data-structure.py"
    ],
    "function_argument:m": [
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "function_argument:n": [
      "032.196-integer-exponentiation-by-squaring.py",
      "067.1426-binomial-coefficient-n-choose-k.py"
    ],
    "function_argument:name": [
      "003.19-create-a-procedure.py"
    ],
    "function_argument:paths": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "function_argument:prefix": [
      "159.2281-trie.py"
    ],
    "function_argument:rgbstr": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function_argument:right_child": [
      "009.3176-create-a-binary-tree-data-structure.py"
    ],
    "function_argument:root": [
      "018.2084-depth-first-traversing-of-a-tree.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "function_argument:self": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "function_argument:size": [
      "187.3261-disjoint-set.py"
    ],
    "function_argument:start": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "function_argument:str_": [
      "073.673-create-a-factory.py"
    ],
    "function_argument:v": [
      "043.2733-break-outer-loop.py"
    ],
    "function_argument:value": [
      "017.1103-create-a-tree-data-structure.py",
      "159.2281-trie.py"
    ],
    "function_argument:x": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "020.573-return-two-values.py",
      "028.350-sort-by-a-property.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "036.670-first-class-function--generic-composition.py",
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "function_argument:y": [
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py"
    ],
    "function_argument_flavor:arg": [
      "003.19-create-a-procedure.py",
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "017.1103-create-a-tree-data-structure.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "020.573-return-two-values.py",
      "028.350-sort-by-a-property.py",
      "031.188-recursive-factorial-simple.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "073.673-create-a-factory.py",
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py",
      "090.1099-read-only-outside.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "104.3264-save-object-into-xml-file.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "187.3261-disjoint-set.py"
    ],
    "function_argument_flavor:vararg": [
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "function_call:DFS": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "function_call:Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "function_call:Graph": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "function_call:P": [
      "189.3236-filter-and-transform-list.py"
    ],
    "function_call:Path": [
      "144.2915-check-if-file-exists.py"
    ],
    "function_call:Point": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "function_call:Pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "function_call:Queue": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "function_call:T": [
      "034.625-create-a-set-of-objects.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "function_call:TestClass": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "function_call:Thread": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "function_call:ValueError": [
      "089.1097-handle-invalid-argument.py"
    ],
    "function_call:a_class": [
      "073.673-create-a-factory.py"
    ],
    "function_call:any": [
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "function_call:bat": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "function_call:bin": [
      "084.1940-count-bits-set-in-integer-binary-representation.py"
    ],
    "function_call:bytearray": [
      "068.2271-create-a-bitset.py",
      "088.2143-allocate-1m-bytes.py"
    ],
    "function_call:date": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "function_call:deque": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "function_call:dfs": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "function_call:doSomething": [
      "006.32-iterate-over-list-values.py"
    ],
    "function_call:do_something": [
      "078.1089-do-while-loop.py"
    ],
    "function_call:enumerate": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "function_call:f": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "031.188-recursive-factorial-simple.py",
      "033.1420-atomically-read-and-update-variable.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "function_call:f1": [
      "131.2766-successive-conditions.py"
    ],
    "function_call:f2": [
      "131.2766-successive-conditions.py"
    ],
    "function_call:f3": [
      "131.2766-successive-conditions.py"
    ],
    "function_call:f32": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "function_call:f64": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "function_call:filter": [
      "057.260-filter-list.py"
    ],
    "function_call:float": [
      "079.1090-convert-integer-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py",
      "146.2739-convert-string-to-floating-point-number.py"
    ],
    "function_call:foo": [
      "125.2167-measure-function-call-duration.py"
    ],
    "function_call:format": [
      "154.2292-halfway-between-two-hex-color-codes.py",
      "156.2148-format-integer-with-zero-padding.py"
    ],
    "function_call:fox": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "function_call:g": [
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py"
    ],
    "function_call:gcd": [
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py"
    ],
    "function_call:hex": [
      "142.2151-hexadecimal-digits-of-an-integer.py"
    ],
    "function_call:input": [
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "function_call:int": [
      "022.243-convert-string-to-integer.py",
      "068.2271-create-a-bitset.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "120.1479-read-integer-from-stdin.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function_call:issubclass": [
      "073.673-create-a-factory.py"
    ],
    "function_call:len": [
      "117.1297-get-list-size.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "167.2611-trim-prefix.py",
      "169.2233-string-length.py",
      "170.2275-get-map-size.py"
    ],
    "function_call:list": [
      "017.1103-create-a-tree-data-structure.py",
      "119.1253-deduplicate-list.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "function_call:locals": [
      "108.1291-determine-if-variable-name-is-defined.py"
    ],
    "function_call:loop_breaking": [
      "043.2733-break-outer-loop.py"
    ],
    "function_call:map": [
      "053.1933-join-a-list-of-strings.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "function_call:namedtuple": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "function_call:next": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_call:open": [
      "058.665-extract-file-content-to-a-string.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "function_call:p": [
      "057.3173-filter-list.py"
    ],
    "function_call:pairwise": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_call:print": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "037.671-currying.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "071.379-echo-program-implementation.py",
      "094.1101-print-type-of-variable.py",
      "094.1864-print-type-of-variable.py",
      "104.3264-save-object-into-xml-file.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "182.2658-quine-program.py"
    ],
    "function_call:range": [
      "002.11-print-hello-10-times.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "122.1453-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "187.3261-disjoint-set.py"
    ],
    "function_call:raw_input": [
      "120.1479-read-integer-from-stdin.py"
    ],
    "function_call:reversed": [
      "019.197-reverse-a-list.py"
    ],
    "function_call:set": [
      "034.625-create-a-set-of-objects.py",
      "118.1254-list-to-set.py",
      "118.3266-list-to-set.py",
      "119.1253-deduplicate-list.py",
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "function_call:shuffle": [
      "010.182-shuffle-a-list.py"
    ],
    "function_call:sorted": [
      "028.350-sort-by-a-property.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py"
    ],
    "function_call:str": [
      "055.575-convert-integer-to-string.py"
    ],
    "function_call:sum": [
      "054.241-compute-sum-of-integers.py"
    ],
    "function_call:tee": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_call:timedelta": [
      "184.2701-tomorrow.py"
    ],
    "function_call:type": [
      "094.1101-print-type-of-variable.py"
    ],
    "function_call:xrange": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py"
    ],
    "function_call:zip": [
      "040.2279-graph-with-adjacency-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_call_without_arguments:Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "function_call_without_arguments:Pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "function_call_without_arguments:Queue": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "function_call_without_arguments:T": [
      "034.625-create-a-set-of-objects.py"
    ],
    "function_call_without_arguments:bat": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "function_call_without_arguments:do_something": [
      "078.1089-do-while-loop.py"
    ],
    "function_call_without_arguments:f": [
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "function_call_without_arguments:f1": [
      "131.2766-successive-conditions.py"
    ],
    "function_call_without_arguments:f2": [
      "131.2766-successive-conditions.py"
    ],
    "function_call_without_arguments:f3": [
      "131.2766-successive-conditions.py"
    ],
    "function_call_without_arguments:f32": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "function_call_without_arguments:f64": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "function_call_without_arguments:foo": [
      "125.2167-measure-function-call-duration.py"
    ],
    "function_call_without_arguments:fox": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "function_call_without_arguments:input": [
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "function_call_without_arguments:locals": [
      "108.1291-determine-if-variable-name-is-defined.py"
    ],
    "function_call_without_arguments:set": [
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "function_call_without_result:DFS": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "function_call_without_result:bat": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "function_call_without_result:dfs": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "function_call_without_result:doSomething": [
      "006.32-iterate-over-list-values.py"
    ],
    "function_call_without_result:do_something": [
      "078.1089-do-while-loop.py"
    ],
    "function_call_without_result:f": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "function_call_without_result:f1": [
      "131.2766-successive-conditions.py"
    ],
    "function_call_without_result:f2": [
      "131.2766-successive-conditions.py"
    ],
    "function_call_without_result:f3": [
      "131.2766-successive-conditions.py"
    ],
    "function_call_without_result:f32": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "function_call_without_result:f64": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "function_call_without_result:float": [
      "146.2739-convert-string-to-floating-point-number.py"
    ],
    "function_call_without_result:foo": [
      "125.2167-measure-function-call-duration.py"
    ],
    "function_call_without_result:fox": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "function_call_without_result:list": [
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "function_call_without_result:next": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_call_without_result:print": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "037.671-currying.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "071.379-echo-program-implementation.py",
      "094.1101-print-type-of-variable.py",
      "094.1864-print-type-of-variable.py",
      "104.3264-save-object-into-xml-file.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "182.2658-quine-program.py"
    ],
    "function_call_without_result:set": [
      "118.3266-list-to-set.py"
    ],
    "function_call_without_result:shuffle": [
      "010.182-shuffle-a-list.py"
    ],
    "function_decorator:classmethod": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function_decorator:property": [
      "090.1099-read-only-outside.py"
    ],
    "function_returning_nothing:BFS": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "function_returning_nothing:DFS": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "function_returning_nothing:__init__": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "function_returning_nothing:a": [
      "003.2372-create-a-procedure.py"
    ],
    "function_returning_nothing:breadth_first": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "function_returning_nothing:depth_first": [
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "function_returning_nothing:dfs": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "function_returning_nothing:f": [
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "function_returning_nothing:finish": [
      "003.19-create-a-procedure.py"
    ],
    "function_returning_nothing:make_path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "function_returning_nothing:union_set": [
      "187.3261-disjoint-set.py"
    ],
    "function_returning_something:__str__": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function_returning_something:add": [
      "037.671-currying.py"
    ],
    "function_returning_something:adding_will_overflow": [
      "085.1003-check-if-integer-addition-will-overflow.py"
    ],
    "function_returning_something:binarySearch": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "function_returning_something:binom": [
      "067.1426-binomial-coefficient-n-choose-k.py"
    ],
    "function_returning_something:compose": [
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py"
    ],
    "function_returning_something:control": [
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "function_returning_something:exp": [
      "032.196-integer-exponentiation-by-squaring.py"
    ],
    "function_returning_something:f": [
      "031.188-recursive-factorial-simple.py",
      "037.671-currying.py"
    ],
    "function_returning_something:fact": [
      "073.673-create-a-factory.py"
    ],
    "function_returning_something:find_set": [
      "187.3261-disjoint-set.py"
    ],
    "function_returning_something:foo": [
      "126.2137-multiple-return-values.py"
    ],
    "function_returning_something:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "function_returning_something:is_same_set": [
      "187.3261-disjoint-set.py"
    ],
    "function_returning_something:loop_breaking": [
      "043.2733-break-outer-loop.py"
    ],
    "function_returning_something:multiplyWillOverflow": [
      "086.1004-check-if-integer-multiplication-will-overflow.py"
    ],
    "function_returning_something:pairwise": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_returning_something:pick": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py"
    ],
    "function_returning_something:search": [
      "020.573-return-two-values.py"
    ],
    "function_returning_something:square": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py"
    ],
    "function_returning_something:x": [
      "090.1099-read-only-outside.py"
    ],
    "function_tail_call:a_class": [
      "073.673-create-a-factory.py"
    ],
    "function_tail_call:f": [
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "function_tail_call:zip": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "function_without_arguments:a": [
      "003.2372-create-a-procedure.py"
    ],
    "function_without_arguments:foo": [
      "126.2137-multiple-return-values.py"
    ],
    "higher_order_function:a_class": [
      "073.673-create-a-factory.py"
    ],
    "higher_order_function:f": [
      "018.2084-depth-first-traversing-of-a-tree.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "higher_order_function:g": [
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py"
    ],
    "if": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "020.573-return-two-values.py",
      "031.188-recursive-factorial-simple.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "073.673-create-a-factory.py",
      "078.1089-do-while-loop.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "131.2766-successive-conditions.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "187.3261-disjoint-set.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "if_elif_branch": [
      "131.2766-successive-conditions.py"
    ],
    "if_else_branch": [
      "031.188-recursive-factorial-simple.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "187.3261-disjoint-set.py"
    ],
    "if_guard": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "if_test_atom:0": [
      "031.188-recursive-factorial-simple.py"
    ],
    "if_test_atom:1": [
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "if_test_atom:2": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "if_test_atom:32": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "if_test_atom:None": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "if_test_atom:Parent": [
      "073.673-create-a-factory.py"
    ],
    "if_test_atom:a": [
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "if_test_atom:a_class": [
      "073.673-create-a-factory.py"
    ],
    "if_test_atom:bt": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "if_test_atom:c": [
      "078.1089-do-while-loop.py"
    ],
    "if_test_atom:column": [
      "043.676-break-outer-loop.py"
    ],
    "if_test_atom:i": [
      "031.188-recursive-factorial-simple.py",
      "119.3263-deduplicate-list.py",
      "187.3261-disjoint-set.py"
    ],
    "if_test_atom:item": [
      "020.573-return-two-values.py"
    ],
    "if_test_atom:j": [
      "187.3261-disjoint-set.py"
    ],
    "if_test_atom:m": [
      "043.676-break-outer-loop.py"
    ],
    "if_test_atom:n": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "if_test_atom:os": [
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "if_test_atom:p": [
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "if_test_atom:row": [
      "043.676-break-outer-loop.py"
    ],
    "if_test_atom:self": [
      "187.3261-disjoint-set.py"
    ],
    "if_test_atom:sys": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "if_test_atom:u": [
      "042.1264-continue-outer-loop.py"
    ],
    "if_test_atom:unique_set": [
      "119.3263-deduplicate-list.py"
    ],
    "if_test_atom:v": [
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "if_test_atom:v_": [
      "042.3168-continue-outer-loop.py"
    ],
    "if_test_atom:value": [
      "043.2733-break-outer-loop.py"
    ],
    "if_test_atom:x": [
      "020.573-return-two-values.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "if_then_branch": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "020.573-return-two-values.py",
      "031.188-recursive-factorial-simple.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "073.673-create-a-factory.py",
      "078.1089-do-while-loop.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "131.2766-successive-conditions.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "187.3261-disjoint-set.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "if_without_else": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "020.573-return-two-values.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "073.673-create-a-factory.py",
      "078.1089-do-while-loop.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "187.3261-disjoint-set.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "import:Queue": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "import:__future__:division": [
      "068.2271-create-a-bitset.py"
    ],
    "import:__future__:print_function": [
      "001.3-print-hello-world.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "import:bisect": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "import:collections:defaultdict": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "import:collections:deque": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "import:collections:namedtuple": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "import:dataclasses:dataclass": [
      "005.663-create-a-2d-point-data-structure.py"
    ],
    "import:datetime": [
      "061.576-get-current-date.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "115.2138-compare-dates.py"
    ],
    "import:datetime:date": [
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "184.2701-tomorrow.py"
    ],
    "import:datetime:timedelta": [
      "184.2701-tomorrow.py"
    ],
    "import:enum:Enum": [
      "122.1454-declare-enumeration.py"
    ],
    "import:fractions:gcd": [
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py"
    ],
    "import:functools:partial": [
      "037.671-currying.py"
    ],
    "import:glob": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "import:imp": [
      "127.2274-source-code-inclusion.py"
    ],
    "import:itertools": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "import:itertools:tee": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "import:json": [
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py"
    ],
    "import:locale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "import:logging": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "import:lxml.etree": [
      "103.2276-load-xml-file-into-struct.py"
    ],
    "import:math": [
      "067.1426-binomial-coefficient-n-choose-k.py",
      "068.2271-create-a-bitset.py"
    ],
    "import:multiprocessing:Pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "import:numpy": [
      "027.193-create-a-3-dimensional-array.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "import:os": [
      "095.2140-get-file-size.py",
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py",
      "144.2145-check-if-file-exists.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "180.2612-list-files-in-directory.py"
    ],
    "import:pathlib": [
      "155.2147-delete-file.py"
    ],
    "import:pathlib:Path": [
      "144.2915-check-if-file-exists.py"
    ],
    "import:pympler.asizeof": [
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "import:pyxser": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "import:random": [
      "010.1478-shuffle-a-list.py",
      "011.47-pick-a-random-element-from-a-list.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py",
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py",
      "158.2163-random-sublist.py"
    ],
    "import:random:shuffle": [
      "010.182-shuffle-a-list.py"
    ],
    "import:re": [
      "083.1805-regex-with-character-repetition.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "import:requests": [
      "183.3025-make-http-put-request.py"
    ],
    "import:socket": [
      "121.3029-udp-listen-and-read.py"
    ],
    "import:subprocess": [
      "111.2168-launch-other-program.py"
    ],
    "import:sys": [
      "059.668-write-to-standard-error-stream.py",
      "060.1084-read-command-line-argument.py",
      "071.379-echo-program-implementation.py",
      "087.1139-stop-program.py",
      "105.1804-current-executable-name.py",
      "145.1822-print-log-line-with-datetime.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "import:tempfile": [
      "138.2161-create-temp-file.py",
      "139.2162-create-temp-directory.py"
    ],
    "import:threading": [
      "033.1420-atomically-read-and-update-variable.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "import:time": [
      "045.570-pause-execution-for-5-seconds.py",
      "125.2167-measure-function-call-duration.py"
    ],
    "import:timeit": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "import:urllib": [
      "102.2173-load-from-http-get-request-into-a-file.py"
    ],
    "import:urllib.request": [
      "101.2172-load-from-http-get-request-into-a-string.py"
    ],
    "import:urllib:parse": [
      "174.2687-make-http-post-request.py"
    ],
    "import:urllib:request": [
      "174.2687-make-http-post-request.py"
    ],
    "import:webbrowser": [
      "164.2169-open-url-in-default-browser.py"
    ],
    "import_module:Queue": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "import_module:__future__": [
      "001.3-print-hello-world.py",
      "068.2271-create-a-bitset.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "import_module:bisect": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "import_module:collections": [
      "040.2279-graph-with-adjacency-lists.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "import_module:dataclasses": [
      "005.663-create-a-2d-point-data-structure.py"
    ],
    "import_module:datetime": [
      "061.576-get-current-date.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "115.2138-compare-dates.py",
      "184.2701-tomorrow.py"
    ],
    "import_module:enum": [
      "122.1454-declare-enumeration.py"
    ],
    "import_module:fractions": [
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py"
    ],
    "import_module:functools": [
      "037.671-currying.py"
    ],
    "import_module:glob": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "import_module:imp": [
      "127.2274-source-code-inclusion.py"
    ],
    "import_module:itertools": [
      "163.3177-print-list-elements-by-group-of-2.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "import_module:json": [
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py"
    ],
    "import_module:locale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "import_module:logging": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "import_module:lxml.etree": [
      "103.2276-load-xml-file-into-struct.py"
    ],
    "import_module:math": [
      "067.1426-binomial-coefficient-n-choose-k.py",
      "068.2271-create-a-bitset.py"
    ],
    "import_module:multiprocessing": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "import_module:numpy": [
      "027.193-create-a-3-dimensional-array.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "import_module:os": [
      "095.2140-get-file-size.py",
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py",
      "144.2145-check-if-file-exists.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "180.2612-list-files-in-directory.py"
    ],
    "import_module:pathlib": [
      "144.2915-check-if-file-exists.py",
      "155.2147-delete-file.py"
    ],
    "import_module:pympler.asizeof": [
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "import_module:pyxser": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "import_module:random": [
      "010.1478-shuffle-a-list.py",
      "010.182-shuffle-a-list.py",
      "011.47-pick-a-random-element-from-a-list.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py",
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py",
      "158.2163-random-sublist.py"
    ],
    "import_module:re": [
      "083.1805-regex-with-character-repetition.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "import_module:requests": [
      "183.3025-make-http-put-request.py"
    ],
    "import_module:socket": [
      "121.3029-udp-listen-and-read.py"
    ],
    "import_module:subprocess": [
      "111.2168-launch-other-program.py"
    ],
    "import_module:sys": [
      "059.668-write-to-standard-error-stream.py",
      "060.1084-read-command-line-argument.py",
      "071.379-echo-program-implementation.py",
      "087.1139-stop-program.py",
      "105.1804-current-executable-name.py",
      "145.1822-print-log-line-with-datetime.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "import_module:tempfile": [
      "138.2161-create-temp-file.py",
      "139.2162-create-temp-directory.py"
    ],
    "import_module:threading": [
      "033.1420-atomically-read-and-update-variable.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "import_module:time": [
      "045.570-pause-execution-for-5-seconds.py",
      "125.2167-measure-function-call-duration.py"
    ],
    "import_module:timeit": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "import_module:urllib": [
      "102.2173-load-from-http-get-request-into-a-file.py",
      "174.2687-make-http-post-request.py"
    ],
    "import_module:urllib.request": [
      "101.2172-load-from-http-get-request-into-a-string.py"
    ],
    "import_module:webbrowser": [
      "164.2169-open-url-in-default-browser.py"
    ],
    "import_name:Enum": [
      "122.1454-declare-enumeration.py"
    ],
    "import_name:Path": [
      "144.2915-check-if-file-exists.py"
    ],
    "import_name:Pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "import_name:dataclass": [
      "005.663-create-a-2d-point-data-structure.py"
    ],
    "import_name:date": [
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "184.2701-tomorrow.py"
    ],
    "import_name:defaultdict": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "import_name:deque": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "import_name:division": [
      "068.2271-create-a-bitset.py"
    ],
    "import_name:gcd": [
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py"
    ],
    "import_name:namedtuple": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "import_name:parse": [
      "174.2687-make-http-post-request.py"
    ],
    "import_name:partial": [
      "037.671-currying.py"
    ],
    "import_name:print_function": [
      "001.3-print-hello-world.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "import_name:request": [
      "174.2687-make-http-post-request.py"
    ],
    "import_name:shuffle": [
      "010.182-shuffle-a-list.py"
    ],
    "import_name:tee": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "import_name:timedelta": [
      "184.2701-tomorrow.py"
    ],
    "index:-1": [
      "165.2149-last-element-of-list.py"
    ],
    "index:0": [
      "105.1804-current-executable-name.py",
      "168.2277-trim-suffix.py"
    ],
    "index:1": [
      "060.1084-read-command-line-argument.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "index:column": [
      "043.676-break-outer-loop.py"
    ],
    "index:i": [
      "029.199-remove-item-from-list-by-its-index.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "187.3261-disjoint-set.py"
    ],
    "index:k": [
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "172.2442-insert-entry-in-map.py"
    ],
    "index:l1": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "index:l2": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "index:row": [
      "043.676-break-outer-loop.py"
    ],
    "infinite_while": [
      "050.572-make-an-infinite-loop.py",
      "078.1089-do-while-loop.py",
      "121.3029-udp-listen-and-read.py"
    ],
    "instance_method:__init__": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "instance_method:__str__": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "instance_method:find_set": [
      "187.3261-disjoint-set.py"
    ],
    "instance_method:is_same_set": [
      "187.3261-disjoint-set.py"
    ],
    "instance_method:make_path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "instance_method:union_set": [
      "187.3261-disjoint-set.py"
    ],
    "instance_method:x": [
      "090.1099-read-only-outside.py"
    ],
    "lambda_function": [
      "028.350-sort-by-a-property.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py"
    ],
    "literal:-1": [
      "019.1983-reverse-a-list.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "165.2149-last-element-of-list.py"
    ],
    "literal:-5": [
      "047.198-extract-string-suffix.py"
    ],
    "literal:0": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "031.188-recursive-factorial-simple.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "105.1804-current-executable-name.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "168.2277-trim-suffix.py",
      "186.2699-exit-program-cleanly.py",
      "187.3261-disjoint-set.py"
    ],
    "literal:0.5": [
      "081.2270-round-floating-point-number-to-integer.py"
    ],
    "literal:1": [
      "008.39-initialize-a-new-map-associative-array.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "031.188-recursive-factorial-simple.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "060.1084-read-command-line-argument.py",
      "071.379-echo-program-implementation.py",
      "087.1139-stop-program.py",
      "122.1454-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "168.2277-trim-suffix.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "184.2701-tomorrow.py"
    ],
    "literal:10": [
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py"
    ],
    "literal:1000000": [
      "088.2143-allocate-1m-bytes.py"
    ],
    "literal:1001": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "literal:1024": [
      "121.3029-udp-listen-and-read.py"
    ],
    "literal:16": [
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "literal:1j": [
      "077.1093-complex-number.py"
    ],
    "literal:2": [
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "008.39-initialize-a-new-map-associative-array.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "077.1093-complex-number.py",
      "122.1454-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "literal:2016": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "literal:247": [
      "064.274-big-integer--value-3-power-247.py"
    ],
    "literal:28": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "literal:3": [
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "064.274-big-integer--value-3-power-247.py",
      "122.1454-declare-enumeration.py"
    ],
    "literal:30.0": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "literal:32": [
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "literal:3j": [
      "077.1093-complex-number.py"
    ],
    "literal:4": [
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py"
    ],
    "literal:42": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "literal:5": [
      "043.2733-break-outer-loop.py",
      "045.570-pause-execution-for-5-seconds.py",
      "046.191-extract-beginning-of-string-prefix.py"
    ],
    "literal:6": [
      "043.2733-break-outer-loop.py",
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "literal:7": [
      "043.2733-break-outer-loop.py"
    ],
    "literal:8": [
      "043.2733-break-outer-loop.py"
    ],
    "literal:8.0": [
      "068.2271-create-a-bitset.py"
    ],
    "literal:9": [
      "043.2733-break-outer-loop.py",
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "literal:Dict": [
      "008.39-initialize-a-new-map-associative-array.py",
      "183.3025-make-http-put-request.py"
    ],
    "literal:False": [
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py"
    ],
    "literal:List": [
      "043.2733-break-outer-loop.py",
      "111.2168-launch-other-program.py",
      "119.3263-deduplicate-list.py",
      "159.2281-trie.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "187.3261-disjoint-set.py"
    ],
    "literal:None": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "104.3264-save-object-into-xml-file.py",
      "131.2083-successive-conditions.py",
      "140.2156-delete-map-entry.py",
      "159.2281-trie.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "literal:Str": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "008.39-initialize-a-new-map-associative-array.py",
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "024.664-assign-to-string-the-japanese-word-.py",
      "025.195-send-a-value-to-another-thread.py",
      "041.187-reverse-a-string.py",
      "048.210-multi-line-string-literal.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "065.1085-format-decimal-number.py",
      "071.379-echo-program-implementation.py",
      "076.1083-binary-digits-from-an-integer.py",
      "083.1805-regex-with-character-repetition.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "089.1097-handle-invalid-argument.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "103.2276-load-xml-file-into-struct.py",
      "104.3264-save-object-into-xml-file.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "110.1455-check-if-string-is-blank.py",
      "111.2168-launch-other-program.py",
      "116.1257-remove-occurrences-of-word-from-string.py",
      "119.3263-deduplicate-list.py",
      "120.1479-read-integer-from-stdin.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "126.2137-multiple-return-values.py",
      "127.2274-source-code-inclusion.py",
      "132.2040-measure-duration-of-procedure-execution.py",
      "145.1822-print-log-line-with-datetime.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "146.2739-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "150.2154-remove-trailing-slash.py",
      "153.1980-concatenate-string-with-integer.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "156.2148-format-integer-with-zero-padding.py",
      "157.2150-declare-constant-string.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "174.2687-make-http-post-request.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "179.2689-get-center-of-a-rectangle.py",
      "182.2658-quine-program.py",
      "183.3025-make-http-put-request.py"
    ],
    "literal:True": [
      "025.195-send-a-value-to-another-thread.py",
      "050.572-make-an-infinite-loop.py",
      "078.1089-do-while-loop.py",
      "121.3029-udp-listen-and-read.py",
      "126.2137-multiple-return-values.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "literal:Tuple": [
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "126.2137-multiple-return-values.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "loop:for": [
      "002.11-print-hello-10-times.py",
      "006.32-iterate-over-list-values.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "020.573-return-two-values.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "loop:while": [
      "050.572-make-an-infinite-loop.py",
      "078.1089-do-while-loop.py",
      "121.3029-udp-listen-and-read.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "loop_with_early_exit:for:return": [
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "loop_with_early_exit:while:break": [
      "078.1089-do-while-loop.py"
    ],
    "loop_with_late_exit:for": [
      "002.11-print-hello-10-times.py",
      "006.32-iterate-over-list-values.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "020.573-return-two-values.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "loop_with_late_exit:while": [
      "050.572-make-an-infinite-loop.py",
      "121.3029-udp-listen-and-read.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method:__init__": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "method:__str__": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method:find_set": [
      "187.3261-disjoint-set.py"
    ],
    "method:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method:is_same_set": [
      "187.3261-disjoint-set.py"
    ],
    "method:make_path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "method:union_set": [
      "187.3261-disjoint-set.py"
    ],
    "method:x": [
      "090.1099-read-only-outside.py"
    ],
    "method_call:Lock": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "method_call:Path": [
      "155.2147-delete-file.py"
    ],
    "method_call:Random": [
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py"
    ],
    "method_call:Request": [
      "174.2687-make-http-post-request.py"
    ],
    "method_call:TemporaryDirectory": [
      "139.2162-create-temp-directory.py"
    ],
    "method_call:TemporaryFile": [
      "138.2161-create-temp-file.py"
    ],
    "method_call:Timer": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "method_call:abspath": [
      "107.2139-get-folder-containing-current-program.py"
    ],
    "method_call:acquire": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "method_call:add": [
      "040.2279-graph-with-adjacency-lists.py",
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method_call:append": [
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "method_call:apply_async": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "method_call:array": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method_call:asizeof": [
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "method_call:astype": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method_call:atof": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "method_call:basicConfig": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call:bind": [
      "121.3029-udp-listen-and-read.py"
    ],
    "method_call:bisect_left": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "method_call:call": [
      "111.2168-launch-other-program.py"
    ],
    "method_call:ceil": [
      "068.2271-create-a-bitset.py"
    ],
    "method_call:chain": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "method_call:choice": [
      "011.47-pick-a-random-element-from-a-list.py"
    ],
    "method_call:compile": [
      "083.1805-regex-with-character-repetition.py"
    ],
    "method_call:count": [
      "082.1096-count-substring-occurrences.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py"
    ],
    "method_call:decode": [
      "041.187-reverse-a-string.py"
    ],
    "method_call:dirname": [
      "107.2139-get-folder-containing-current-program.py"
    ],
    "method_call:dump": [
      "092.1100-save-object-into-json-file.py"
    ],
    "method_call:encode": [
      "041.187-reverse-a-string.py",
      "174.2687-make-http-post-request.py"
    ],
    "method_call:endswith": [
      "097.1095-check-string-suffix.py",
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "method_call:exists": [
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py"
    ],
    "method_call:exit": [
      "087.1139-stop-program.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "method_call:extend": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method_call:factorial": [
      "067.1426-binomial-coefficient-n-choose-k.py"
    ],
    "method_call:find": [
      "062.1091-find-substring-position.py"
    ],
    "method_call:find_set": [
      "187.3261-disjoint-set.py"
    ],
    "method_call:format": [
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "065.1085-format-decimal-number.py",
      "076.1083-binary-digits-from-an-integer.py",
      "153.1980-concatenate-string-with-integer.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "method_call:from_str": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method_call:fromhex": [
      "176.2614-hex-string-to-byte-array.py"
    ],
    "method_call:fromtimestamp": [
      "098.2142-epoch-seconds-to-date-object.py"
    ],
    "method_call:getLogger": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call:getcwd": [
      "106.2039-get-program-working-directory.py"
    ],
    "method_call:getsize": [
      "095.2140-get-file-size.py"
    ],
    "method_call:glob": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "method_call:hex": [
      "175.2613-bytes-to-hex-string.py"
    ],
    "method_call:index": [
      "020.573-return-two-values.py"
    ],
    "method_call:info": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call:insert": [
      "044.190-insert-element-in-list.py"
    ],
    "method_call:is_same_set": [
      "187.3261-disjoint-set.py"
    ],
    "method_call:isdigit": [
      "137.1823-check-if-string-contains-only-digits.py"
    ],
    "method_call:isoformat": [
      "099.2693-format-date-yyyy-mm-dd.py"
    ],
    "method_call:items": [
      "013.574-iterate-over-map-keys-and-values.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py"
    ],
    "method_call:join": [
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "071.379-echo-program-implementation.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method_call:listdir": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "180.2612-list-files-in-directory.py"
    ],
    "method_call:load": [
      "091.1098-load-json-file-into-struct.py"
    ],
    "method_call:load_module": [
      "127.2274-source-code-inclusion.py"
    ],
    "method_call:lower": [
      "133.2160-case-insensitive-string-contains.py"
    ],
    "method_call:lstrip": [
      "167.3175-trim-prefix.py"
    ],
    "method_call:make_path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "method_call:map": [
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "method_call:match": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "method_call:matmul": [
      "188.3284-matrix-multiplication.py"
    ],
    "method_call:now": [
      "061.576-get-current-date.py"
    ],
    "method_call:open": [
      "164.2169-open-url-in-default-browser.py"
    ],
    "method_call:parse": [
      "103.2276-load-xml-file-into-struct.py"
    ],
    "method_call:perf_counter": [
      "125.2167-measure-function-call-duration.py"
    ],
    "method_call:pop": [
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "140.2156-delete-map-entry.py"
    ],
    "method_call:popleft": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "method_call:put": [
      "025.195-send-a-value-to-another-thread.py",
      "183.3025-make-http-put-request.py"
    ],
    "method_call:randint": [
      "015.184-pick-uniformly-a-random-integer-in-ab.py"
    ],
    "method_call:randrange": [
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py"
    ],
    "method_call:read": [
      "058.665-extract-file-content-to-a-string.py",
      "101.2172-load-from-http-get-request-into-a-string.py"
    ],
    "method_call:readlines": [
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "method_call:recvfrom": [
      "121.3029-udp-listen-and-read.py"
    ],
    "method_call:release": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "method_call:remove": [
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "method_call:replace": [
      "063.1088-replace-fragment-of-a-string.py",
      "116.1257-remove-occurrences-of-word-from-string.py"
    ],
    "method_call:reverse": [
      "019.3164-reverse-a-list.py"
    ],
    "method_call:rsplit": [
      "168.2277-trim-suffix.py"
    ],
    "method_call:rstrip": [
      "150.2154-remove-trailing-slash.py",
      "168.3174-trim-suffix.py"
    ],
    "method_call:sample": [
      "158.2163-random-sublist.py"
    ],
    "method_call:serialize": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "method_call:setlocale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "method_call:shuffle": [
      "010.1478-shuffle-a-list.py"
    ],
    "method_call:sleep": [
      "045.570-pause-execution-for-5-seconds.py"
    ],
    "method_call:socket": [
      "121.3029-udp-listen-and-read.py"
    ],
    "method_call:sort": [
      "100.1142-sort-by-a-comparator.py"
    ],
    "method_call:split": [
      "049.242-split-a-space-separated-string.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "method_call:splitext": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "method_call:start": [
      "025.195-send-a-value-to-another-thread.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "method_call:startswith": [
      "096.1094-check-string-prefix.py",
      "167.2611-trim-prefix.py"
    ],
    "method_call:strftime": [
      "099.1429-format-date-yyyy-mm-dd.py"
    ],
    "method_call:strip": [
      "110.1455-check-if-string-is-blank.py"
    ],
    "method_call:sub": [
      "147.2171-remove-all-non-ascii-characters.py"
    ],
    "method_call:timeit": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "method_call:today": [
      "099.2693-format-date-yyyy-mm-dd.py",
      "184.2701-tomorrow.py"
    ],
    "method_call:uniform": [
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py"
    ],
    "method_call:unlink": [
      "155.2147-delete-file.py"
    ],
    "method_call:urlencode": [
      "174.2687-make-http-post-request.py"
    ],
    "method_call:urlopen": [
      "101.2172-load-from-http-get-request-into-a-string.py",
      "174.2687-make-http-post-request.py"
    ],
    "method_call:urlretrieve": [
      "102.2173-load-from-http-get-request-into-a-file.py"
    ],
    "method_call:values": [
      "052.666-check-if-map-contains-value.py"
    ],
    "method_call:view": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method_call:walk": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "method_call:zeros": [
      "027.193-create-a-3-dimensional-array.py"
    ],
    "method_call_object:Q": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "method_call_object:elements_unique": [
      "119.3263-deduplicate-list.py"
    ],
    "method_call_object:imp": [
      "127.2274-source-code-inclusion.py"
    ],
    "method_call_object:items": [
      "100.1142-sort-by-a-comparator.py",
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "method_call_object:json": [
      "092.1100-save-object-into-json-file.py"
    ],
    "method_call_object:locale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "method_call_object:lock": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "method_call_object:logger": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call_object:logging": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call_object:m": [
      "140.2156-delete-map-entry.py"
    ],
    "method_call_object:numpy": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "method_call_object:p": [
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "method_call_object:parse": [
      "174.2687-make-http-post-request.py"
    ],
    "method_call_object:path": [
      "155.2147-delete-file.py"
    ],
    "method_call_object:pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "method_call_object:q": [
      "025.195-send-a-value-to-another-thread.py",
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "method_call_object:random": [
      "010.1478-shuffle-a-list.py",
      "011.47-pick-a-random-element-from-a-list.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py"
    ],
    "method_call_object:s": [
      "041.187-reverse-a-string.py",
      "044.190-insert-element-in-list.py",
      "168.2277-trim-suffix.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "method_call_object:seen": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method_call_object:self": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "method_call_object:sock": [
      "121.3029-udp-listen-and-read.py"
    ],
    "method_call_object:stack": [
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method_call_object:subprocess": [
      "111.2168-launch-other-program.py"
    ],
    "method_call_object:sys": [
      "087.1139-stop-program.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "method_call_object:t": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "method_call_object:time": [
      "045.570-pause-execution-for-5-seconds.py"
    ],
    "method_call_object:timer": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "method_call_object:unique_set": [
      "119.3263-deduplicate-list.py"
    ],
    "method_call_object:webbrowser": [
      "164.2169-open-url-in-default-browser.py"
    ],
    "method_call_object:x": [
      "019.3164-reverse-a-list.py"
    ],
    "method_call_without_result:acquire": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "method_call_without_result:add": [
      "040.2279-graph-with-adjacency-lists.py",
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method_call_without_result:append": [
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "method_call_without_result:apply_async": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "method_call_without_result:basicConfig": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call_without_result:bind": [
      "121.3029-udp-listen-and-read.py"
    ],
    "method_call_without_result:call": [
      "111.2168-launch-other-program.py"
    ],
    "method_call_without_result:choice": [
      "011.47-pick-a-random-element-from-a-list.py"
    ],
    "method_call_without_result:dump": [
      "092.1100-save-object-into-json-file.py"
    ],
    "method_call_without_result:exit": [
      "087.1139-stop-program.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "method_call_without_result:extend": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "method_call_without_result:info": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "method_call_without_result:insert": [
      "044.190-insert-element-in-list.py"
    ],
    "method_call_without_result:make_path": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "method_call_without_result:map": [
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "method_call_without_result:open": [
      "164.2169-open-url-in-default-browser.py"
    ],
    "method_call_without_result:pop": [
      "140.2156-delete-map-entry.py"
    ],
    "method_call_without_result:put": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "method_call_without_result:randint": [
      "015.184-pick-uniformly-a-random-integer-in-ab.py"
    ],
    "method_call_without_result:remove": [
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "method_call_without_result:reverse": [
      "019.3164-reverse-a-list.py"
    ],
    "method_call_without_result:setlocale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "method_call_without_result:shuffle": [
      "010.1478-shuffle-a-list.py"
    ],
    "method_call_without_result:sleep": [
      "045.570-pause-execution-for-5-seconds.py"
    ],
    "method_call_without_result:sort": [
      "100.1142-sort-by-a-comparator.py"
    ],
    "method_call_without_result:start": [
      "025.195-send-a-value-to-another-thread.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "method_call_without_result:uniform": [
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py"
    ],
    "method_call_without_result:unlink": [
      "155.2147-delete-file.py"
    ],
    "method_chaining": [
      "154.2292-halfway-between-two-hex-color-codes.py",
      "174.2687-make-http-post-request.py"
    ],
    "modulo_operator": [
      "182.2658-quine-program.py"
    ],
    "multiplication_operator": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "031.188-recursive-factorial-simple.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "075.675-compute-lcm.py",
      "077.1093-complex-number.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "negative_index:-1": [
      "165.2149-last-element-of-list.py"
    ],
    "nested_for:1": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "020.573-return-two-values.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "nested_for:4": [
      "043.2733-break-outer-loop.py"
    ],
    "nested_function:f": [
      "037.671-currying.py"
    ],
    "nested_index:2": [
      "043.676-break-outer-loop.py"
    ],
    "null_operation": [
      "003.2372-create-a-procedure.py",
      "034.625-create-a-set-of-objects.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.676-break-outer-loop.py",
      "050.572-make-an-infinite-loop.py"
    ],
    "parallel_assignment:2": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "121.3029-udp-listen-and-read.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "183.3025-make-http-put-request.py",
      "187.3261-disjoint-set.py"
    ],
    "parallel_assignment:3": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "parallel_assignment:4": [
      "122.1453-declare-enumeration.py"
    ],
    "raise:BreakOuterLoop": [
      "043.676-break-outer-loop.py"
    ],
    "raise:Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "raise:ValueError": [
      "089.1097-handle-invalid-argument.py"
    ],
    "range:10": [
      "002.11-print-hello-10-times.py"
    ],
    "range:1:1001": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "range:1:6:2": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "range:1:_:2": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "range:4": [
      "122.1453-declare-enumeration.py"
    ],
    "range:size": [
      "187.3261-disjoint-set.py"
    ],
    "recursive_function:DFS": [
      "018.2084-depth-first-traversing-of-a-tree.py"
    ],
    "recursive_function:dfs": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "recursive_function:f": [
      "031.188-recursive-factorial-simple.py"
    ],
    "replication_operator:List": [
      "187.3261-disjoint-set.py"
    ],
    "replication_operator:Str": [
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py"
    ],
    "return": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "020.573-return-two-values.py",
      "031.188-recursive-factorial-simple.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "043.2733-break-outer-loop.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "073.673-create-a-factory.py",
      "090.1099-read-only-outside.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "126.2137-multiple-return-values.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "187.3261-disjoint-set.py"
    ],
    "return:1": [
      "031.188-recursive-factorial-simple.py"
    ],
    "return:False": [
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py"
    ],
    "return:None": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "043.2733-break-outer-loop.py"
    ],
    "return:add": [
      "037.671-currying.py"
    ],
    "return:i": [
      "187.3261-disjoint-set.py"
    ],
    "single_assignment:CLUBS": [
      "122.1454-declare-enumeration.py"
    ],
    "single_assignment:DIAMONDS": [
      "122.1454-declare-enumeration.py"
    ],
    "single_assignment:G": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "single_assignment:HEARTS": [
      "122.1454-declare-enumeration.py"
    ],
    "single_assignment:L": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "single_assignment:PLANET": [
      "157.2150-declare-constant-string.py"
    ],
    "single_assignment:Point": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "single_assignment:Q": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "single_assignment:SPADES": [
      "122.1454-declare-enumeration.py"
    ],
    "single_assignment:UDP_IP": [
      "121.3029-udp-listen-and-read.py"
    ],
    "single_assignment:a": [
      "104.3264-save-object-into-xml-file.py",
      "176.2614-hex-string-to-byte-array.py"
    ],
    "single_assignment:ab": [
      "166.2272-concatenate-two-lists.py"
    ],
    "single_assignment:b": [
      "096.1094-check-string-prefix.py",
      "097.1095-check-string-suffix.py",
      "104.3264-save-object-into-xml-file.py",
      "114.2273-test-deep-equality.py",
      "115.2138-compare-dates.py",
      "137.1823-check-if-string-contains-only-digits.py",
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py",
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "single_assignment:blank": [
      "110.1455-check-if-string-is-blank.py"
    ],
    "single_assignment:buf": [
      "088.2143-allocate-1m-bytes.py"
    ],
    "single_assignment:c": [
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "104.3264-save-object-into-xml-file.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "single_assignment:c1": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "single_assignment:c2": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "single_assignment:center": [
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "single_assignment:chunks": [
      "049.242-split-a-space-separated-string.py"
    ],
    "single_assignment:content_type": [
      "183.3025-make-http-put-request.py"
    ],
    "single_assignment:count": [
      "082.1096-count-substring-occurrences.py"
    ],
    "single_assignment:d": [
      "061.576-get-current-date.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py"
    ],
    "single_assignment:data": [
      "174.2687-make-http-post-request.py",
      "183.3025-make-http-put-request.py"
    ],
    "single_assignment:dir": [
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py"
    ],
    "single_assignment:duration": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "single_assignment:elements": [
      "119.3263-deduplicate-list.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "single_assignment:elements_unique": [
      "119.3263-deduplicate-list.py"
    ],
    "single_assignment:extensions": [
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "single_assignment:f": [
      "146.1825-convert-string-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py"
    ],
    "single_assignment:file": [
      "138.2161-create-temp-file.py"
    ],
    "single_assignment:filtered_files": [
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "single_assignment:foo": [
      "127.2274-source-code-inclusion.py"
    ],
    "single_assignment:headers": [
      "183.3025-make-http-put-request.py"
    ],
    "single_assignment:i": [
      "022.243-convert-string-to-integer.py",
      "062.1091-find-substring-position.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "single_assignment:input_var": [
      "120.1479-read-integer-from-stdin.py"
    ],
    "single_assignment:items": [
      "028.350-sort-by-a-property.py",
      "134.1850-create-a-new-list.py"
    ],
    "single_assignment:lines": [
      "058.665-extract-file-content-to-a-string.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "single_assignment:lock": [
      "033.1420-atomically-read-and-update-variable.py"
    ],
    "single_assignment:logger": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "single_assignment:n": [
      "109.2280-number-of-bytes-of-a-type.py",
      "117.1297-get-list-size.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "169.2233-string-length.py",
      "170.2275-get-map-size.py"
    ],
    "single_assignment:newlist": [
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py"
    ],
    "single_assignment:ok": [
      "039.571-check-if-string-contains-a-word.py",
      "133.2160-case-insensitive-string-contains.py"
    ],
    "single_assignment:p": [
      "150.2154-remove-trailing-slash.py",
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "single_assignment:path": [
      "155.2147-delete-file.py"
    ],
    "single_assignment:pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "single_assignment:position": [
      "043.676-break-outer-loop.py"
    ],
    "single_assignment:q": [
      "025.195-send-a-value-to-another-thread.py",
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "single_assignment:r": [
      "083.1805-regex-with-character-repetition.py",
      "183.3025-make-http-put-request.py"
    ],
    "single_assignment:rand": [
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py"
    ],
    "single_assignment:req": [
      "174.2687-make-http-post-request.py"
    ],
    "single_assignment:resp": [
      "174.2687-make-http-post-request.py"
    ],
    "single_assignment:s": [
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "024.664-assign-to-string-the-japanese-word-.py",
      "048.210-multi-line-string-literal.py",
      "054.241-compute-sum-of-integers.py",
      "055.575-convert-integer-to-string.py",
      "065.1085-format-decimal-number.py",
      "076.1083-binary-digits-from-an-integer.py",
      "101.2172-load-from-http-get-request-into-a-string.py",
      "105.1804-current-executable-name.py",
      "142.2151-hexadecimal-digits-of-an-integer.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "152.2153-turn-a-character-into-a-string.py",
      "156.2148-format-integer-with-zero-padding.py",
      "175.2613-bytes-to-hex-string.py",
      "182.2658-quine-program.py"
    ],
    "single_assignment:s2": [
      "116.1257-remove-occurrences-of-word-from-string.py"
    ],
    "single_assignment:seen": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "single_assignment:self": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "single_assignment:ser": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "single_assignment:sock": [
      "121.3029-udp-listen-and-read.py"
    ],
    "single_assignment:stack": [
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "single_assignment:t": [
      "025.195-send-a-value-to-another-thread.py",
      "038.186-extract-a-substring.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "153.1980-concatenate-string-with-integer.py",
      "167.2611-trim-prefix.py",
      "167.3175-trim-prefix.py",
      "168.2277-trim-suffix.py",
      "168.3174-trim-suffix.py"
    ],
    "single_assignment:t1": [
      "125.2167-measure-function-call-duration.py"
    ],
    "single_assignment:t2": [
      "125.2167-measure-function-call-duration.py"
    ],
    "single_assignment:td": [
      "139.2162-create-temp-directory.py"
    ],
    "single_assignment:timer": [
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "single_assignment:tst": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "single_assignment:unique_set": [
      "119.3263-deduplicate-list.py"
    ],
    "single_assignment:vertex": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "single_assignment:x": [
      "008.39-initialize-a-new-map-associative-array.py",
      "019.197-reverse-a-list.py",
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "027.193-create-a-3-dimensional-array.py",
      "033.1420-atomically-read-and-update-variable.py",
      "034.625-create-a-set-of-objects.py",
      "060.1084-read-command-line-argument.py",
      "064.274-big-integer--value-3-power-247.py",
      "068.2271-create-a-bitset.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "077.1093-complex-number.py",
      "091.1098-load-json-file-into-struct.py",
      "095.2140-get-file-size.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "103.2276-load-xml-file-into-struct.py",
      "119.1253-deduplicate-list.py",
      "165.2149-last-element-of-list.py",
      "180.2612-list-files-in-directory.py"
    ],
    "single_assignment:x2": [
      "063.1088-replace-fragment-of-a-string.py"
    ],
    "single_assignment:y": [
      "019.1983-reverse-a-list.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "057.260-filter-list.py",
      "057.3173-filter-list.py",
      "077.1093-complex-number.py",
      "079.1090-convert-integer-to-floating-point-number.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "118.1254-list-to-set.py",
      "158.2163-random-sublist.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "single_assignment:z": [
      "066.672-big-integer-exponentiation.py"
    ],
    "slice:-5::": [
      "047.198-extract-string-suffix.py"
    ],
    "slice:1::": [
      "040.2279-graph-with-adjacency-lists.py",
      "071.379-echo-program-implementation.py",
      "162.2164-execute-procedures-depending-on-options.py"
    ],
    "slice:1::2": [
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "slice::-1:": [
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "slice::5:": [
      "046.191-extract-beginning-of-string-prefix.py"
    ],
    "slice:::-1": [
      "019.1983-reverse-a-list.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py"
    ],
    "slice:::2": [
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "slice:_::": [
      "167.2611-trim-prefix.py"
    ],
    "slice:i:_:": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "slice:i:j:": [
      "038.186-extract-a-substring.py"
    ],
    "slice:p:_:": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "slice_lower:": [
      "019.1983-reverse-a-list.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "slice_lower:-5": [
      "047.198-extract-string-suffix.py"
    ],
    "slice_lower:1": [
      "040.2279-graph-with-adjacency-lists.py",
      "071.379-echo-program-implementation.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "slice_lower:_": [
      "167.2611-trim-prefix.py"
    ],
    "slice_lower:i": [
      "038.186-extract-a-substring.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "slice_lower:p": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "slice_step:": [
      "038.186-extract-a-substring.py",
      "040.2279-graph-with-adjacency-lists.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "071.379-echo-program-implementation.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "167.2611-trim-prefix.py"
    ],
    "slice_step:-1": [
      "019.1983-reverse-a-list.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py"
    ],
    "slice_step:2": [
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "slice_upper:": [
      "019.1983-reverse-a-list.py",
      "040.2279-graph-with-adjacency-lists.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "047.198-extract-string-suffix.py",
      "071.379-echo-program-implementation.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "167.2611-trim-prefix.py"
    ],
    "slice_upper:-1": [
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "slice_upper:5": [
      "046.191-extract-beginning-of-string-prefix.py"
    ],
    "slice_upper:_": [
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "slice_upper:j": [
      "038.186-extract-a-substring.py"
    ],
    "string_formatting_operator": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "suggest_constant_definition": [
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "121.3029-udp-listen-and-read.py",
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "swap": [
      "021.84-swap-values-of-variables-a-and-b.py"
    ],
    "try": [
      "033.1420-atomically-read-and-update-variable.py",
      "042.1264-continue-outer-loop.py",
      "043.676-break-outer-loop.py"
    ],
    "try_except:BreakOuterLoop": [
      "043.676-break-outer-loop.py"
    ],
    "try_except:Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "try_raise:BreakOuterLoop": [
      "043.676-break-outer-loop.py"
    ],
    "try_raise:Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "unary_operator:Not": [
      "078.1089-do-while-loop.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "187.3261-disjoint-set.py"
    ],
    "update:Q:n": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "update:a:b": [
      "021.84-swap-values-of-variables-a-and-b.py"
    ],
    "update:b:a": [
      "021.84-swap-values-of-variables-a-and-b.py"
    ],
    "update:elements:c": [
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "update:elements:x": [
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "update:elements_unique:i": [
      "119.3263-deduplicate-list.py"
    ],
    "update:items:x": [
      "028.350-sort-by-a-property.py",
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "update:m:None": [
      "140.2156-delete-map-entry.py"
    ],
    "update:m:k": [
      "140.2156-delete-map-entry.py"
    ],
    "update:p:-1": [
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "update:s:i": [
      "044.190-insert-element-in-list.py"
    ],
    "update:s:x": [
      "044.190-insert-element-in-list.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "update:seen:vertex": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "update:self:numpy": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "update:unique_set:i": [
      "119.3263-deduplicate-list.py"
    ],
    "update_by_assignment:a:b": [
      "021.84-swap-values-of-variables-a-and-b.py"
    ],
    "update_by_assignment:b:a": [
      "021.84-swap-values-of-variables-a-and-b.py"
    ],
    "update_by_assignment:elements:c": [
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "update_by_assignment:elements:x": [
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "update_by_assignment:items:x": [
      "028.350-sort-by-a-property.py"
    ],
    "update_by_assignment:p:-1": [
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "update_by_assignment:self:numpy": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "update_by_assignment_with": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "update_by_assignment_with:astype": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "update_by_assignment_with:sorted": [
      "028.350-sort-by-a-property.py"
    ],
    "update_by_method_call:Q:n": [
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "update_by_method_call:elements_unique:i": [
      "119.3263-deduplicate-list.py"
    ],
    "update_by_method_call:items:x": [
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "update_by_method_call:m:None": [
      "140.2156-delete-map-entry.py"
    ],
    "update_by_method_call:m:k": [
      "140.2156-delete-map-entry.py"
    ],
    "update_by_method_call:s:i": [
      "044.190-insert-element-in-list.py"
    ],
    "update_by_method_call:s:x": [
      "044.190-insert-element-in-list.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "update_by_method_call:seen:vertex": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "update_by_method_call:unique_set:i": [
      "119.3263-deduplicate-list.py"
    ],
    "update_by_method_call_with:add": [
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "update_by_method_call_with:append": [
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "update_by_method_call_with:insert": [
      "044.190-insert-element-in-list.py"
    ],
    "update_by_method_call_with:pop": [
      "140.2156-delete-map-entry.py"
    ],
    "update_by_method_call_with:remove": [
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "update_with": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "update_with:add": [
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "update_with:append": [
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "update_with:astype": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "update_with:insert": [
      "044.190-insert-element-in-list.py"
    ],
    "update_with:pop": [
      "140.2156-delete-map-entry.py"
    ],
    "update_with:remove": [
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "update_with:sorted": [
      "028.350-sort-by-a-property.py"
    ],
    "while": [
      "050.572-make-an-infinite-loop.py",
      "078.1089-do-while-loop.py",
      "121.3029-udp-listen-and-read.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "yoda_comparison:In": [
      "108.1291-determine-if-variable-name-is-defined.py",
      "162.2164-execute-procedures-depending-on-options.py"
    ]
  },
  "taxons": {
    "call/composition": [
      "034.625-create-a-set-of-objects.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "043.2733-break-outer-loop.py",
      "053.1933-join-a-list-of-strings.py",
      "068.2271-create-a-bitset.py",
      "071.379-echo-program-implementation.py",
      "094.1101-print-type-of-variable.py",
      "107.2139-get-folder-containing-current-program.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.1253-deduplicate-list.py",
      "120.1479-read-integer-from-stdin.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "call/function": [
      "006.32-iterate-over-list-values.py",
      "010.182-shuffle-a-list.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "025.195-send-a-value-to-another-thread.py",
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "031.188-recursive-factorial-simple.py",
      "033.1420-atomically-read-and-update-variable.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "057.3173-filter-list.py",
      "073.673-create-a-factory.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "089.1097-handle-invalid-argument.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "104.3264-save-object-into-xml-file.py",
      "120.1479-read-integer-from-stdin.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "144.2915-check-if-file-exists.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "179.2689-get-center-of-a-rectangle.py",
      "184.2701-tomorrow.py",
      "189.3236-filter-and-transform-list.py"
    ],
    "call/function/builtin/any": [
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "call/function/builtin/bin": [
      "084.1940-count-bits-set-in-integer-binary-representation.py"
    ],
    "call/function/builtin/casting/bytearray": [
      "068.2271-create-a-bitset.py",
      "088.2143-allocate-1m-bytes.py"
    ],
    "call/function/builtin/casting/float": [
      "079.1090-convert-integer-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py",
      "146.2739-convert-string-to-floating-point-number.py"
    ],
    "call/function/builtin/casting/int": [
      "022.243-convert-string-to-integer.py",
      "068.2271-create-a-bitset.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "120.1479-read-integer-from-stdin.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call/function/builtin/casting/list": [
      "017.1103-create-a-tree-data-structure.py",
      "119.1253-deduplicate-list.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "call/function/builtin/casting/set": [
      "034.625-create-a-set-of-objects.py",
      "118.1254-list-to-set.py",
      "118.3266-list-to-set.py",
      "119.1253-deduplicate-list.py",
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "call/function/builtin/casting/str": [
      "055.575-convert-integer-to-string.py"
    ],
    "call/function/builtin/enumerate": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "call/function/builtin/filter": [
      "057.260-filter-list.py"
    ],
    "call/function/builtin/format": [
      "154.2292-halfway-between-two-hex-color-codes.py",
      "156.2148-format-integer-with-zero-padding.py"
    ],
    "call/function/builtin/hex": [
      "142.2151-hexadecimal-digits-of-an-integer.py"
    ],
    "call/function/builtin/input": [
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "call/function/builtin/issubclass": [
      "073.673-create-a-factory.py"
    ],
    "call/function/builtin/len": [
      "117.1297-get-list-size.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "167.2611-trim-prefix.py",
      "169.2233-string-length.py",
      "170.2275-get-map-size.py"
    ],
    "call/function/builtin/locals": [
      "108.1291-determine-if-variable-name-is-defined.py"
    ],
    "call/function/builtin/map": [
      "053.1933-join-a-list-of-strings.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "call/function/builtin/next": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "call/function/builtin/open": [
      "058.665-extract-file-content-to-a-string.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "call/function/builtin/print": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "037.671-currying.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "071.379-echo-program-implementation.py",
      "094.1101-print-type-of-variable.py",
      "094.1864-print-type-of-variable.py",
      "104.3264-save-object-into-xml-file.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "182.2658-quine-program.py"
    ],
    "call/function/builtin/range": [
      "002.11-print-hello-10-times.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "122.1453-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "187.3261-disjoint-set.py"
    ],
    "call/function/builtin/reversed": [
      "019.197-reverse-a-list.py"
    ],
    "call/function/builtin/sorted": [
      "028.350-sort-by-a-property.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py"
    ],
    "call/function/builtin/str": [
      "055.575-convert-integer-to-string.py"
    ],
    "call/function/builtin/sum": [
      "054.241-compute-sum-of-integers.py"
    ],
    "call/function/builtin/type": [
      "094.1101-print-type-of-variable.py"
    ],
    "call/function/builtin/zip": [
      "040.2279-graph-with-adjacency-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "call/function/without_arguments": [
      "025.195-send-a-value-to-another-thread.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "034.625-create-a-set-of-objects.py",
      "042.1264-continue-outer-loop.py",
      "078.1089-do-while-loop.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "119.3263-deduplicate-list.py",
      "125.2167-measure-function-call-duration.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "131.2766-successive-conditions.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "call/method": [
      "010.1478-shuffle-a-list.py",
      "011.47-pick-a-random-element-from-a-list.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py",
      "025.195-send-a-value-to-another-thread.py",
      "027.193-create-a-3-dimensional-array.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "033.1420-atomically-read-and-update-variable.py",
      "040.2279-graph-with-adjacency-lists.py",
      "041.187-reverse-a-string.py",
      "045.570-pause-execution-for-5-seconds.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "058.665-extract-file-content-to-a-string.py",
      "061.576-get-current-date.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "068.2271-create-a-bitset.py",
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py",
      "083.1805-regex-with-character-repetition.py",
      "087.1139-stop-program.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "095.2140-get-file-size.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "101.2172-load-from-http-get-request-into-a-string.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "103.2276-load-xml-file-into-struct.py",
      "104.3264-save-object-into-xml-file.py",
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py",
      "109.2280-number-of-bytes-of-a-type.py",
      "111.2168-launch-other-program.py",
      "121.3029-udp-listen-and-read.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "125.2167-measure-function-call-duration.py",
      "127.2274-source-code-inclusion.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "132.2040-measure-duration-of-procedure-execution.py",
      "138.2161-create-temp-file.py",
      "139.2162-create-temp-directory.py",
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py",
      "145.1822-print-log-line-with-datetime.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "155.2147-delete-file.py",
      "158.2163-random-sublist.py",
      "164.2169-open-url-in-default-browser.py",
      "174.2687-make-http-post-request.py",
      "175.2613-bytes-to-hex-string.py",
      "176.2614-hex-string-to-byte-array.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "180.2612-list-files-in-directory.py",
      "183.3025-make-http-put-request.py",
      "184.2701-tomorrow.py",
      "185.2820-execute-function-in-30-seconds.py",
      "186.2699-exit-program-cleanly.py",
      "187.3261-disjoint-set.py",
      "188.3284-matrix-multiplication.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "call/method/chaining": [
      "154.2292-halfway-between-two-hex-color-codes.py",
      "174.2687-make-http-post-request.py"
    ],
    "call/method/dict/items": [
      "013.574-iterate-over-map-keys-and-values.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py"
    ],
    "call/method/dict/values": [
      "052.666-check-if-map-contains-value.py"
    ],
    "call/method/sequence/count": [
      "082.1096-count-substring-occurrences.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py"
    ],
    "call/method/sequence/index": [
      "020.573-return-two-values.py"
    ],
    "call/method/sequence/list/append": [
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "171.2446-add-an-element-at-the-end-of-a-list.py"
    ],
    "call/method/sequence/list/extend": [
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "call/method/sequence/list/insert": [
      "044.190-insert-element-in-list.py"
    ],
    "call/method/sequence/list/reverse": [
      "019.3164-reverse-a-list.py"
    ],
    "call/method/sequence/list/sort": [
      "100.1142-sort-by-a-comparator.py"
    ],
    "call/method/sequence/string/encode": [
      "041.187-reverse-a-string.py",
      "174.2687-make-http-post-request.py"
    ],
    "call/method/sequence/string/endswith": [
      "097.1095-check-string-suffix.py",
      "151.2166-remove-string-trailing-path-separator.py"
    ],
    "call/method/sequence/string/find": [
      "062.1091-find-substring-position.py"
    ],
    "call/method/sequence/string/format": [
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "065.1085-format-decimal-number.py",
      "076.1083-binary-digits-from-an-integer.py",
      "153.1980-concatenate-string-with-integer.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "call/method/sequence/string/isdigit": [
      "137.1823-check-if-string-contains-only-digits.py"
    ],
    "call/method/sequence/string/join": [
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "071.379-echo-program-implementation.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "call/method/sequence/string/lower": [
      "133.2160-case-insensitive-string-contains.py"
    ],
    "call/method/sequence/string/lstrip": [
      "167.3175-trim-prefix.py"
    ],
    "call/method/sequence/string/replace": [
      "063.1088-replace-fragment-of-a-string.py",
      "116.1257-remove-occurrences-of-word-from-string.py"
    ],
    "call/method/sequence/string/rsplit": [
      "168.2277-trim-suffix.py"
    ],
    "call/method/sequence/string/rstrip": [
      "150.2154-remove-trailing-slash.py",
      "168.3174-trim-suffix.py"
    ],
    "call/method/sequence/string/split": [
      "049.242-split-a-space-separated-string.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "call/method/sequence/string/startswith": [
      "096.1094-check-string-prefix.py",
      "167.2611-trim-prefix.py"
    ],
    "call/method/sequence/string/strip": [
      "110.1455-check-if-string-is-blank.py"
    ],
    "call/method/set/add": [
      "040.2279-graph-with-adjacency-lists.py",
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "call/method/set_or_list/pop": [
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "140.2156-delete-map-entry.py"
    ],
    "call/method/set_or_list/remove": [
      "135.2158-remove-item-from-list-by-its-value.py"
    ],
    "class": [
      "005.663-create-a-2d-point-data-structure.py",
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "034.625-create-a-set-of-objects.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.676-break-outer-loop.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "flow/assertion": [
      "123.2146-assert-condition.py"
    ],
    "flow/conditional": [
      "031.188-recursive-factorial-simple.py",
      "131.2766-successive-conditions.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "187.3261-disjoint-set.py"
    ],
    "flow/conditional/else": [
      "031.188-recursive-factorial-simple.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "187.3261-disjoint-set.py"
    ],
    "flow/conditional/else/if": [
      "131.2766-successive-conditions.py"
    ],
    "flow/conditional/guard": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "flow/conditional/no_else": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "020.573-return-two-values.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "073.673-create-a-factory.py",
      "078.1089-do-while-loop.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "187.3261-disjoint-set.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "flow/exception/catch/": [
      "043.676-break-outer-loop.py"
    ],
    "flow/exception/catch/Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "flow/exception/raise/": [
      "043.676-break-outer-loop.py"
    ],
    "flow/exception/raise/Exception": [
      "042.1264-continue-outer-loop.py"
    ],
    "flow/loop/exit/early/break": [
      "078.1089-do-while-loop.py"
    ],
    "flow/loop/exit/early/return": [
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "flow/loop/exit/late": [
      "002.11-print-hello-10-times.py",
      "006.32-iterate-over-list-values.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "020.573-return-two-values.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "050.572-make-an-infinite-loop.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "121.3029-udp-listen-and-read.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "flow/loop/for": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "020.573-return-two-values.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "flow/loop/for/arithmetic": [
      "002.11-print-hello-10-times.py"
    ],
    "flow/loop/for/arithmetic/start": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py"
    ],
    "flow/loop/for/elements": [
      "006.32-iterate-over-list-values.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.676-break-outer-loop.py",
      "119.3263-deduplicate-list.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "flow/loop/for/elements_and_indexes": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "020.573-return-two-values.py",
      "043.2733-break-outer-loop.py"
    ],
    "flow/loop/for/nested/1": [
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "020.573-return-two-values.py",
      "040.2279-graph-with-adjacency-lists.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "flow/loop/for/nested/4": [
      "043.2733-break-outer-loop.py"
    ],
    "flow/loop/while": [
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "flow/loop/while/infinite": [
      "050.572-make-an-infinite-loop.py",
      "078.1089-do-while-loop.py",
      "121.3029-udp-listen-and-read.py"
    ],
    "flow/null_operation": [
      "003.2372-create-a-procedure.py",
      "034.625-create-a-set-of-objects.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.676-break-outer-loop.py",
      "050.572-make-an-infinite-loop.py"
    ],
    "io/file/open": [
      "058.665-extract-file-content-to-a-string.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ],
    "io/standard/input": [
      "148.1829-read-list-of-integer-numbers-from-stdin.py"
    ],
    "io/standard/print": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "007.183-iterate-over-list-indexes-and-values.py",
      "013.574-iterate-over-map-keys-and-values.py",
      "037.671-currying.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "071.379-echo-program-implementation.py",
      "094.1101-print-type-of-variable.py",
      "094.1864-print-type-of-variable.py",
      "104.3264-save-object-into-xml-file.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "113.2157-iterate-over-map-entries-ordered-by-values.py",
      "119.3263-deduplicate-list.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "143.2256-iterate-alternatively-over-two-lists.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "182.2658-quine-program.py"
    ],
    "library/standard/__future__/division": [
      "068.2271-create-a-bitset.py"
    ],
    "library/standard/__future__/print_function": [
      "001.3-print-hello-world.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py"
    ],
    "library/standard/bisect": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py"
    ],
    "library/standard/collections/defaultdict": [
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "library/standard/collections/deque": [
      "129.2282-breadth-first-traversing-in-a-graph.py"
    ],
    "library/standard/collections/namedtuple": [
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "library/standard/dataclasses/dataclass": [
      "005.663-create-a-2d-point-data-structure.py"
    ],
    "library/standard/datetime": [
      "061.576-get-current-date.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "115.2138-compare-dates.py"
    ],
    "library/standard/datetime/date": [
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "184.2701-tomorrow.py"
    ],
    "library/standard/datetime/timedelta": [
      "184.2701-tomorrow.py"
    ],
    "library/standard/enum/Enum": [
      "122.1454-declare-enumeration.py"
    ],
    "library/standard/fractions/gcd": [
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py"
    ],
    "library/standard/functools/partial": [
      "037.671-currying.py"
    ],
    "library/standard/glob": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "library/standard/imp": [
      "127.2274-source-code-inclusion.py"
    ],
    "library/standard/itertools": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "library/standard/itertools/tee": [
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "library/standard/json": [
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py"
    ],
    "library/standard/locale": [
      "146.1825-convert-string-to-floating-point-number.py"
    ],
    "library/standard/logging": [
      "145.1822-print-log-line-with-datetime.py"
    ],
    "library/standard/math": [
      "067.1426-binomial-coefficient-n-choose-k.py",
      "068.2271-create-a-bitset.py"
    ],
    "library/standard/multiprocessing/Pool": [
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py"
    ],
    "library/standard/os": [
      "095.2140-get-file-size.py",
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py",
      "144.2145-check-if-file-exists.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "180.2612-list-files-in-directory.py"
    ],
    "library/standard/pathlib": [
      "155.2147-delete-file.py"
    ],
    "library/standard/pathlib/Path": [
      "144.2915-check-if-file-exists.py"
    ],
    "library/standard/random": [
      "010.1478-shuffle-a-list.py",
      "011.47-pick-a-random-element-from-a-list.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "015.184-pick-uniformly-a-random-integer-in-ab.py",
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py",
      "158.2163-random-sublist.py"
    ],
    "library/standard/random/shuffle": [
      "010.182-shuffle-a-list.py"
    ],
    "library/standard/re": [
      "083.1805-regex-with-character-repetition.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "library/standard/socket": [
      "121.3029-udp-listen-and-read.py"
    ],
    "library/standard/subprocess": [
      "111.2168-launch-other-program.py"
    ],
    "library/standard/sys": [
      "059.668-write-to-standard-error-stream.py",
      "060.1084-read-command-line-argument.py",
      "071.379-echo-program-implementation.py",
      "087.1139-stop-program.py",
      "105.1804-current-executable-name.py",
      "145.1822-print-log-line-with-datetime.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "186.2699-exit-program-cleanly.py"
    ],
    "library/standard/tempfile": [
      "138.2161-create-temp-file.py",
      "139.2162-create-temp-directory.py"
    ],
    "library/standard/threading": [
      "033.1420-atomically-read-and-update-variable.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "library/standard/time": [
      "045.570-pause-execution-for-5-seconds.py",
      "125.2167-measure-function-call-duration.py"
    ],
    "library/standard/timeit": [
      "132.2040-measure-duration-of-procedure-execution.py"
    ],
    "library/standard/urllib": [
      "102.2173-load-from-http-get-request-into-a-file.py"
    ],
    "library/standard/urllib.request": [
      "101.2172-load-from-http-get-request-into-a-string.py"
    ],
    "library/standard/urllib/parse": [
      "174.2687-make-http-post-request.py"
    ],
    "library/standard/urllib/request": [
      "174.2687-make-http-post-request.py"
    ],
    "library/standard/webbrowser": [
      "164.2169-open-url-in-default-browser.py"
    ],
    "library/third_party/Queue": [
      "025.195-send-a-value-to-another-thread.py"
    ],
    "library/third_party/lxml.etree": [
      "103.2276-load-xml-file-into-struct.py"
    ],
    "library/third_party/numpy": [
      "027.193-create-a-3-dimensional-array.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py"
    ],
    "library/third_party/pympler.asizeof": [
      "109.2280-number-of-bytes-of-a-type.py"
    ],
    "library/third_party/pyxser": [
      "104.3264-save-object-into-xml-file.py"
    ],
    "library/third_party/requests": [
      "183.3025-make-http-put-request.py"
    ],
    "operator/arithmetic/addition": [
      "037.671-currying.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "141.2159-iterate-in-sequence-over-two-lists.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "166.2272-concatenate-two-lists.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py",
      "184.2701-tomorrow.py"
    ],
    "operator/arithmetic/division": [
      "068.2271-create-a-bitset.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py"
    ],
    "operator/arithmetic/integer_division": [
      "067.1426-binomial-coefficient-n-choose-k.py",
      "075.675-compute-lcm.py",
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "operator/arithmetic/modulo": [
      "182.2658-quine-program.py"
    ],
    "operator/arithmetic/multiplication": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "031.188-recursive-factorial-simple.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "075.675-compute-lcm.py",
      "077.1093-complex-number.py",
      "161.2098-multiply-all-the-elements-of-a-list.py"
    ],
    "operator/arithmetic/power": [
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "064.274-big-integer--value-3-power-247.py",
      "066.672-big-integer-exponentiation.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py"
    ],
    "operator/arithmetic/substraction": [
      "031.188-recursive-factorial-simple.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "077.1093-complex-number.py",
      "125.2167-measure-function-call-duration.py"
    ],
    "operator/boolean/and": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "167.2611-trim-prefix.py",
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "operator/boolean/not": [
      "078.1089-do-while-loop.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "187.3261-disjoint-set.py"
    ],
    "operator/list/replication": [
      "187.3261-disjoint-set.py"
    ],
    "operator/matrix/multiplication": [
      "188.3171-matrix-multiplication.py"
    ],
    "operator/string/concatenation": [
      "003.19-create-a-procedure.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "operator/string/format": [
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "operator/string/replication": [
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py"
    ],
    "operator/ternary": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "131.2083-successive-conditions.py"
    ],
    "pattern/elements/accumulate/in_list/filtered": [
      "119.3263-deduplicate-list.py"
    ],
    "pattern/elements/accumulate/in_set/filtered": [
      "119.3263-deduplicate-list.py"
    ],
    "subroutine/argument/arg": [
      "003.19-create-a-procedure.py",
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "017.1103-create-a-tree-data-structure.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "020.573-return-two-values.py",
      "028.350-sort-by-a-property.py",
      "031.188-recursive-factorial-simple.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "073.673-create-a-factory.py",
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py",
      "090.1099-read-only-outside.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "104.3264-save-object-into-xml-file.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "187.3261-disjoint-set.py"
    ],
    "subroutine/argument/no": [
      "003.2372-create-a-procedure.py",
      "126.2137-multiple-return-values.py"
    ],
    "subroutine/argument/vararg": [
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py"
    ],
    "subroutine/decorated": [
      "090.1099-read-only-outside.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "subroutine/function": [
      "004.24-create-a-function-which-returns-the-square-of-an-integer.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py",
      "020.573-return-two-values.py",
      "031.188-recursive-factorial-simple.py",
      "032.196-integer-exponentiation-by-squaring.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "037.671-currying.py",
      "043.2733-break-outer-loop.py",
      "067.1426-binomial-coefficient-n-choose-k.py",
      "073.673-create-a-factory.py",
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py",
      "090.1099-read-only-outside.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "126.2137-multiple-return-values.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "187.3261-disjoint-set.py"
    ],
    "subroutine/higher_order": [
      "018.2084-depth-first-traversing-of-a-tree.py",
      "035.667-first-class-function--compose.py",
      "036.670-first-class-function--generic-composition.py",
      "073.673-create-a-factory.py",
      "093.1082-pass-a-runnable-procedure-as-parameter.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "subroutine/method/flavor/class": [
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "subroutine/method/flavor/instance": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "subroutine/method/naming/magic": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "subroutine/nested/closure": [
      "037.671-currying.py"
    ],
    "subroutine/predicate": [
      "187.3261-disjoint-set.py"
    ],
    "subroutine/procedure": [
      "003.19-create-a-procedure.py",
      "003.2372-create-a-procedure.py",
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "017.1103-create-a-tree-data-structure.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "040.2279-graph-with-adjacency-lists.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "159.2281-trie.py",
      "187.3261-disjoint-set.py"
    ],
    "subroutine/recursive": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "subroutine/recursive/body": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "018.2084-depth-first-traversing-of-a-tree.py",
      "031.188-recursive-factorial-simple.py"
    ],
    "subscript/index": [
      "029.199-remove-item-from-list-by-its-index.py",
      "040.2279-graph-with-adjacency-lists.py",
      "043.676-break-outer-loop.py",
      "060.1084-read-command-line-argument.py",
      "105.1804-current-executable-name.py",
      "112.2144-iterate-over-map-entries-ordered-by-keys.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "165.2149-last-element-of-list.py",
      "168.2277-trim-suffix.py",
      "172.2442-insert-entry-in-map.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "187.3261-disjoint-set.py"
    ],
    "subscript/index/backwards/last": [
      "165.2149-last-element-of-list.py"
    ],
    "subscript/slice/start": [
      "038.186-extract-a-substring.py",
      "040.2279-graph-with-adjacency-lists.py",
      "047.198-extract-string-suffix.py",
      "071.379-echo-program-implementation.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "167.2611-trim-prefix.py"
    ],
    "subscript/slice/step": [
      "163.2170-print-list-elements-by-group-of-2.py"
    ],
    "subscript/slice/step/backwards": [
      "019.1983-reverse-a-list.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py"
    ],
    "subscript/slice/stop": [
      "038.186-extract-a-substring.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "test/belonging": [
      "012.181-check-if-list-contains-a-value.py",
      "020.573-return-two-values.py",
      "039.571-check-if-string-contains-a-word.py",
      "051.230-check-if-map-contains-key.py",
      "052.666-check-if-map-contains-value.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "133.2160-case-insensitive-string-contains.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "test/belonging/not": [
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "test/equality": [
      "031.188-recursive-factorial-simple.py",
      "042.1264-continue-outer-loop.py",
      "042.3168-continue-outer-loop.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "110.1455-check-if-string-is-blank.py",
      "114.2273-test-deep-equality.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "187.3261-disjoint-set.py"
    ],
    "test/equality/not": [
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py"
    ],
    "test/identity": [
      "016.1530-depth-first-traversing-of-a-binary-tree.py"
    ],
    "test/inequality": [
      "115.2138-compare-dates.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "178.2615-check-if-point-is-inside-rectangle.py",
      "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py"
    ],
    "test/inequality/chained/2": [
      "178.2615-check-if-point-is-inside-rectangle.py"
    ],
    "type/container/dictionary": [
      "008.39-initialize-a-new-map-associative-array.py"
    ],
    "type/container/dictionary/empty": [
      "183.3025-make-http-put-request.py"
    ],
    "type/container/list": [
      "017.1103-create-a-tree-data-structure.py",
      "043.2733-break-outer-loop.py",
      "111.2168-launch-other-program.py",
      "119.1253-deduplicate-list.py",
      "119.3263-deduplicate-list.py",
      "148.1829-read-list-of-integer-numbers-from-stdin.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "187.3261-disjoint-set.py"
    ],
    "type/container/list/empty": [
      "119.3263-deduplicate-list.py",
      "159.2281-trie.py"
    ],
    "type/container/set": [
      "034.625-create-a-set-of-objects.py",
      "118.1254-list-to-set.py",
      "118.3266-list-to-set.py",
      "119.1253-deduplicate-list.py"
    ],
    "type/container/set/empty": [
      "119.3263-deduplicate-list.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py"
    ],
    "type/container/tuple": [
      "040.2279-graph-with-adjacency-lists.py",
      "043.2733-break-outer-loop.py",
      "126.2137-multiple-return-values.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "type/container/tuple/assignment": [
      "102.2173-load-from-http-get-request-into-a-file.py",
      "121.3029-udp-listen-and-read.py",
      "122.1453-declare-enumeration.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "183.3025-make-http-put-request.py",
      "187.3261-disjoint-set.py"
    ],
    "type/container/tuple/assignment/swap": [
      "021.84-swap-values-of-variables-a-and-b.py"
    ],
    "type/elementary/boolean/false": [
      "085.1003-check-if-integer-addition-will-overflow.py",
      "086.1004-check-if-integer-multiplication-will-overflow.py"
    ],
    "type/elementary/boolean/true": [
      "025.195-send-a-value-to-another-thread.py",
      "050.572-make-an-infinite-loop.py",
      "078.1089-do-while-loop.py",
      "121.3029-udp-listen-and-read.py",
      "126.2137-multiple-return-values.py",
      "128.2085-breadth-first-traversing-of-a-tree.py"
    ],
    "type/elementary/null": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "016.1530-depth-first-traversing-of-a-binary-tree.py",
      "043.2733-break-outer-loop.py",
      "043.676-break-outer-loop.py",
      "104.3264-save-object-into-xml-file.py",
      "131.2083-successive-conditions.py",
      "140.2156-delete-map-entry.py",
      "159.2281-trie.py",
      "163.3177-print-list-elements-by-group-of-2.py"
    ],
    "type/elementary/number/complex": [
      "077.1093-complex-number.py"
    ],
    "type/elementary/number/floating_point": [
      "068.2271-create-a-bitset.py",
      "079.1090-convert-integer-to-floating-point-number.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "146.1826-convert-string-to-floating-point-number.py",
      "146.2739-convert-string-to-floating-point-number.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "type/elementary/number/integer": [
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "004.2921-create-a-function-which-returns-the-square-of-an-integer.py",
      "008.39-initialize-a-new-map-associative-array.py",
      "019.1983-reverse-a-list.py",
      "022.243-convert-string-to-integer.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "031.188-recursive-factorial-simple.py",
      "037.671-currying.py",
      "040.2279-graph-with-adjacency-lists.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "043.2733-break-outer-loop.py",
      "045.570-pause-execution-for-5-seconds.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "060.1084-read-command-line-argument.py",
      "064.274-big-integer--value-3-power-247.py",
      "068.2271-create-a-bitset.py",
      "071.379-echo-program-implementation.py",
      "077.1093-complex-number.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "087.1139-stop-program.py",
      "088.2143-allocate-1m-bytes.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "120.1479-read-integer-from-stdin.py",
      "121.3029-udp-listen-and-read.py",
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "160.2165-detect-if-32-bit-or-64-bit-architecture.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "163.2170-print-list-elements-by-group-of-2.py",
      "165.2149-last-element-of-list.py",
      "168.2277-trim-suffix.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py",
      "184.2701-tomorrow.py",
      "185.2820-execute-function-in-30-seconds.py"
    ],
    "type/elementary/number/integer/zero": [
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "031.188-recursive-factorial-simple.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "105.1804-current-executable-name.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "168.2277-trim-suffix.py",
      "186.2699-exit-program-cleanly.py",
      "187.3261-disjoint-set.py"
    ],
    "type/elementary/string": [
      "001.1159-print-hello-world.py",
      "001.3-print-hello-world.py",
      "002.11-print-hello-10-times.py",
      "002.1493-print-hello-10-times.py",
      "002.3117-print-hello-10-times.py",
      "003.19-create-a-procedure.py",
      "008.39-initialize-a-new-map-associative-array.py",
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "024.664-assign-to-string-the-japanese-word-.py",
      "025.195-send-a-value-to-another-thread.py",
      "041.187-reverse-a-string.py",
      "048.210-multi-line-string-literal.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "055.575-convert-integer-to-string.py",
      "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py",
      "059.668-write-to-standard-error-stream.py",
      "065.1085-format-decimal-number.py",
      "071.379-echo-program-implementation.py",
      "076.1083-binary-digits-from-an-integer.py",
      "083.1805-regex-with-character-repetition.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "089.1097-handle-invalid-argument.py",
      "091.1098-load-json-file-into-struct.py",
      "092.1100-save-object-into-json-file.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "103.2276-load-xml-file-into-struct.py",
      "104.3264-save-object-into-xml-file.py",
      "108.1291-determine-if-variable-name-is-defined.py",
      "111.2168-launch-other-program.py",
      "119.3263-deduplicate-list.py",
      "120.1479-read-integer-from-stdin.py",
      "121.3029-udp-listen-and-read.py",
      "125.2167-measure-function-call-duration.py",
      "126.2137-multiple-return-values.py",
      "127.2274-source-code-inclusion.py",
      "132.2040-measure-duration-of-procedure-execution.py",
      "145.1822-print-log-line-with-datetime.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "146.2739-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "150.2154-remove-trailing-slash.py",
      "153.1980-concatenate-string-with-integer.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "156.2148-format-integer-with-zero-padding.py",
      "157.2150-declare-constant-string.py",
      "162.2164-execute-procedures-depending-on-options.py",
      "173.2427-format-a-number-with-grouped-thousands.py",
      "173.2428-format-a-number-with-grouped-thousands.py",
      "173.2429-format-a-number-with-grouped-thousands.py",
      "174.2687-make-http-post-request.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "177.3241-find-files-with-a-given-list-of-filename-extensions.py",
      "179.2689-get-center-of-a-rectangle.py",
      "182.2658-quine-program.py",
      "183.3025-make-http-put-request.py"
    ],
    "type/elementary/string/empty": [
      "110.1455-check-if-string-is-blank.py",
      "116.1257-remove-occurrences-of-word-from-string.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "154.2292-halfway-between-two-hex-color-codes.py"
    ],
    "variable/assignment": [
      "009.1410-create-a-binary-tree-data-structure.py",
      "009.3176-create-a-binary-tree-data-structure.py",
      "017.1103-create-a-tree-data-structure.py",
      "025.195-send-a-value-to-another-thread.py",
      "040.2279-graph-with-adjacency-lists.py",
      "090.1099-read-only-outside.py",
      "104.3264-save-object-into-xml-file.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "159.2281-trie.py",
      "172.2442-insert-entry-in-map.py",
      "187.3261-disjoint-set.py"
    ],
    "variable/assignment/constant": [
      "040.2279-graph-with-adjacency-lists.py",
      "121.3029-udp-listen-and-read.py",
      "122.1453-declare-enumeration.py",
      "122.1454-declare-enumeration.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "157.2150-declare-constant-string.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py"
    ],
    "variable/assignment/parallel/2": [
      "021.84-swap-values-of-variables-a-and-b.py",
      "102.2173-load-from-http-get-request-into-a-file.py",
      "121.3029-udp-listen-and-read.py",
      "163.3177-print-list-elements-by-group-of-2.py",
      "183.3025-make-http-put-request.py",
      "187.3261-disjoint-set.py"
    ],
    "variable/assignment/parallel/3": [
      "154.2155-halfway-between-two-hex-color-codes.py"
    ],
    "variable/assignment/parallel/4": [
      "122.1453-declare-enumeration.py"
    ],
    "variable/assignment/single": [
      "008.39-initialize-a-new-map-associative-array.py",
      "019.197-reverse-a-list.py",
      "019.1983-reverse-a-list.py",
      "022.243-convert-string-to-integer.py",
      "023.1102-convert-real-number-to-string-with-2-decimal-places.py",
      "024.664-assign-to-string-the-japanese-word-.py",
      "025.195-send-a-value-to-another-thread.py",
      "026.194-create-a-2-dimensional-array.py",
      "027.192-create-a-3-dimensional-array.py",
      "027.193-create-a-3-dimensional-array.py",
      "028.350-sort-by-a-property.py",
      "030.189-parallelize-execution-of-1000-independent-tasks.py",
      "033.1420-atomically-read-and-update-variable.py",
      "034.625-create-a-set-of-objects.py",
      "038.186-extract-a-substring.py",
      "039.571-check-if-string-contains-a-word.py",
      "040.2279-graph-with-adjacency-lists.py",
      "041.187-reverse-a-string.py",
      "041.2714-reverse-a-string.py",
      "043.676-break-outer-loop.py",
      "046.191-extract-beginning-of-string-prefix.py",
      "047.198-extract-string-suffix.py",
      "048.210-multi-line-string-literal.py",
      "049.242-split-a-space-separated-string.py",
      "053.1933-join-a-list-of-strings.py",
      "053.240-join-a-list-of-strings.py",
      "054.241-compute-sum-of-integers.py",
      "055.575-convert-integer-to-string.py",
      "057.260-filter-list.py",
      "057.3173-filter-list.py",
      "058.665-extract-file-content-to-a-string.py",
      "060.1084-read-command-line-argument.py",
      "061.576-get-current-date.py",
      "062.1091-find-substring-position.py",
      "063.1088-replace-fragment-of-a-string.py",
      "064.274-big-integer--value-3-power-247.py",
      "065.1085-format-decimal-number.py",
      "066.672-big-integer-exponentiation.py",
      "068.2271-create-a-bitset.py",
      "069.1086-seed-random-generator.py",
      "070.1087-use-clock-as-random-generator-seed.py",
      "074.674-compute-gcd.py",
      "075.675-compute-lcm.py",
      "076.1083-binary-digits-from-an-integer.py",
      "077.1093-complex-number.py",
      "079.1090-convert-integer-to-floating-point-number.py",
      "080.1092-truncate-floating-point-number-to-integer.py",
      "081.2270-round-floating-point-number-to-integer.py",
      "082.1096-count-substring-occurrences.py",
      "083.1805-regex-with-character-repetition.py",
      "084.1940-count-bits-set-in-integer-binary-representation.py",
      "088.2143-allocate-1m-bytes.py",
      "091.1098-load-json-file-into-struct.py",
      "095.2140-get-file-size.py",
      "096.1094-check-string-prefix.py",
      "097.1095-check-string-suffix.py",
      "098.2142-epoch-seconds-to-date-object.py",
      "099.1429-format-date-yyyy-mm-dd.py",
      "099.2693-format-date-yyyy-mm-dd.py",
      "101.2172-load-from-http-get-request-into-a-string.py",
      "103.2276-load-xml-file-into-struct.py",
      "104.3264-save-object-into-xml-file.py",
      "105.1804-current-executable-name.py",
      "106.2039-get-program-working-directory.py",
      "107.2139-get-folder-containing-current-program.py",
      "109.2280-number-of-bytes-of-a-type.py",
      "110.1455-check-if-string-is-blank.py",
      "114.2273-test-deep-equality.py",
      "115.2138-compare-dates.py",
      "116.1257-remove-occurrences-of-word-from-string.py",
      "117.1297-get-list-size.py",
      "118.1254-list-to-set.py",
      "119.1253-deduplicate-list.py",
      "119.3263-deduplicate-list.py",
      "120.1479-read-integer-from-stdin.py",
      "121.3029-udp-listen-and-read.py",
      "122.1454-declare-enumeration.py",
      "124.2152-binary-search-for-a-value-in-sorted-array.py",
      "125.2167-measure-function-call-duration.py",
      "127.2274-source-code-inclusion.py",
      "128.2085-breadth-first-traversing-of-a-tree.py",
      "129.2282-breadth-first-traversing-in-a-graph.py",
      "130.2283-depth-first-traversing-in-a-graph.py",
      "132.2040-measure-duration-of-procedure-execution.py",
      "133.2160-case-insensitive-string-contains.py",
      "134.1850-create-a-new-list.py",
      "136.2141-remove-all-occurrences-of-a-value-from-a-list.py",
      "137.1823-check-if-string-contains-only-digits.py",
      "138.2161-create-temp-file.py",
      "139.2162-create-temp-directory.py",
      "142.2151-hexadecimal-digits-of-an-integer.py",
      "144.2145-check-if-file-exists.py",
      "144.2915-check-if-file-exists.py",
      "145.1822-print-log-line-with-datetime.py",
      "146.1825-convert-string-to-floating-point-number.py",
      "146.1826-convert-string-to-floating-point-number.py",
      "147.2171-remove-all-non-ascii-characters.py",
      "150.2154-remove-trailing-slash.py",
      "151.2166-remove-string-trailing-path-separator.py",
      "152.2153-turn-a-character-into-a-string.py",
      "153.1980-concatenate-string-with-integer.py",
      "154.2155-halfway-between-two-hex-color-codes.py",
      "154.2292-halfway-between-two-hex-color-codes.py",
      "155.2147-delete-file.py",
      "156.2148-format-integer-with-zero-padding.py",
      "157.2150-declare-constant-string.py",
      "158.2163-random-sublist.py",
      "161.2098-multiply-all-the-elements-of-a-list.py",
      "165.2149-last-element-of-list.py",
      "166.2272-concatenate-two-lists.py",
      "167.2611-trim-prefix.py",
      "167.3175-trim-prefix.py",
      "168.2277-trim-suffix.py",
      "168.3174-trim-suffix.py",
      "169.2233-string-length.py",
      "170.2275-get-map-size.py",
      "174.2687-make-http-post-request.py",
      "175.2613-bytes-to-hex-string.py",
      "176.2614-hex-string-to-byte-array.py",
      "177.2709-find-files-with-a-given-list-of-filename-extensions.py",
      "177.2725-find-files-with-a-given-list-of-filename-extensions.py",
      "178.2615-check-if-point-is-inside-rectangle.py",
      "179.2688-get-center-of-a-rectangle.py",
      "179.2689-get-center-of-a-rectangle.py",
      "180.2612-list-files-in-directory.py",
      "182.2658-quine-program.py",
      "183.3025-make-http-put-request.py",
      "185.2820-execute-function-in-30-seconds.py",
      "188.3171-matrix-multiplication.py",
      "188.3284-matrix-multiplication.py",
      "189.3236-filter-and-transform-list.py",
      "197.3457-get-a-list-of-lines-from-a-file.py"
    ]
  },
  "importations": {
    "001.1159-print-hello-world.py": [],
    "001.3-print-hello-world.py": [],
    "002.11-print-hello-10-times.py": [],
    "002.1493-print-hello-10-times.py": [],
    "002.3117-print-hello-10-times.py": [],
    "003.19-create-a-procedure.py": [],
    "003.2372-create-a-procedure.py": [],
    "004.24-create-a-function-which-returns-the-square-of-an-integer.py": [],
    "004.2921-create-a-function-which-returns-the-square-of-an-integer.py": [],
    "005.663-create-a-2d-point-data-structure.py": [],
    "006.32-iterate-over-list-values.py": [],
    "007.183-iterate-over-list-indexes-and-values.py": [],
    "008.39-initialize-a-new-map-associative-array.py": [],
    "009.1410-create-a-binary-tree-data-structure.py": [],
    "009.3176-create-a-binary-tree-data-structure.py": [],
    "010.1478-shuffle-a-list.py": [],
    "010.182-shuffle-a-list.py": [],
    "011.47-pick-a-random-element-from-a-list.py": [],
    "012.181-check-if-list-contains-a-value.py": [],
    "013.574-iterate-over-map-keys-and-values.py": [],
    "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py": [],
    "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py": [],
    "015.184-pick-uniformly-a-random-integer-in-ab.py": [],
    "016.1530-depth-first-traversing-of-a-binary-tree.py": [],
    "017.1103-create-a-tree-data-structure.py": [],
    "018.2084-depth-first-traversing-of-a-tree.py": [],
    "019.197-reverse-a-list.py": [],
    "019.1983-reverse-a-list.py": [],
    "019.3164-reverse-a-list.py": [],
    "020.573-return-two-values.py": [],
    "021.84-swap-values-of-variables-a-and-b.py": [],
    "022.243-convert-string-to-integer.py": [],
    "023.1102-convert-real-number-to-string-with-2-decimal-places.py": [],
    "024.664-assign-to-string-the-japanese-word-.py": [],
    "025.195-send-a-value-to-another-thread.py": [],
    "026.194-create-a-2-dimensional-array.py": [],
    "027.192-create-a-3-dimensional-array.py": [],
    "027.193-create-a-3-dimensional-array.py": [],
    "028.350-sort-by-a-property.py": [],
    "029.199-remove-item-from-list-by-its-index.py": [],
    "030.189-parallelize-execution-of-1000-independent-tasks.py": [],
    "031.188-recursive-factorial-simple.py": [],
    "032.196-integer-exponentiation-by-squaring.py": [],
    "033.1420-atomically-read-and-update-variable.py": [],
    "034.625-create-a-set-of-objects.py": [],
    "035.667-first-class-function--compose.py": [],
    "036.670-first-class-function--generic-composition.py": [],
    "037.671-currying.py": [],
    "038.186-extract-a-substring.py": [],
    "039.571-check-if-string-contains-a-word.py": [],
    "040.2279-graph-with-adjacency-lists.py": [],
    "041.187-reverse-a-string.py": [],
    "041.2714-reverse-a-string.py": [],
    "042.1264-continue-outer-loop.py": [],
    "042.3168-continue-outer-loop.py": [],
    "043.2733-break-outer-loop.py": [],
    "043.676-break-outer-loop.py": [],
    "044.190-insert-element-in-list.py": [],
    "045.570-pause-execution-for-5-seconds.py": [],
    "046.191-extract-beginning-of-string-prefix.py": [],
    "047.198-extract-string-suffix.py": [],
    "048.210-multi-line-string-literal.py": [],
    "049.242-split-a-space-separated-string.py": [],
    "050.572-make-an-infinite-loop.py": [],
    "051.230-check-if-map-contains-key.py": [],
    "052.666-check-if-map-contains-value.py": [],
    "053.1933-join-a-list-of-strings.py": [],
    "053.240-join-a-list-of-strings.py": [],
    "054.241-compute-sum-of-integers.py": [],
    "055.575-convert-integer-to-string.py": [],
    "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py": [],
    "057.260-filter-list.py": [],
    "057.3173-filter-list.py": [],
    "058.665-extract-file-content-to-a-string.py": [],
    "059.668-write-to-standard-error-stream.py": [],
    "060.1084-read-command-line-argument.py": [],
    "061.576-get-current-date.py": [],
    "062.1091-find-substring-position.py": [],
    "063.1088-replace-fragment-of-a-string.py": [],
    "064.274-big-integer--value-3-power-247.py": [],
    "065.1085-format-decimal-number.py": [],
    "066.672-big-integer-exponentiation.py": [],
    "067.1426-binomial-coefficient-n-choose-k.py": [],
    "068.2271-create-a-bitset.py": [],
    "069.1086-seed-random-generator.py": [],
    "070.1087-use-clock-as-random-generator-seed.py": [],
    "071.379-echo-program-implementation.py": [],
    "073.673-create-a-factory.py": [],
    "074.674-compute-gcd.py": [],
    "075.675-compute-lcm.py": [],
    "076.1083-binary-digits-from-an-integer.py": [],
    "077.1093-complex-number.py": [],
    "078.1089-do-while-loop.py": [],
    "079.1090-convert-integer-to-floating-point-number.py": [],
    "080.1092-truncate-floating-point-number-to-integer.py": [],
    "081.2270-round-floating-point-number-to-integer.py": [],
    "082.1096-count-substring-occurrences.py": [],
    "083.1805-regex-with-character-repetition.py": [],
    "084.1940-count-bits-set-in-integer-binary-representation.py": [],
    "085.1003-check-if-integer-addition-will-overflow.py": [],
    "086.1004-check-if-integer-multiplication-will-overflow.py": [],
    "087.1139-stop-program.py": [],
    "088.2143-allocate-1m-bytes.py": [],
    "089.1097-handle-invalid-argument.py": [],
    "090.1099-read-only-outside.py": [],
    "091.1098-load-json-file-into-struct.py": [],
    "092.1100-save-object-into-json-file.py": [],
    "093.1082-pass-a-runnable-procedure-as-parameter.py": [],
    "094.1101-print-type-of-variable.py": [],
    "094.1864-print-type-of-variable.py": [],
    "095.2140-get-file-size.py": [],
    "096.1094-check-string-prefix.py": [],
    "097.1095-check-string-suffix.py": [],
    "098.2142-epoch-seconds-to-date-object.py": [],
    "099.1429-format-date-yyyy-mm-dd.py": [],
    "099.2693-format-date-yyyy-mm-dd.py": [],
    "100.1142-sort-by-a-comparator.py": [],
    "101.2172-load-from-http-get-request-into-a-string.py": [],
    "102.2173-load-from-http-get-request-into-a-file.py": [],
    "103.2276-load-xml-file-into-struct.py": [],
    "104.3264-save-object-into-xml-file.py": [],
    "105.1804-current-executable-name.py": [],
    "106.2039-get-program-working-directory.py": [],
    "107.2139-get-folder-containing-current-program.py": [],
    "108.1291-determine-if-variable-name-is-defined.py": [],
    "109.2280-number-of-bytes-of-a-type.py": [],
    "110.1455-check-if-string-is-blank.py": [],
    "111.2168-launch-other-program.py": [],
    "112.2144-iterate-over-map-entries-ordered-by-keys.py": [],
    "113.2157-iterate-over-map-entries-ordered-by-values.py": [],
    "114.2273-test-deep-equality.py": [],
    "115.2138-compare-dates.py": [],
    "116.1257-remove-occurrences-of-word-from-string.py": [],
    "117.1297-get-list-size.py": [],
    "118.1254-list-to-set.py": [],
    "118.3266-list-to-set.py": [],
    "119.1253-deduplicate-list.py": [],
    "119.3263-deduplicate-list.py": [],
    "120.1479-read-integer-from-stdin.py": [],
    "121.3029-udp-listen-and-read.py": [],
    "122.1453-declare-enumeration.py": [],
    "122.1454-declare-enumeration.py": [],
    "123.2146-assert-condition.py": [],
    "124.2152-binary-search-for-a-value-in-sorted-array.py": [],
    "125.2167-measure-function-call-duration.py": [],
    "126.2137-multiple-return-values.py": [],
    "127.2274-source-code-inclusion.py": [],
    "128.2085-breadth-first-traversing-of-a-tree.py": [],
    "129.2282-breadth-first-traversing-in-a-graph.py": [],
    "130.2283-depth-first-traversing-in-a-graph.py": [],
    "131.2083-successive-conditions.py": [],
    "131.2766-successive-conditions.py": [],
    "132.2040-measure-duration-of-procedure-execution.py": [],
    "133.2160-case-insensitive-string-contains.py": [],
    "134.1850-create-a-new-list.py": [],
    "135.2158-remove-item-from-list-by-its-value.py": [],
    "136.2141-remove-all-occurrences-of-a-value-from-a-list.py": [],
    "137.1823-check-if-string-contains-only-digits.py": [],
    "138.2161-create-temp-file.py": [],
    "139.2162-create-temp-directory.py": [],
    "140.2156-delete-map-entry.py": [],
    "141.2159-iterate-in-sequence-over-two-lists.py": [],
    "142.2151-hexadecimal-digits-of-an-integer.py": [],
    "143.2256-iterate-alternatively-over-two-lists.py": [],
    "144.2145-check-if-file-exists.py": [],
    "144.2915-check-if-file-exists.py": [],
    "145.1822-print-log-line-with-datetime.py": [],
    "146.1825-convert-string-to-floating-point-number.py": [],
    "146.1826-convert-string-to-floating-point-number.py": [],
    "146.2739-convert-string-to-floating-point-number.py": [],
    "147.2171-remove-all-non-ascii-characters.py": [],
    "148.1829-read-list-of-integer-numbers-from-stdin.py": [],
    "150.2154-remove-trailing-slash.py": [],
    "151.2166-remove-string-trailing-path-separator.py": [],
    "152.2153-turn-a-character-into-a-string.py": [],
    "153.1980-concatenate-string-with-integer.py": [],
    "154.2155-halfway-between-two-hex-color-codes.py": [],
    "154.2292-halfway-between-two-hex-color-codes.py": [],
    "155.2147-delete-file.py": [],
    "156.2148-format-integer-with-zero-padding.py": [],
    "157.2150-declare-constant-string.py": [],
    "158.2163-random-sublist.py": [],
    "159.2281-trie.py": [],
    "160.2165-detect-if-32-bit-or-64-bit-architecture.py": [],
    "161.2098-multiply-all-the-elements-of-a-list.py": [],
    "162.2164-execute-procedures-depending-on-options.py": [],
    "163.2170-print-list-elements-by-group-of-2.py": [],
    "163.3177-print-list-elements-by-group-of-2.py": [],
    "164.2169-open-url-in-default-browser.py": [],
    "165.2149-last-element-of-list.py": [],
    "166.2272-concatenate-two-lists.py": [],
    "167.2611-trim-prefix.py": [],
    "167.3175-trim-prefix.py": [],
    "168.2277-trim-suffix.py": [],
    "168.3174-trim-suffix.py": [],
    "169.2233-string-length.py": [],
    "170.2275-get-map-size.py": [],
    "171.2446-add-an-element-at-the-end-of-a-list.py": [],
    "172.2442-insert-entry-in-map.py": [],
    "173.2427-format-a-number-with-grouped-thousands.py": [],
    "173.2428-format-a-number-with-grouped-thousands.py": [],
    "173.2429-format-a-number-with-grouped-thousands.py": [],
    "174.2687-make-http-post-request.py": [],
    "175.2613-bytes-to-hex-string.py": [],
    "176.2614-hex-string-to-byte-array.py": [],
    "177.2709-find-files-with-a-given-list-of-filename-extensions.py": [],
    "177.2725-find-files-with-a-given-list-of-filename-extensions.py": [],
    "177.3241-find-files-with-a-given-list-of-filename-extensions.py": [],
    "178.2615-check-if-point-is-inside-rectangle.py": [],
    "179.2688-get-center-of-a-rectangle.py": [],
    "179.2689-get-center-of-a-rectangle.py": [],
    "180.2612-list-files-in-directory.py": [],
    "182.2658-quine-program.py": [],
    "183.3025-make-http-put-request.py": [],
    "184.2701-tomorrow.py": [],
    "185.2820-execute-function-in-30-seconds.py": [],
    "186.2699-exit-program-cleanly.py": [],
    "187.3261-disjoint-set.py": [],
    "188.3171-matrix-multiplication.py": [],
    "188.3284-matrix-multiplication.py": [],
    "189.3236-filter-and-transform-list.py": [],
    "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py": [],
    "197.3457-get-a-list-of-lines-from-a-file.py": []
  },
  "exportations": {
    "001.1159-print-hello-world.py": [],
    "001.3-print-hello-world.py": [],
    "002.11-print-hello-10-times.py": [],
    "002.1493-print-hello-10-times.py": [],
    "002.3117-print-hello-10-times.py": [],
    "003.19-create-a-procedure.py": [],
    "003.2372-create-a-procedure.py": [],
    "004.24-create-a-function-which-returns-the-square-of-an-integer.py": [],
    "004.2921-create-a-function-which-returns-the-square-of-an-integer.py": [],
    "005.663-create-a-2d-point-data-structure.py": [],
    "006.32-iterate-over-list-values.py": [],
    "007.183-iterate-over-list-indexes-and-values.py": [],
    "008.39-initialize-a-new-map-associative-array.py": [],
    "009.1410-create-a-binary-tree-data-structure.py": [],
    "009.3176-create-a-binary-tree-data-structure.py": [],
    "010.1478-shuffle-a-list.py": [],
    "010.182-shuffle-a-list.py": [],
    "011.47-pick-a-random-element-from-a-list.py": [],
    "012.181-check-if-list-contains-a-value.py": [],
    "013.574-iterate-over-map-keys-and-values.py": [],
    "014.185-pick-uniformly-a-random-floating-point-number-in-ab.py": [],
    "014.3410-pick-uniformly-a-random-floating-point-number-in-ab.py": [],
    "015.184-pick-uniformly-a-random-integer-in-ab.py": [],
    "016.1530-depth-first-traversing-of-a-binary-tree.py": [],
    "017.1103-create-a-tree-data-structure.py": [],
    "018.2084-depth-first-traversing-of-a-tree.py": [],
    "019.197-reverse-a-list.py": [],
    "019.1983-reverse-a-list.py": [],
    "019.3164-reverse-a-list.py": [],
    "020.573-return-two-values.py": [],
    "021.84-swap-values-of-variables-a-and-b.py": [],
    "022.243-convert-string-to-integer.py": [],
    "023.1102-convert-real-number-to-string-with-2-decimal-places.py": [],
    "024.664-assign-to-string-the-japanese-word-.py": [],
    "025.195-send-a-value-to-another-thread.py": [],
    "026.194-create-a-2-dimensional-array.py": [],
    "027.192-create-a-3-dimensional-array.py": [],
    "027.193-create-a-3-dimensional-array.py": [],
    "028.350-sort-by-a-property.py": [],
    "029.199-remove-item-from-list-by-its-index.py": [],
    "030.189-parallelize-execution-of-1000-independent-tasks.py": [],
    "031.188-recursive-factorial-simple.py": [],
    "032.196-integer-exponentiation-by-squaring.py": [],
    "033.1420-atomically-read-and-update-variable.py": [],
    "034.625-create-a-set-of-objects.py": [],
    "035.667-first-class-function--compose.py": [],
    "036.670-first-class-function--generic-composition.py": [],
    "037.671-currying.py": [],
    "038.186-extract-a-substring.py": [],
    "039.571-check-if-string-contains-a-word.py": [],
    "040.2279-graph-with-adjacency-lists.py": [],
    "041.187-reverse-a-string.py": [],
    "041.2714-reverse-a-string.py": [],
    "042.1264-continue-outer-loop.py": [],
    "042.3168-continue-outer-loop.py": [],
    "043.2733-break-outer-loop.py": [],
    "043.676-break-outer-loop.py": [],
    "044.190-insert-element-in-list.py": [],
    "045.570-pause-execution-for-5-seconds.py": [],
    "046.191-extract-beginning-of-string-prefix.py": [],
    "047.198-extract-string-suffix.py": [],
    "048.210-multi-line-string-literal.py": [],
    "049.242-split-a-space-separated-string.py": [],
    "050.572-make-an-infinite-loop.py": [],
    "051.230-check-if-map-contains-key.py": [],
    "052.666-check-if-map-contains-value.py": [],
    "053.1933-join-a-list-of-strings.py": [],
    "053.240-join-a-list-of-strings.py": [],
    "054.241-compute-sum-of-integers.py": [],
    "055.575-convert-integer-to-string.py": [],
    "056.1424-launch-1000-parallel-tasks-and-wait-for-completion.py": [],
    "057.260-filter-list.py": [],
    "057.3173-filter-list.py": [],
    "058.665-extract-file-content-to-a-string.py": [],
    "059.668-write-to-standard-error-stream.py": [],
    "060.1084-read-command-line-argument.py": [],
    "061.576-get-current-date.py": [],
    "062.1091-find-substring-position.py": [],
    "063.1088-replace-fragment-of-a-string.py": [],
    "064.274-big-integer--value-3-power-247.py": [],
    "065.1085-format-decimal-number.py": [],
    "066.672-big-integer-exponentiation.py": [],
    "067.1426-binomial-coefficient-n-choose-k.py": [],
    "068.2271-create-a-bitset.py": [],
    "069.1086-seed-random-generator.py": [],
    "070.1087-use-clock-as-random-generator-seed.py": [],
    "071.379-echo-program-implementation.py": [],
    "073.673-create-a-factory.py": [],
    "074.674-compute-gcd.py": [],
    "075.675-compute-lcm.py": [],
    "076.1083-binary-digits-from-an-integer.py": [],
    "077.1093-complex-number.py": [],
    "078.1089-do-while-loop.py": [],
    "079.1090-convert-integer-to-floating-point-number.py": [],
    "080.1092-truncate-floating-point-number-to-integer.py": [],
    "081.2270-round-floating-point-number-to-integer.py": [],
    "082.1096-count-substring-occurrences.py": [],
    "083.1805-regex-with-character-repetition.py": [],
    "084.1940-count-bits-set-in-integer-binary-representation.py": [],
    "085.1003-check-if-integer-addition-will-overflow.py": [],
    "086.1004-check-if-integer-multiplication-will-overflow.py": [],
    "087.1139-stop-program.py": [],
    "088.2143-allocate-1m-bytes.py": [],
    "089.1097-handle-invalid-argument.py": [],
    "090.1099-read-only-outside.py": [],
    "091.1098-load-json-file-into-struct.py": [],
    "092.1100-save-object-into-json-file.py": [],
    "093.1082-pass-a-runnable-procedure-as-parameter.py": [],
    "094.1101-print-type-of-variable.py": [],
    "094.1864-print-type-of-variable.py": [],
    "095.2140-get-file-size.py": [],
    "096.1094-check-string-prefix.py": [],
    "097.1095-check-string-suffix.py": [],
    "098.2142-epoch-seconds-to-date-object.py": [],
    "099.1429-format-date-yyyy-mm-dd.py": [],
    "099.2693-format-date-yyyy-mm-dd.py": [],
    "100.1142-sort-by-a-comparator.py": [],
    "101.2172-load-from-http-get-request-into-a-string.py": [],
    "102.2173-load-from-http-get-request-into-a-file.py": [],
    "103.2276-load-xml-file-into-struct.py": [],
    "104.3264-save-object-into-xml-file.py": [],
    "105.1804-current-executable-name.py": [],
    "106.2039-get-program-working-directory.py": [],
    "107.2139-get-folder-containing-current-program.py": [],
    "108.1291-determine-if-variable-name-is-defined.py": [],
    "109.2280-number-of-bytes-of-a-type.py": [],
    "110.1455-check-if-string-is-blank.py": [],
    "111.2168-launch-other-program.py": [],
    "112.2144-iterate-over-map-entries-ordered-by-keys.py": [],
    "113.2157-iterate-over-map-entries-ordered-by-values.py": [],
    "114.2273-test-deep-equality.py": [],
    "115.2138-compare-dates.py": [],
    "116.1257-remove-occurrences-of-word-from-string.py": [],
    "117.1297-get-list-size.py": [],
    "118.1254-list-to-set.py": [],
    "118.3266-list-to-set.py": [],
    "119.1253-deduplicate-list.py": [],
    "119.3263-deduplicate-list.py": [],
    "120.1479-read-integer-from-stdin.py": [],
    "121.3029-udp-listen-and-read.py": [],
    "122.1453-declare-enumeration.py": [],
    "122.1454-declare-enumeration.py": [],
    "123.2146-assert-condition.py": [],
    "124.2152-binary-search-for-a-value-in-sorted-array.py": [],
    "125.2167-measure-function-call-duration.py": [],
    "126.2137-multiple-return-values.py": [],
    "127.2274-source-code-inclusion.py": [],
    "128.2085-breadth-first-traversing-of-a-tree.py": [],
    "129.2282-breadth-first-traversing-in-a-graph.py": [],
    "130.2283-depth-first-traversing-in-a-graph.py": [],
    "131.2083-successive-conditions.py": [],
    "131.2766-successive-conditions.py": [],
    "132.2040-measure-duration-of-procedure-execution.py": [],
    "133.2160-case-insensitive-string-contains.py": [],
    "134.1850-create-a-new-list.py": [],
    "135.2158-remove-item-from-list-by-its-value.py": [],
    "136.2141-remove-all-occurrences-of-a-value-from-a-list.py": [],
    "137.1823-check-if-string-contains-only-digits.py": [],
    "138.2161-create-temp-file.py": [],
    "139.2162-create-temp-directory.py": [],
    "140.2156-delete-map-entry.py": [],
    "141.2159-iterate-in-sequence-over-two-lists.py": [],
    "142.2151-hexadecimal-digits-of-an-integer.py": [],
    "143.2256-iterate-alternatively-over-two-lists.py": [],
    "144.2145-check-if-file-exists.py": [],
    "144.2915-check-if-file-exists.py": [],
    "145.1822-print-log-line-with-datetime.py": [],
    "146.1825-convert-string-to-floating-point-number.py": [],
    "146.1826-convert-string-to-floating-point-number.py": [],
    "146.2739-convert-string-to-floating-point-number.py": [],
    "147.2171-remove-all-non-ascii-characters.py": [],
    "148.1829-read-list-of-integer-numbers-from-stdin.py": [],
    "150.2154-remove-trailing-slash.py": [],
    "151.2166-remove-string-trailing-path-separator.py": [],
    "152.2153-turn-a-character-into-a-string.py": [],
    "153.1980-concatenate-string-with-integer.py": [],
    "154.2155-halfway-between-two-hex-color-codes.py": [],
    "154.2292-halfway-between-two-hex-color-codes.py": [],
    "155.2147-delete-file.py": [],
    "156.2148-format-integer-with-zero-padding.py": [],
    "157.2150-declare-constant-string.py": [],
    "158.2163-random-sublist.py": [],
    "159.2281-trie.py": [],
    "160.2165-detect-if-32-bit-or-64-bit-architecture.py": [],
    "161.2098-multiply-all-the-elements-of-a-list.py": [],
    "162.2164-execute-procedures-depending-on-options.py": [],
    "163.2170-print-list-elements-by-group-of-2.py": [],
    "163.3177-print-list-elements-by-group-of-2.py": [],
    "164.2169-open-url-in-default-browser.py": [],
    "165.2149-last-element-of-list.py": [],
    "166.2272-concatenate-two-lists.py": [],
    "167.2611-trim-prefix.py": [],
    "167.3175-trim-prefix.py": [],
    "168.2277-trim-suffix.py": [],
    "168.3174-trim-suffix.py": [],
    "169.2233-string-length.py": [],
    "170.2275-get-map-size.py": [],
    "171.2446-add-an-element-at-the-end-of-a-list.py": [],
    "172.2442-insert-entry-in-map.py": [],
    "173.2427-format-a-number-with-grouped-thousands.py": [],
    "173.2428-format-a-number-with-grouped-thousands.py": [],
    "173.2429-format-a-number-with-grouped-thousands.py": [],
    "174.2687-make-http-post-request.py": [],
    "175.2613-bytes-to-hex-string.py": [],
    "176.2614-hex-string-to-byte-array.py": [],
    "177.2709-find-files-with-a-given-list-of-filename-extensions.py": [],
    "177.2725-find-files-with-a-given-list-of-filename-extensions.py": [],
    "177.3241-find-files-with-a-given-list-of-filename-extensions.py": [],
    "178.2615-check-if-point-is-inside-rectangle.py": [],
    "179.2688-get-center-of-a-rectangle.py": [],
    "179.2689-get-center-of-a-rectangle.py": [],
    "180.2612-list-files-in-directory.py": [],
    "182.2658-quine-program.py": [],
    "183.3025-make-http-put-request.py": [],
    "184.2701-tomorrow.py": [],
    "185.2820-execute-function-in-30-seconds.py": [],
    "186.2699-exit-program-cleanly.py": [],
    "187.3261-disjoint-set.py": [],
    "188.3171-matrix-multiplication.py": [],
    "188.3284-matrix-multiplication.py": [],
    "189.3236-filter-and-transform-list.py": [],
    "191.3403-check-if-any-value-in-a-list-is-larger-than-a-limit.py": [],
    "197.3457-get-a-list-of-lines-from-a-file.py": []
  }
}
